{"version":3,"sources":["components/survey/formbuilder/dropdown/DropDown.jsx","components/survey/formbuilder/researchsimulation/ResearchSimulation.jsx","helpers/bbcode.js","components/survey/formbuilder/selectfromrange/SelectFromRange.jsx","components/survey/formbuilder/slider/Slider.jsx","components/survey/formbuilder/textinput/TextInput.jsx","components/survey/formbuilder/FormBuilder.jsx","components/survey/simplemodal/SimpleModal.jsx","components/survey/SurveyManager.jsx","App.js","reportWebVitals.js","index.js"],"names":["DropDown","name","label","options","onValueSelect","className","onChange","map","opt","value","viewerStart","ResearchSimulation","onSearchHistoryChanged","useState","searchKeywords","setSearchKeywords","init","searchResults","setSearchResults","loggedActions","logAction","title","url","viewerIsOpen","docToView","setDocToView","controlData","setControlData","useEffect","axios","get","then","response","validRuleSet","ruleSet","researchSimulation","Error","config","cues","length","forEach","element","id","keywords","JSON","stringify","err","console","error","message","validateRuleSet","data","log","action","info","actions","push","time","Date","getTime","target","triggerSearch","e","res","toLowerCase","split","reduce","acc","kw","filter","item","indexOf","cue","autoFocus","onKeyPress","key","type","placeholder","disabled","clsx","onClick","Object","keys","k","now","durationOfView","durationInSec","src","frameBorder","scrolling","height","width","replaceBBCode","raw","last","replace","SelectFromRange","setCurrentValue","handleChange","dangerouslySetInnerHTML","__html","Slider","min","max","unit","onSlideChange","otherAttrs","Math","ceil","currentSliderValue","setCurrentSliderValue","TextInput","props","renderedElementId","FormBuilder","formSections","formName","onFormChanged","onFormCompleted","defaultValues","completedInputFields","setCompletedInputFields","isReadOnly","renderText","paragraphs","p","idx","formIsCompleted","isCompleted","section","requestedFieldsForSection","elements","el","isOptional","flat","reqFieldName","saveCurrentInputValue","xname","xvalue","ci","stashInput","renderPickVersion","numVersions","versions","choosenVersion","floor","random","module","renderIncludedElement","renderAside","sideElements","content","href","renderResearchSimulation","renderDropDown","renderSelectFromRange","otherAttributes","renderSlider","settings","text","renderHeadline","renderBoxedText","bPoints","renderBulletList","curVal","readOnly","onBlur","rows","defaultValue","renderTextInput","formContent","renderSections","secs","depth","sec","secIdx","sections","SimpleModal","buttons","onAccept","onReject","t","accept","reject","getPage","pageSet","pageId","pages","val","thisId","SurveyManager","currentPage","setCurrentPage","currentPageIsComplete","setCurrentPageIsComplete","surveyIsComplete","setSurveyIsComplete","surveyData","setSurveyData","show","modalContent","setModalContent","allowProceed","firstPage","rootPages","prevId","getFirstPage","triggerNextPage","nextId","confirmMoveForward","triggerPrevPage","formData","sData","backButton","allowMoveBack","renderBackButton","nextButton","labelNextPage","modalWindow","App","surveyControlData","setSurveyControlData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17f44c61.chunk.js","sourcesContent":["\r\nexport const DropDown = ({ name, label, options, onValueSelect, ...otherAttrs }) => {\r\n  return (\r\n    <div key={name} className=\"p-0 border border-solid\">\r\n      <div className=\"font-bold pb-5\">{label}</div>\r\n      <select name={name} onChange={onValueSelect}>\r\n        {options.map(opt => {\r\n          return <option value={opt.value}>{opt.label}</option>\r\n        })}\r\n      </select>\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport clsx from 'clsx'\r\n\r\nconst MIN_CHARS_FOR_SEARCH = 4\r\nlet viewerStart = null\r\n\r\nexport const ResearchSimulation = ({ name, onSearchHistoryChanged, ...otherAttrs }) => {\r\n  const [searchKeywords, setSearchKeywords] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState({ init: true })\r\n  const [loggedActions, logAction] = useState([])\r\n  const [docToView, setDocToView] = useState({ title: null, url: null, viewerIsOpen: false })\r\n  const [controlData, setControlData] = useState(null)\r\n\r\n  const validateRuleSet = (ruleSet) => {\r\n    if (!ruleSet?.researchSimulation) {\r\n      throw Error('Die Daten in research-simulation.json sind ungültig!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.config) {\r\n      throw Error('Abschnitt \"config: { ... }\" in research-simulation.json fehlt!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.cues?.length > 0) {\r\n      throw Error('Abschnitt \"cues\": [ ... ] in research-simulation.json fehlt oder ist leer!')\r\n    }\r\n\r\n    try {\r\n      ruleSet.researchSimulation.cues.forEach(element => {\r\n        const { id, title, keywords, url } = element\r\n\r\n        if (!id || typeof id !== \"number\") { throw Error(`Fehlendes oder ungültiges Attribute \"id\" (keine Zahl?) in ${JSON.stringify(element)}`) }\r\n        if (!title || typeof title !== \"string\" || title?.length < 1) { throw Error(`Fehlendes oder ungültiges Attribute \"title\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!keywords || !keywords?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"keywords\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!url || !url?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"url\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n      })\r\n    } catch (err) {\r\n      console.error(err)\r\n      throw JSON.stringify(err.message)\r\n    }\r\n\r\n    return ruleSet\r\n  }\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/research-simulation.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const getSearchResults = (keywords) => {\r\n    const kws = keywords.toLowerCase().split(';')\r\n\r\n    return kws.reduce((acc, kw) => {\r\n      if (kw.length === 0) return acc\r\n\r\n      const cues4Kw = controlData.researchSimulation?.cues.filter((item) => {\r\n        return item.keywords.toLowerCase().indexOf(kw) > -1\r\n      })\r\n\r\n      cues4Kw.forEach(cue => {\r\n        acc[cue.id] = cue\r\n      })\r\n\r\n      return acc\r\n    }, {})\r\n  }\r\n\r\n  const updateKeywords = (e) => {\r\n    setSearchKeywords(e.target.value)\r\n  }\r\n\r\n  // try {\r\n  //   ruleSetIsValid()\r\n  // }\r\n  // catch (err) {\r\n  //   return (<div className=\"bg-red-100 text-red-700 p-20\">\r\n  //     Die Daten in der JSON-Datei für das Modul \"Research Simulation\" sind ungültig.<br />\r\n  //     {JSON.parse(err)}\r\n  //   </div>)\r\n  // }\r\n\r\n  const log = (action, info) => {\r\n    const actions = loggedActions\r\n    actions.push({ time: new Date().getTime(), action, info })\r\n    logAction(actions)\r\n    onSearchHistoryChanged({ target: { name: name, value: actions } })\r\n  }\r\n\r\n  const triggerSearch = (e) => {\r\n    const res = getSearchResults(searchKeywords)\r\n    log('SEARCH', searchKeywords)\r\n    setSearchResults(res)\r\n  }\r\n\r\n  const getViewer = (cue) => () => {\r\n    log('OPEN', cue.url)\r\n    const now = new Date()\r\n    viewerStart = now.getTime()\r\n    setDocToView({ title: cue.title, url: cue.url, viewerIsOpen: true })\r\n  }\r\n\r\n  const closeViewer = (e) => {\r\n    const url = docToView.url\r\n    const now = new Date()\r\n    const durationOfView = now.getTime() - viewerStart\r\n    viewerStart = null\r\n    log('CLOSE', { url, durationInSec: durationOfView / 1000 })\r\n    setDocToView({ title: null, url: null, viewerIsOpen: false })\r\n  }\r\n\r\n  const handleEnterKey = (e) => {\r\n    if (e.key === 'Enter' && searchKeywords.length >= MIN_CHARS_FOR_SEARCH) {\r\n      triggerSearch()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <h1 className=\"text-3xl pb-4\">Recherche</h1>\r\n\r\n      <div className=\"bg-blue-50 shadow-md px-8 pt-6 pb-8 mb-4\">\r\n        <div className=\"mb-4\">\r\n          <input autoFocus onKeyPress={handleEnterKey} onChange={updateKeywords} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"keywords\" type=\"text\" placeholder={`Suchbegriffe (min. ${MIN_CHARS_FOR_SEARCH} Buchstaben) hier eingeben...`} />\r\n        </div>\r\n        <div className=\"flex items-center justify-between\">\r\n          <button disabled={searchKeywords.length < MIN_CHARS_FOR_SEARCH && 'disabled'} className={clsx({\r\n            \"bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": searchKeywords.length < MIN_CHARS_FOR_SEARCH,\r\n            \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": searchKeywords.length >= MIN_CHARS_FOR_SEARCH\r\n          })} type=\"button\" onClick={triggerSearch}>\r\n            Suchen\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).length === 0 && (\r\n        <div className=\"bg-gray-50 p-10 my-10\">\r\n          <div>Wir haben leider keine passenden Ergebnisse zu Ihrer Suchanfrage gefunden... Bitte versuchen Sie es mit anderen Suchbegriffen.</div>\r\n        </div>)\r\n      }\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).map(k => (\r\n        <div className=\"bg-gray-50 p-5 my-1 border-gray-500\" key={k}>\r\n          <div className=\"font-bold\">{searchResults[k].title}</div>\r\n          <div className=\"text-blue-400\"><div className=\"cursor-pointer text-blue-700\" onClick={getViewer(searchResults[k])}>Dokument öffnen</div></div>\r\n        </div>)\r\n      )}\r\n\r\n      {docToView.viewerIsOpen && <div className=\"fixed inset-0 bg-gray-600 bg-opacity-99 overflow-y-auto h-full w-full\">\r\n        <div className=\"flex w-full bg-gray-800 text-white text-xl p-2\">\r\n          <div className=\"flex-grow text-center pt-4 pl-52 text-2xl font-bold\">{docToView.title}</div>\r\n          <button className=\"flex-none p-2 cursor-pointer m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded focus:outline-none focus:shadow-outline\" onClick={closeViewer}>Zurück zur Suchmaske</button>\r\n        </div>\r\n        <div className=\"w-full h-full\">\r\n          <embed\r\n            src={docToView.url}\r\n            type=\"application/pdf\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"auto\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></embed>\r\n        </div>\r\n      </div>}\r\n\r\n    </div>\r\n  )\r\n\r\n}","/**\r\n * Finds and replaces some very basic BBCode tags\r\n */\r\nexport const replaceBBCode = raw => {\r\n  if (!raw || raw.length < 1) return\r\n\r\n  let last = null\r\n  let res = raw\r\n\r\n  do {\r\n    last = res\r\n    // match simple format tags\r\n    res = res.replace(/\\[(b|i|u|s)\\](.*?)\\[\\/\\1\\]/gs, \"<$1>$2</$1>\")\r\n  } while (res !== last)\r\n\r\n  // match line breaks\r\n  res = res.replace(/\\[br\\]*/gs, \"<br />\")\r\n\r\n  return res\r\n}\r\n\r\n","import { useState } from \"react\"\r\nimport { replaceBBCode } from \"../../../../helpers/bbcode\"\r\n\r\nexport const SelectFromRange = (data) => {\r\n  const [currentValue, setCurrentValue] = useState(0)\r\n  const { name, label, options, onValueSelect, ...otherAttrs } = data\r\n\r\n  const handleChange = (e) => {\r\n    setCurrentValue(e.target.value)\r\n    return onValueSelect(e)\r\n  }\r\n\r\n  return (<div key={name} className=\"p-0 w-full\">\r\n    <div className=\"max-w-sm pb-5 font-bold\" dangerouslySetInnerHTML={{\r\n      __html: replaceBBCode(label) || ' '\r\n    }}></div>\r\n\r\n    <div className=\"w-full flex\">\r\n      {options.map(opt => (\r\n        <div className=\"w-full border border-solid\">\r\n          <div className=\"h-16 font-bold text-center whitespace-pre\" dangerouslySetInnerHTML={{\r\n            __html: replaceBBCode(opt.label) || ' '\r\n          }}>\r\n          </div>\r\n          <div className=\"text-center\"><input type=\"radio\" name={name} value={opt.value} onChange={handleChange} /></div>\r\n          <div className=\"text-center\">{opt.value}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>)\r\n}","import { useState } from \"react\"\r\n\r\nexport const Slider = ({ name, min, max, label, unit, onSlideChange, ...otherAttrs }) => {\r\n  const [currentSliderValue, setCurrentSliderValue] = useState(Math.ceil(max / 2))\r\n\r\n  const handleSlideChange = (e) => {\r\n    setCurrentSliderValue(e.target.value)\r\n    return onSlideChange(e)\r\n  }\r\n\r\n  return (<div key={name} className=\"p-0\">\r\n    <div className=\"max-w-sm font-bold pb-5\">{label}</div>\r\n    <input\r\n      type=\"range\"\r\n      name={name}\r\n      min={min}\r\n      max={max}\r\n      onChange={handleSlideChange}\r\n      {...otherAttrs}\r\n    />&nbsp;\r\n    <span>{currentSliderValue} {unit}</span>\r\n  </div>)\r\n}","\r\nexport const TextInput = props => {\r\n  return (\r\n    <>\r\n      {props.label && <div className=\"font-bold pb-5\">{props.label}</div>}\r\n      <input type=\"text\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" {...props} />\r\n    </>\r\n  )\r\n}","import { useState } from \"react\"\r\nimport { DropDown } from \"./dropdown/DropDown\"\r\nimport { ResearchSimulation } from \"./researchsimulation/ResearchSimulation\"\r\nimport { SelectFromRange } from \"./selectfromrange/SelectFromRange\"\r\nimport { Slider } from \"./slider/Slider\"\r\nimport { TextInput } from \"./textinput/TextInput\"\r\nimport { replaceBBCode } from \"./../../../helpers/bbcode\"\r\n\r\n// @TODO find better solution for generating unique element ids\r\nlet renderedElementId = 0\r\n\r\n\r\n\r\nexport const FormBuilder = ({ formSections, formName, onFormChanged, onFormCompleted, defaultValues }) => {\r\n  const [completedInputFields, setCompletedInputFields] = useState({})\r\n  const [isReadOnly, setIsReadOnly] = useState(false)\r\n\r\n  /**\r\n   * Renders a section headline\r\n   */\r\n  const renderHeadline = data => {\r\n    return (\r\n      <div className=\"text-xl pt-3 pb-4\" key={data.text}>\r\n        <strong>{data.text}</strong>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders a bunch of text paragraphs\r\n   */\r\n  const renderText = data => {\r\n    return data.paragraphs.map((p, idx) => (\r\n      <p className=\"pb-3\" key={idx} dangerouslySetInnerHTML={{\r\n        __html: replaceBBCode(p)\r\n      }}></p>\r\n    ))\r\n  }\r\n\r\n  const renderBoxedText = data => {\r\n    const text = renderText(data)\r\n    return <div className=\"border border-gray-400 bg-gray-200 p-5 border-solid\">\r\n      {text}\r\n    </div>\r\n  }\r\n\r\n  const renderBulletList = data => {\r\n    const bPoints = data.paragraphs.map((p, idx) => {\r\n      return <li className=\"pb-3 list-item\" key={idx}>{p}</li>\r\n    })\r\n\r\n    return <ul className=\"pl-10 list-outside list-disc\">\r\n      {bPoints}\r\n    </ul>\r\n  }\r\n\r\n  const getRequiredFields = () => {\r\n    return formSections.reduce((acc, section) => {\r\n      const requestedFieldsForSection = section.elements?.reduce((acc, el) => {\r\n        if (el.type?.toLowerCase() === 'input' && el.data.isOptional !== true) {\r\n          acc.push(el.data.name)\r\n        }\r\n        return acc\r\n      }, [])\r\n\r\n      if (requestedFieldsForSection) {\r\n        acc.push(requestedFieldsForSection)\r\n      }\r\n\r\n      return acc\r\n    }, []).flat()\r\n  }\r\n\r\n  const formIsCompleted = () => {\r\n    if (!completedInputFields) {\r\n      return false\r\n    }\r\n\r\n    if (completedInputFields && Object.keys(completedInputFields).length < 1) {\r\n      return true\r\n    }\r\n\r\n    let isCompleted = true\r\n\r\n    const listOfRequiredFields = getRequiredFields()\r\n    listOfRequiredFields.forEach(reqFieldName => {\r\n      if (!completedInputFields[reqFieldName]) {\r\n        isCompleted = false\r\n      }\r\n    })\r\n\r\n    return isCompleted\r\n  }\r\n\r\n  const stashInput = (xname, xvalue) => {\r\n    const ci = completedInputFields\r\n    ci[xname] = xvalue\r\n    setCompletedInputFields(ci)\r\n  }\r\n\r\n  const saveCurrentInputValue = e => {\r\n    stashInput(e.target.name, e.target.value)\r\n    onFormChanged(formName, completedInputFields)\r\n\r\n    if (formIsCompleted()) {\r\n      onFormCompleted(true)\r\n    } else {\r\n      onFormCompleted(false)\r\n    }\r\n  }\r\n\r\n\r\n  const renderSlider = (data) => {\r\n    const { label, unit, ...otherAttributes } = data\r\n\r\n    return (\r\n      <div key={data.name} className=\"bg-gray-200 p-5 w-full\">\r\n        <Slider\r\n          className=\"min-w-full\"\r\n          label={label}\r\n          unit={unit}\r\n          onSlideChange={saveCurrentInputValue}\r\n          {...otherAttributes}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderSelectFromRange = (data) => {\r\n    return (\r\n      <div key={data.name} className=\"bg-gray-200 p-5\">\r\n        <SelectFromRange\r\n          name={data.name}\r\n          label={data.label}\r\n          options={data.options}\r\n          onValueSelect={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * Renders a text input field\r\n   */\r\n  const renderTextInput = (data) => {\r\n    const curVal = completedInputFields?.[data.name] || null\r\n    return (\r\n      <div key={data.name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <TextInput\r\n          className=\"w-full p-5\"\r\n          readOnly={isReadOnly}\r\n          onBlur={isReadOnly !== true ? saveCurrentInputValue : null}\r\n          label={data.label}\r\n          name={data.name}\r\n          rows={data.rows}\r\n          placeholder={data.placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderDropDown = (data) => {\r\n    return (\r\n      <div key={data.name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <DropDown\r\n          name={data.name}\r\n          label={data.label}\r\n          options={data.options}\r\n          onValueSelect={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderResearchSimulation = (data) => {\r\n    return (\r\n      <div key={data.name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <ResearchSimulation\r\n          name={data.name}\r\n          onSearchHistoryChanged={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderLinkThumbnail = (data) => {\r\n    return (\r\n      <a href={data.url} target={data.target}>\r\n        <div key={data.name} className=\"border-1 border-solid bg-gray-100 p-5 w-auto hover:bg-gray-200\">\r\n          {data.title}\r\n        </div>\r\n      </a>\r\n    )\r\n  }\r\n\r\n  const renderPickVersion = (data) => {\r\n    const numVersions = data.versions?.length\r\n    if (numVersions <= 0) return null\r\n\r\n    const choosenVersion = Math.floor(Math.random() * numVersions)\r\n\r\n    return data.versions[choosenVersion].elements?.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\">{renderIncludedElement(el)}</div>\r\n      }\r\n    })\r\n  }\r\n\r\n  const renderAside = (elements) => {\r\n    const sideElements = elements.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\">{renderIncludedElement(el)}</div>\r\n      }\r\n    })\r\n\r\n    return (<div className=\"absolute right-0 top-0 h-screen\">\r\n      <div className=\"__element p-2 sticky right-0 top-0\">\r\n        {sideElements}\r\n      </div>\r\n    </div>)\r\n  }\r\n\r\n  /**\r\n   * Renders an element inside a cell or section\r\n   */\r\n  const renderIncludedElement = (el) => {\r\n    let content = null\r\n    el.data.id = renderedElementId++\r\n\r\n    switch (el.module.toLowerCase()) {\r\n      case 'aside':\r\n        content = renderAside(el.elements)\r\n        break\r\n      case 'linkthumbnail':\r\n        content = renderLinkThumbnail(el.data)\r\n        break\r\n      case 'researchsimulation':\r\n        content = renderResearchSimulation(el.data)\r\n        break\r\n      case 'dropdown':\r\n        content = renderDropDown(el.data)\r\n        break\r\n      case 'selectfromrange':\r\n        content = renderSelectFromRange(el.data)\r\n        break\r\n      case 'slider':\r\n        content = renderSlider(el.data, el.settings)\r\n        break\r\n      case 'headline':\r\n        content = renderHeadline(el.data)\r\n        break\r\n      case 'boxedtext':\r\n        content = renderBoxedText(el.data)\r\n        break\r\n      case 'bulletlist':\r\n        content = renderBulletList(el.data)\r\n        break\r\n      case 'pickversion':\r\n        content = renderPickVersion(el.data)\r\n        break\r\n      case 'text':\r\n        content = renderText(el.data)\r\n        break\r\n      case 'textarea':\r\n      case 'textinput':\r\n        content = renderTextInput(el.data)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return content\r\n  }\r\n\r\n  /**\r\n   * Renders a collection of sections (including all nested subsections)\r\n   */\r\n  const renderSections = (secs, depth) => {\r\n    let content = null\r\n\r\n    return secs.map((sec, secIdx) => {\r\n      const elements = sec.elements.map((el, idx) => {\r\n        if (!el.module) return null\r\n\r\n        if (el.module !== 'subsections') {\r\n          content = renderIncludedElement(el)\r\n\r\n          return <div className=\"__element p-2\">{content}</div>\r\n        } else {\r\n          content = renderSections(el.sections, depth + 1)\r\n\r\n          return content\r\n        }\r\n      })\r\n\r\n      if (depth === 1) {\r\n        return (\r\n          <div className=\"p-6 border my-1 border-solid\" key={`sect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"__subsection\" key={`subsect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const formContent = renderSections(formSections, 1)\r\n\r\n  return <div>\r\n    {formContent}\r\n  </div>\r\n}","export const SimpleModal = ({ title, text, buttons, onAccept, onReject }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-70 overflow-y-auto h-full w-full\">\r\n      <div className=\"w-1/2 h-1/2 bg-white m-auto my-10\">\r\n        <div className=\"flex w-full bg-gray-400 p-3 text-white text-2xl\">\r\n          <div className=\"flex-grow text-center\">{title}</div>\r\n        </div>\r\n        <div className=\"p-10 text-lg\">\r\n          {text.map(t => {\r\n            return <p className=\"p-5 py-2\">{t}</p>\r\n          })}\r\n        </div>\r\n        <div className=\"flex w-1/2 pl-10\">\r\n          <button className=\"flex-grow bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onAccept}>{buttons.accept}</button>\r\n          <button className=\"flex-grow bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onReject}>{buttons.reject}</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { FormBuilder } from './formbuilder/FormBuilder'\r\nimport { SimpleModal } from './simplemodal/SimpleModal'\r\n\r\nconst getPage = (pageSet, pageId) => {\r\n  const pages = pageSet.filter(val => val.thisId === pageId)\r\n  if (pages.length > 1) { console.error(`Found more than 1 page with id (${pageId})`) }\r\n  return pages[0]\r\n}\r\n\r\nconst getFirstPage = (pageSet) => {\r\n  const rootPages = pageSet.filter(val => val.prevId === null)\r\n  if (rootPages.length > 1) { console.error('Found more than 1 root page') }\r\n  return rootPages[0]\r\n}\r\n\r\nexport const SurveyManager = ({ ruleSet }) => {\r\n  const pages = ruleSet?.pages\r\n\r\n  const [currentPage, setCurrentPage] = useState(null)\r\n  const [currentPageIsComplete, setCurrentPageIsComplete] = useState(false)\r\n  const [surveyIsComplete, setSurveyIsComplete] = useState(false)\r\n  const [surveyData, setSurveyData] = useState({})\r\n  const [modalContent, setModalContent] = useState({ show: false })\r\n\r\n\r\n  useEffect(() => {\r\n    if (currentPage?.settings?.allowProceed === true) {\r\n      setCurrentPageIsComplete(true)\r\n    }\r\n\r\n  }, ['currentPage'])\r\n\r\n  if (!pages || pages.length < 1) {\r\n    console.error('No pages defined in survey')\r\n    return null\r\n  }\r\n\r\n  if (!currentPage) {\r\n    const firstPage = getFirstPage(pages)\r\n    if (firstPage && firstPage.thisId >= 0) {\r\n      setCurrentPage(firstPage)\r\n    }\r\n    return null\r\n  }\r\n\r\n  const saveSurveyData = () => {\r\n    console.log('SEND SURVEYDATA TO API', surveyData)\r\n  }\r\n\r\n  const triggerNextPage = (e) => {\r\n    if (currentPage.nextId) {\r\n      if (currentPage.settings?.confirmMoveForward) {\r\n        const { title, text, buttons } = currentPage.settings?.confirmMoveForward\r\n\r\n        setModalContent({\r\n          show: true,\r\n          title,\r\n          text,\r\n          buttons,\r\n          onAccept: () => { setModalContent({ show: false }); setCurrentPage(getPage(pages, currentPage.nextId)) },\r\n          onReject: () => { setModalContent({ show: false }) }\r\n        })\r\n      } else {\r\n        setCurrentPage(getPage(pages, currentPage.nextId))\r\n      }\r\n    } else {\r\n      saveSurveyData()\r\n      setSurveyIsComplete(true)\r\n    }\r\n  }\r\n\r\n  const triggerPrevPage = (e) => {\r\n    if (currentPage.prevId) {\r\n      setCurrentPage(getPage(pages, currentPage.prevId))\r\n    }\r\n  }\r\n\r\n  const handleFormChanged = (formName, formData) => {\r\n    const fName = formName || \"general\"\r\n    let sData = surveyData\r\n    sData[fName] = formData\r\n    setSurveyData(sData)\r\n    console.log('Survey Data:', sData)\r\n  }\r\n\r\n  const handleFormCompleted = (isCompleted) => {\r\n    setCurrentPageIsComplete(isCompleted)\r\n  }\r\n\r\n  let formContent = null\r\n\r\n  if (surveyIsComplete) {\r\n    formContent = (<div className='flex h-screen'>\r\n      <div className='text-black font-bold text-3xl m-auto text-4xl'>Umfrage beendet. Sie dürfen das Fenster jetzt schließen.</div>\r\n    </div>)\r\n  } else {\r\n    formContent = (currentPage.sections?.length > 0) ?\r\n      <FormBuilder\r\n        key={`form_${currentPage.thisId}`}\r\n        defaultValues={surveyData[currentPage]}\r\n        formSections={currentPage.sections}\r\n        formName={`page:${currentPage.thisId}`}\r\n        onFormChanged={handleFormChanged}\r\n        onFormCompleted={handleFormCompleted}\r\n      /> :\r\n      <div>no form data</div>\r\n  }\r\n\r\n  const renderBackButton = () => {\r\n    if (currentPage.settings?.allowMoveBack !== true) {\r\n      return null\r\n    }\r\n\r\n    return (<button className={clsx({\r\n      \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n    })} type=\"button\" onClick={triggerPrevPage}>\r\n      Zurück\r\n    </button>)\r\n  }\r\n\r\n  const renderNextButton = () => {\r\n    if (surveyIsComplete) return null\r\n\r\n    if (currentPage.nextId === null) {\r\n      currentPage.labelNextPage = 'Umfrage beenden'\r\n    }\r\n\r\n    return (<button disabled={currentPageIsComplete === false && 'disabled'} className={clsx({\r\n      \"m-5 bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": currentPageIsComplete === false,\r\n      \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n    })} type=\"button\" onClick={triggerNextPage}>\r\n      {currentPage.labelNextPage || 'Weiter'}\r\n    </button>)\r\n  }\r\n\r\n  const backButton = renderBackButton()\r\n  const nextButton = renderNextButton()\r\n\r\n  const closeModal = () => {\r\n    setModalContent({ show: false })\r\n  }\r\n\r\n  const {\r\n    show,\r\n    title,\r\n    text,\r\n    buttons,\r\n    onAccept,\r\n    onReject\r\n  } = modalContent\r\n\r\n  const modalWindow = show ?\r\n    <SimpleModal\r\n      title={title}\r\n      text={text}\r\n      buttons={buttons}\r\n      onAccept={onAccept}\r\n      onReject={onReject}\r\n    />\r\n    : null\r\n\r\n\r\n  return (\r\n    <div key={currentPage.thisId}>\r\n      <div className=\"flex justify-end\">\r\n        {!surveyIsComplete && <div className=\"text-white bg-gray-400 px-2 py-0\">\r\n          Seite: {currentPage.thisId}\r\n        </div>}\r\n      </div>\r\n      {formContent}\r\n      <div className=\"flex items-center justify-between\">\r\n        {backButton}\r\n        {nextButton}\r\n      </div>\r\n      {modalWindow}\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport { SurveyManager } from './components/survey/SurveyManager'\r\nimport axios from 'axios'\r\n\r\nconst validateRuleSet = (unvalidatedRules) => {\r\n  // @TODO verify the structure of the survey.json (using ajv?) in order to avoid unnescessary problems with broken json\r\n\r\n  return unvalidatedRules\r\n}\r\n\r\nfunction App() {\r\n  const [surveyControlData, setSurveyControlData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/survey.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setSurveyControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return surveyControlData ? (\r\n    <div className=\"container max-w-screen-md ml-auto mr-auto\">\r\n      <SurveyManager ruleSet={surveyControlData} />\r\n    </div>\r\n  ) : (\r\n    <div className='flex h-screen'>\r\n      <div className='m-auto text-6xl'>Daten werden geladen...</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}