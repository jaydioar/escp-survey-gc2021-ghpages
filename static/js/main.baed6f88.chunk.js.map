{"version":3,"sources":["components/survey/formbuilder/dropdown/DropDown.jsx","components/survey/formbuilder/researchsimulation/ResearchSimulation.jsx","helpers/bbcode.js","components/survey/formbuilder/selectfromrange/SelectFromRange.jsx","components/survey/formbuilder/slider/Slider.jsx","components/survey/formbuilder/textarea/TextArea.jsx","components/survey/formbuilder/textinput/TextInput.jsx","components/survey/formbuilder/selfassessment/SelfAssessment.jsx","components/survey/formbuilder/FormBuilder.jsx","components/survey/simplemodal/SimpleModal.jsx","components/survey/SurveyPage.jsx","components/survey/SurveyQuestionaire.jsx","components/survey/SurveyManager.jsx","App.js","reportWebVitals.js","index.js"],"names":["DropDown","name","label","options","onValueSelect","className","onChange","map","opt","idx","value","viewerStart","ResearchSimulation","onSearchHistoryChanged","useState","searchKeywords","setSearchKeywords","init","searchResults","setSearchResults","loggedActions","logAction","title","url","viewerIsOpen","docToView","setDocToView","controlData","setControlData","useEffect","axios","get","then","response","validRuleSet","ruleSet","researchSimulation","Error","config","cues","length","forEach","element","id","keywords","JSON","stringify","err","console","error","message","validateRuleSet","data","log","action","info","actions","push","time","Date","getTime","target","triggerSearch","e","res","toLowerCase","split","reduce","acc","kw","filter","item","indexOf","cue","autoFocus","onKeyPress","key","type","placeholder","disabled","clsx","onClick","Object","keys","k","now","durationOfView","durationInSec","src","frameBorder","scrolling","height","width","replaceBBCode","raw","last","replace","SelectFromRange","handleChange","dangerouslySetInnerHTML","__html","htmlFor","Slider","min","max","unit","otherAttrs","middleMinMax","Math","ceil","currentSliderValue","setCurrentSliderValue","handleFinishedSlide","defaultValue","onMouseUp","onKeyUp","TextArea","onComplete","otherProps","isRequired","onBlur","TextInput","SelfAssessment","onAllChosen","attributes","randomOrder","inputArray","ia","sort","random","shuffleArray","inputData","fieldsOrdered","answers","handleOptChange","score","posMatches","negMatches","attr","v","trend","calcGoughScore","score1","score2","attrData","renderedElementId","FormBuilder","formSections","formName","onFormChanged","onFormComplete","completedInputFields","requiredInputFields","registerRequiredInputField","includes","renderText","paragraphs","p","saveCurrentInputValue","xname","xvalue","ci","stashInput","isCompleted","reqFieldName","undefined","formIsCompleted","renderTextInput","rows","isOptional","curVal","renderTextArea","renderPickVersion","versions","numVersions","choosenVersion","floor","elements","el","module","renderIncludedElement","renderAside","sideElements","content","href","renderLinkThumbnail","renderResearchSimulation","renderDropDown","renderSelectFromRange","renderSlider","text","renderHeadline","renderBoxedText","bPoints","renderBulletList","formContent","renderSections","secs","depth","sec","secIdx","sections","SimpleModal","buttons","onAccept","onReject","t","accept","reject","SurveyPage","page","onPageComplete","onNextPage","onPrevPage","allowProceed","settings","currentPageIsComplete","setCurrentPageIsComplete","show","modalContent","setModalContent","triggerNextPage","nextId","confirmMoveForward","triggerPrevPage","prevId","backButton","allowMoveBack","renderBackButton","nextButton","labelNextPage","modalWindow","thisId","toString","padStart","formData","getPage","pageSet","pageId","pages","val","SurveyQuestionaire","sessionId","currentPage","setCurrentPage","firstPage","rootPages","getFirstPage","pageData","SurveyManager","onSaveData","surveyIsComplete","setSurveyIsComplete","surveyData","surveyId","meta","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dbDatabase","getDatabase","surveySessionId","sha256","getUTCMilliseconds","CryptoJS","enc","Hex","writeToDatabase","set","ref","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getDatePrefix","substr","catch","App","surveyControlData","setSurveyControlData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.baed6f88.chunk.js","sourcesContent":["\r\nexport const DropDown = ({ name, label, options, onValueSelect, ...otherAttrs }) => {\r\n  return (\r\n    <div key={name} className=\"p-0 border border-solid\">\r\n      <div className=\"font-bold pb-5\">{label}</div>\r\n      <select name={name} onChange={onValueSelect}>\r\n        {options.map((opt, idx) => {\r\n          return <option value={opt.value} key={idx}>{opt.label}</option>\r\n        })}\r\n      </select>\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport clsx from 'clsx'\r\n\r\nconst MIN_CHARS_FOR_SEARCH = 4\r\nlet viewerStart = null\r\n\r\nexport const ResearchSimulation = ({ name, onSearchHistoryChanged, ...otherAttrs }) => {\r\n  const [searchKeywords, setSearchKeywords] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState({ init: true })\r\n  const [loggedActions, logAction] = useState([])\r\n  const [docToView, setDocToView] = useState({ title: null, url: null, viewerIsOpen: false })\r\n  const [controlData, setControlData] = useState(null)\r\n\r\n  const validateRuleSet = (ruleSet) => {\r\n    if (!ruleSet?.researchSimulation) {\r\n      throw Error('Die Daten in research-simulation.json sind ungültig!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.config) {\r\n      throw Error('Abschnitt \"config: { ... }\" in research-simulation.json fehlt!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.cues?.length > 0) {\r\n      throw Error('Abschnitt \"cues\": [ ... ] in research-simulation.json fehlt oder ist leer!')\r\n    }\r\n\r\n    try {\r\n      ruleSet.researchSimulation.cues.forEach(element => {\r\n        const { id, title, keywords, url } = element\r\n\r\n        if (!id || typeof id !== \"number\") { throw Error(`Fehlendes oder ungültiges Attribute \"id\" (keine Zahl?) in ${JSON.stringify(element)}`) }\r\n        if (!title || typeof title !== \"string\" || title?.length < 1) { throw Error(`Fehlendes oder ungültiges Attribute \"title\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!keywords || !keywords?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"keywords\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!url || !url?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"url\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n      })\r\n    } catch (err) {\r\n      console.error(err)\r\n      throw JSON.stringify(err.message)\r\n    }\r\n\r\n    return ruleSet\r\n  }\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/research-simulation.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const getSearchResults = (keywords) => {\r\n    const kws = keywords.toLowerCase().split(';')\r\n\r\n    return kws.reduce((acc, kw) => {\r\n      if (kw.length === 0) return acc\r\n\r\n      const cues4Kw = controlData.researchSimulation?.cues.filter((item) => {\r\n        return item.keywords.toLowerCase().indexOf(kw) > -1\r\n      })\r\n\r\n      cues4Kw.forEach(cue => {\r\n        acc[cue.id] = cue\r\n      })\r\n\r\n      return acc\r\n    }, {})\r\n  }\r\n\r\n  const updateKeywords = (e) => {\r\n    setSearchKeywords(e.target.value)\r\n  }\r\n\r\n  // try {\r\n  //   ruleSetIsValid()\r\n  // }\r\n  // catch (err) {\r\n  //   return (<div className=\"bg-red-100 text-red-700 p-20\">\r\n  //     Die Daten in der JSON-Datei für das Modul \"Research Simulation\" sind ungültig.<br />\r\n  //     {JSON.parse(err)}\r\n  //   </div>)\r\n  // }\r\n\r\n  const log = (action, info) => {\r\n    const actions = loggedActions\r\n    actions.push({ time: new Date().getTime(), action, info })\r\n    logAction(actions)\r\n    onSearchHistoryChanged({ target: { name: name, value: actions } })\r\n  }\r\n\r\n  const triggerSearch = (e) => {\r\n    const res = getSearchResults(searchKeywords)\r\n    log('SEARCH', searchKeywords)\r\n    setSearchResults(res)\r\n  }\r\n\r\n  const getViewer = (cue) => () => {\r\n    log('OPEN', cue.url)\r\n    const now = new Date()\r\n    viewerStart = now.getTime()\r\n    setDocToView({ title: cue.title, url: cue.url, viewerIsOpen: true })\r\n  }\r\n\r\n  const closeViewer = (e) => {\r\n    const url = docToView.url\r\n    const now = new Date()\r\n    const durationOfView = now.getTime() - viewerStart\r\n    viewerStart = null\r\n    log('CLOSE', { url, durationInSec: durationOfView / 1000 })\r\n    setDocToView({ title: null, url: null, viewerIsOpen: false })\r\n  }\r\n\r\n  const handleEnterKey = (e) => {\r\n    if (e.key === 'Enter' && searchKeywords.length >= MIN_CHARS_FOR_SEARCH) {\r\n      triggerSearch()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <h1 className=\"text-3xl pb-4\">Recherche</h1>\r\n\r\n      <div className=\"bg-blue-50 shadow-md px-8 pt-6 pb-8 mb-4\">\r\n        <div className=\"mb-4\">\r\n          <input autoFocus onKeyPress={handleEnterKey} onChange={updateKeywords} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"keywords\" type=\"text\" placeholder={`Suchbegriffe (min. ${MIN_CHARS_FOR_SEARCH} Buchstaben) hier eingeben...`} />\r\n        </div>\r\n        <div className=\"flex items-center justify-between\">\r\n          <button disabled={searchKeywords.length < MIN_CHARS_FOR_SEARCH && 'disabled'} className={clsx({\r\n            \"bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": searchKeywords.length < MIN_CHARS_FOR_SEARCH,\r\n            \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": searchKeywords.length >= MIN_CHARS_FOR_SEARCH\r\n          })} type=\"button\" onClick={triggerSearch}>\r\n            Suchen\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).length === 0 && (\r\n        <div className=\"bg-gray-50 p-10 my-10\">\r\n          <div>Wir haben leider keine passenden Ergebnisse zu Ihrer Suchanfrage gefunden... Bitte versuchen Sie es mit anderen Suchbegriffen.</div>\r\n        </div>)\r\n      }\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).map(k => (\r\n        <div className=\"bg-gray-50 p-5 my-1 border-gray-500\" key={k}>\r\n          <div className=\"font-bold\">{searchResults[k].title}</div>\r\n          <div className=\"text-blue-400\"><div className=\"cursor-pointer text-blue-700\" onClick={getViewer(searchResults[k])}>Dokument öffnen</div></div>\r\n        </div>)\r\n      )}\r\n\r\n      {docToView.viewerIsOpen && <div className=\"fixed inset-0 bg-gray-600 bg-opacity-99 overflow-y-auto h-full w-full\">\r\n        <div className=\"flex w-full bg-gray-800 text-white text-xl p-2\">\r\n          <div className=\"flex-grow text-center pt-4 pl-52 text-2xl font-bold\">{docToView.title}</div>\r\n          <button className=\"flex-none p-2 cursor-pointer m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded focus:outline-none focus:shadow-outline\" onClick={closeViewer}>Zurück zur Suchmaske</button>\r\n        </div>\r\n        <div className=\"w-full h-full\">\r\n          <embed\r\n            src={docToView.url}\r\n            type=\"application/pdf\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"auto\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></embed>\r\n        </div>\r\n      </div>}\r\n\r\n    </div>\r\n  )\r\n\r\n}","/**\r\n * Finds and replaces some very basic BBCode tags\r\n */\r\nexport const replaceBBCode = raw => {\r\n  if (!raw || raw.length < 1) return\r\n\r\n  let last = null\r\n  let res = raw\r\n\r\n  do {\r\n    last = res\r\n    // match simple format tags\r\n    res = res.replace(/\\[(b|i|u|s)\\](.*?)\\[\\/\\1\\]/gs, \"<$1>$2</$1>\")\r\n  } while (res !== last)\r\n\r\n  // match line breaks\r\n  res = res.replace(/\\[br\\]*/gs, \"<br />\")\r\n\r\n  return res\r\n}\r\n\r\n","import { replaceBBCode } from \"../../../../helpers/bbcode\"\r\n\r\nexport const SelectFromRange = ({ name, label, options, onChange, ...otherAttrs }) => {\r\n\r\n  const handleChange = (e) => {\r\n    return onChange(e)\r\n  }\r\n\r\n  return (<div key={name} className=\"p-0 w-full\">\r\n    <div className=\"max-w-sm pb-5 font-bold\" dangerouslySetInnerHTML={{\r\n      __html: replaceBBCode(label) || ' '\r\n    }}></div>\r\n\r\n    <div className=\"w-full flex\">\r\n      {options.map((opt, idx) => (\r\n        <label className=\"w-full border border-solid\" key={idx} htmlFor={`${name}${opt.value}`}>\r\n          <div className=\"h-16 font-bold text-center whitespace-pre\" dangerouslySetInnerHTML={{\r\n            __html: replaceBBCode(opt.label) || ' '\r\n          }}>\r\n          </div>\r\n          <div className=\"text-center\"><input type=\"radio\" name={name} id={`${name}${opt.value}`} value={opt.value} onChange={handleChange} /></div>\r\n          <div className=\"text-center\">{opt.value}</div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  </div>)\r\n}","import { useState } from \"react\"\r\n\r\nexport const Slider = ({ name, min, max, label, unit, onChange, ...otherAttrs }) => {\r\n  const middleMinMax = Math.ceil(min + ((max - min) / 2))\r\n  const [currentSliderValue, setCurrentSliderValue] = useState(middleMinMax)\r\n\r\n  const handleSlideChange = (e) => {\r\n    setCurrentSliderValue(e.target.value)\r\n  }\r\n\r\n  const handleFinishedSlide = (e) => {\r\n    return onChange({\r\n      target: {\r\n        name: name,\r\n        value: currentSliderValue\r\n      }\r\n    })\r\n  }\r\n\r\n  return (<div key={name} className=\"p-0\">\r\n    <div className=\"max-w-sm font-bold pb-5\">{label}</div>\r\n    <input\r\n      type=\"range\"\r\n      name={name}\r\n      min={min}\r\n      max={max}\r\n      defaultValue={middleMinMax}\r\n      onChange={handleSlideChange}\r\n      onMouseUp={handleFinishedSlide}\r\n      onKeyUp={handleFinishedSlide}\r\n      {...otherAttrs}\r\n    />&nbsp;\r\n    <span>{currentSliderValue} {unit}</span>\r\n  </div>)\r\n}","export const TextArea = ({ name, onChange, onComplete, label, isRequired, ...otherProps }) => {\r\n  const onChangeHandler = e => {\r\n    if (e.target.value.length > 0) {\r\n      onChange(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && <div className=\"font-bold pb-5\">{label}</div>}\r\n      <textarea\r\n        name={name}\r\n        onChange={onChangeHandler}\r\n        onBlur={onComplete}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...otherProps} />\r\n    </>\r\n  )\r\n}","export const TextInput = ({ onChange, onComplete, label, ...otherProps }) => {\r\n  const handleOnChangeEvent = e => {\r\n    if (e.target.value.length > 0) {\r\n      onChange(e)\r\n      onComplete(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && <div className=\"font-bold pb-5\">{label}</div>}\r\n      <input type=\"text\"\r\n        onChange={handleOnChangeEvent}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...otherProps} />\r\n    </>\r\n  )\r\n}","export const SelfAssessment = ({ data, onAllChosen, ...otherAttrs }) => {\r\n  if (!data?.attributes || data.attributes.length === 0) {\r\n    return <div>No attributes given</div>\r\n  }\r\n\r\n  const shuffleArray = (inputArray) => {\r\n    const ia = inputArray\r\n    ia.sort(() => Math.random() - 0.5)\r\n    return ia\r\n  }\r\n\r\n  const calcGoughScore = (answers, attributes) => {\r\n    let score = 0\r\n    let posMatches = 0\r\n    let negMatches = 0\r\n\r\n    Object.keys(answers).forEach(element => {\r\n      const attr = attributes.filter(v => { return (v.name === element) })[0]\r\n\r\n      if (attr.trend === 'pos' && answers[element] === 'y') {\r\n        score++\r\n        posMatches++\r\n      }\r\n\r\n      if (attr.trend === 'neg' && answers[element] === 'y') {\r\n        score--\r\n        negMatches++\r\n      }\r\n    })\r\n\r\n    return ({\r\n      score,\r\n      posMatches,\r\n      negMatches\r\n    })\r\n  }\r\n\r\n  const randomOrder = shuffleArray(Object.keys(data.attributes))\r\n\r\n  const fieldsOrdered = randomOrder.map(key => {\r\n    return data.attributes[key].name\r\n  })\r\n\r\n  let inputData = {\r\n    fieldsOrdered: fieldsOrdered,\r\n    answers: {}\r\n  }\r\n\r\n  const handleOptChange = e => {\r\n    inputData.answers[e.target.name] = e.target.value\r\n\r\n    if (Object.keys(inputData.answers).length > 0 ||\r\n      Object.keys(inputData.answers).length === inputData.fieldsOrdered.length) {\r\n      const { score, posMatches, negMatches } = calcGoughScore(inputData.answers, data.attributes)\r\n\r\n      inputData.score1 = score\r\n      inputData.score2 = posMatches / (posMatches + negMatches)\r\n      onAllChosen({\r\n        target: {\r\n          name: data.name,\r\n          value: inputData,\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap\">\r\n      {randomOrder.map((key, idx) => {\r\n        const attrData = data.attributes[key]\r\n\r\n        return (\r\n          <div className=\"flex w-full md:w-1/2\" key={idx}>\r\n            <div className=\"border border-solid border-gray-200 bg-gray-50 flex p-2 w-full\">\r\n              <div className=\"flex-grow\">{attrData.label}</div>\r\n              <label htmlFor={attrData.name} className=\"flex-0 w-1/4\">\r\n                <input type=\"radio\" name={attrData.name} id={attrData.name} value=\"y\" onChange={handleOptChange} />&nbsp; Ja\r\n              </label>\r\n              <label htmlFor={attrData.name + '2'} className=\"flex-0\">\r\n                <input type=\"radio\" name={attrData.name} id={attrData.name + '2'} value=\"n\" onChange={handleOptChange} />&nbsp; Nein\r\n              </label>\r\n            </div>\r\n          </div>)\r\n      })}\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n}","import { DropDown } from \"./dropdown/DropDown\"\r\nimport { ResearchSimulation } from \"./researchsimulation/ResearchSimulation\"\r\nimport { SelectFromRange } from \"./selectfromrange/SelectFromRange\"\r\nimport { Slider } from \"./slider/Slider\"\r\nimport { TextArea } from \"./textarea/TextArea\"\r\nimport { TextInput } from \"./textinput/TextInput\"\r\nimport { replaceBBCode } from \"./../../../helpers/bbcode\"\r\nimport { SelfAssessment } from \"./selfassessment/SelfAssessment\"\r\n\r\n// @TODO find better solution for generating unique element ids\r\nlet renderedElementId = 0\r\n\r\n\r\n\r\nexport const FormBuilder = ({ formSections, formName, onFormChanged, onFormComplete }) => {\r\n  let completedInputFields = {}\r\n  let requiredInputFields = []\r\n\r\n  const registerRequiredInputField = (name, isRequired) => {\r\n    if (isRequired && !requiredInputFields.includes(name)) {\r\n      requiredInputFields.push(name)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders a section headline\r\n   */\r\n  const renderHeadline = data => {\r\n    return (\r\n      <div className=\"text-xl pt-3 pb-4\" key={data.text}>\r\n        <strong>{data.text}</strong>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders a bunch of text paragraphs\r\n   */\r\n  const renderText = data => {\r\n    return data.paragraphs.map((p, idx) => (\r\n      <p className=\"pb-3\" key={idx} dangerouslySetInnerHTML={{\r\n        __html: replaceBBCode(p)\r\n      }}></p>\r\n    ))\r\n  }\r\n\r\n  const renderBoxedText = data => {\r\n    const text = renderText(data)\r\n    return <div className=\"border border-gray-400 bg-gray-200 p-5 border-solid\">\r\n      {text}\r\n    </div>\r\n  }\r\n\r\n  const renderBulletList = data => {\r\n    const bPoints = data.paragraphs.map((p, idx) => {\r\n      return <li className=\"pb-3 list-item\" key={idx}>{p}</li>\r\n    })\r\n\r\n    return <ul className=\"pl-10 list-outside list-disc\">\r\n      {bPoints}\r\n    </ul>\r\n  }\r\n\r\n  const getRequiredFields = (secs) => {\r\n    return secs.reduce((acc, section) => {\r\n      const requestedFieldsForSection = section.elements?.reduce((acc, el) => {\r\n        if (el.type?.toLowerCase() === 'input' && el.data.isOptional !== true) {\r\n          acc.push(el.data.name)\r\n        }\r\n\r\n        return acc\r\n      }, [])\r\n\r\n      if (requestedFieldsForSection) {\r\n        acc.push(requestedFieldsForSection)\r\n      }\r\n\r\n      return acc\r\n    }, []).flat()\r\n  }\r\n\r\n  const formIsCompleted = () => {\r\n    if (!completedInputFields) {\r\n      return false\r\n    }\r\n\r\n    if (completedInputFields && Object.keys(completedInputFields).length < 1) {\r\n      return true\r\n    }\r\n\r\n    let isCompleted = true\r\n\r\n    requiredInputFields.forEach(reqFieldName => {\r\n      if (completedInputFields[reqFieldName] === undefined || completedInputFields[reqFieldName] === null) {\r\n        isCompleted = false\r\n      }\r\n    })\r\n\r\n    return isCompleted\r\n  }\r\n\r\n  const stashInput = (xname, xvalue) => {\r\n    const ci = completedInputFields\r\n    ci[xname] = xvalue\r\n    completedInputFields = ci\r\n  }\r\n\r\n  const saveCurrentInputValue = e => {\r\n    stashInput(e.target.name, e.target.value)\r\n    onFormChanged(formName, completedInputFields)\r\n\r\n    if (formIsCompleted()) {\r\n      onFormComplete(true)\r\n    }\r\n  }\r\n\r\n\r\n  const renderSlider = ({ label, name, unit, min, max, isOptional, ...otherAttributes }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    return (\r\n      <div key={name} className=\"bg-gray-200 p-5 w-full\">\r\n        <Slider\r\n          name={name}\r\n          className=\"min-w-full\"\r\n          label={label}\r\n          unit={unit}\r\n          onChange={saveCurrentInputValue}\r\n          min={min}\r\n          max={max}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderSelectFromRange = ({ name, isOptional, label, options }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n\r\n    return (\r\n      <div key={name} className=\"bg-gray-200 p-5\">\r\n        <SelectFromRange\r\n          name={name}\r\n          label={label}\r\n          options={options}\r\n          onChange={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * Renders a multiline text input field (<textarea...)\r\n   */\r\n  const renderTextArea = ({ name, label, rows, placeholder, isOptional }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    const curVal = completedInputFields?.[name] || null\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <TextArea\r\n          className=\"w-full p-5\"\r\n          onBlur={saveCurrentInputValue}\r\n          onChange={() => null}\r\n          onComplete={saveCurrentInputValue}\r\n          isRequired={!isOptional}\r\n          label={label}\r\n          name={name}\r\n          rows={rows}\r\n          placeholder={placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders a single line (<input ..) or a multiline (<textarea.. ) input field\r\n   */\r\n  const renderTextInput = ({ name, label, rows, placeholder, isOptional }) => {\r\n    if (rows > 1) {\r\n      return renderTextArea({ name, label, rows, placeholder })\r\n    }\r\n\r\n    registerRequiredInputField(name, !isOptional)\r\n    const curVal = completedInputFields?.[name] || null\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <TextInput\r\n          className=\"w-full p-5\"\r\n          onBlur={saveCurrentInputValue}\r\n          onChange={() => null}\r\n          onComplete={saveCurrentInputValue}\r\n          label={label}\r\n          name={name}\r\n          rows={rows}\r\n          placeholder={placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderDropDown = ({ name, label, options, isOptional }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <DropDown\r\n          name={name}\r\n          label={label}\r\n          options={options}\r\n          onValueSelect={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderResearchSimulation = (data) => {\r\n    return (\r\n      <div key={data.name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <ResearchSimulation\r\n          name={data.name}\r\n          onSearchHistoryChanged={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderLinkThumbnail = (data) => {\r\n    return (\r\n      <a href={data.url} target={data.target}>\r\n        <div key={data.name} className=\"border-1 border-solid bg-gray-100 p-5 w-auto hover:bg-gray-200\">\r\n          {data.title}\r\n        </div>\r\n      </a>\r\n    )\r\n  }\r\n\r\n  const renderPickVersion = ({ name, isOptional, versions }) => {\r\n    const numVersions = versions?.length\r\n    if (numVersions <= 0) return null\r\n\r\n    const choosenVersion = completedInputFields[name] || Math.floor(Math.random() * numVersions)\r\n    completedInputFields[name] = choosenVersion\r\n\r\n    const res = versions[choosenVersion].elements?.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\" key={idx}>{renderIncludedElement(el)}</div>\r\n      }\r\n\r\n      return null\r\n    })\r\n\r\n    return <div key={name}>{res}</div>\r\n  }\r\n\r\n  const renderAside = (elements) => {\r\n    const sideElements = elements.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\" key={el.id}>{renderIncludedElement(el)}</div>\r\n      }\r\n\r\n      return null\r\n    })\r\n\r\n    return (<div className=\"absolute right-0 top-0 h-screen\">\r\n      <div className=\"__element p-2 sticky right-0 top-0\">\r\n        {sideElements}\r\n      </div>\r\n    </div>)\r\n  }\r\n\r\n\r\n\r\n  const renderSelfAssessment = (data) => {\r\n    return (\r\n      <div key={data.name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <SelfAssessment\r\n          data={data}\r\n          onAllChosen={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders an element inside a cell or section\r\n   */\r\n  const renderIncludedElement = (el) => {\r\n    let content = null\r\n    el.data.id = renderedElementId++\r\n\r\n    switch (el.module.toLowerCase()) {\r\n      case 'aside':\r\n        content = renderAside(el.elements)\r\n        break\r\n      case 'selfassessment':\r\n        content = renderSelfAssessment(el.data)\r\n        break\r\n      case 'linkthumbnail':\r\n        content = renderLinkThumbnail(el.data)\r\n        break\r\n      case 'researchsimulation':\r\n        content = renderResearchSimulation(el.data)\r\n        break\r\n      case 'dropdown':\r\n        content = renderDropDown(el.data)\r\n        break\r\n      case 'selectfromrange':\r\n        content = renderSelectFromRange(el.data)\r\n        break\r\n      case 'slider':\r\n        content = renderSlider(el.data)\r\n        break\r\n      case 'headline':\r\n        content = renderHeadline(el.data)\r\n        break\r\n      case 'boxedtext':\r\n        content = renderBoxedText(el.data)\r\n        break\r\n      case 'bulletlist':\r\n        content = renderBulletList(el.data)\r\n        break\r\n      case 'pickversion':\r\n        content = renderPickVersion(el.data)\r\n        break\r\n      case 'text':\r\n        content = renderText(el.data)\r\n        break\r\n      case 'textarea':\r\n      case 'textinput':\r\n        content = renderTextInput(el.data)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return content\r\n  }\r\n\r\n  /**\r\n   * Renders a collection of sections (including all nested subsections)\r\n   */\r\n  const renderSections = (secs, depth) => {\r\n    let content = null\r\n\r\n    return secs.map((sec, secIdx) => {\r\n      const elements = sec.elements.map((el, idx) => {\r\n        if (!el.module) return null\r\n\r\n        if (el.module !== 'subsections') {\r\n          content = renderIncludedElement(el)\r\n\r\n          return <div className=\"__element p-2\" key={`${el.id}`}>{content}</div>\r\n        } else {\r\n          content = renderSections(el.sections, depth + 1)\r\n\r\n          return content\r\n        }\r\n      })\r\n\r\n      if (depth === 1) {\r\n        return (\r\n          <div className=\"p-6 border my-1 border-solid\" key={`sect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"__subsection\" key={`subsect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const formContent = renderSections(formSections, 1)\r\n\r\n  return <>\r\n    {formContent}\r\n  </>\r\n}","export const SimpleModal = ({ title, text, buttons, onAccept, onReject }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-70 overflow-y-auto h-full w-full\">\r\n      <div className=\"md:w-1/2 md:h-1/2 bg-white m-auto my-10 overflow-hidden\">\r\n        <div className=\"flex w-full bg-gray-400 p-3 text-white text-2xl\">\r\n          <div className=\"flex-grow text-center\">{title}</div>\r\n        </div>\r\n        <div className=\"p-6 lg:text-lg md:text-md\">\r\n          {text.map((t, idx) => {\r\n            return <p className=\"p-5 py-2\" key={idx}>{t}</p>\r\n          })}\r\n        </div>\r\n        <div className=\"flex pl-6\">\r\n          <button className=\"flex-grow flex-1 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onAccept}>{buttons.accept}</button>\r\n          <button className=\"flex-grow flex-1 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onReject}>{buttons.reject}</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { FormBuilder } from './formbuilder/FormBuilder'\r\nimport { SimpleModal } from './simplemodal/SimpleModal'\r\n\r\n\r\nexport const SurveyPage = ({ page, onPageComplete, onChange, onNextPage, onPrevPage }) => {\r\n  const allowProceed = page.settings?.allowProceed === true\r\n  const [currentPageIsComplete, setCurrentPageIsComplete] = useState(false)\r\n  const [modalContent, setModalContent] = useState({ show: false })\r\n\r\n  useEffect(() => {\r\n    if (allowProceed === true) {\r\n      setCurrentPageIsComplete(true)\r\n    }\r\n  }, [allowProceed])\r\n\r\n  const triggerNextPage = (e) => {\r\n    if (page.nextId) {\r\n      if (page.settings?.confirmMoveForward) {\r\n        const { title, text, buttons } = page.settings?.confirmMoveForward\r\n\r\n        setModalContent({\r\n          show: true,\r\n          title,\r\n          text,\r\n          buttons,\r\n          onAccept: () => {\r\n            setModalContent({ show: false })\r\n            setCurrentPageIsComplete(false)\r\n            onNextPage()\r\n          },\r\n          onReject: () => { setModalContent({ show: false }) }\r\n        })\r\n      } else {\r\n        setModalContent({ show: false })\r\n        onNextPage()\r\n      }\r\n    } else {\r\n      onNextPage()\r\n    }\r\n  }\r\n\r\n  const triggerPrevPage = (e) => {\r\n    if (page.prevId) {\r\n      onPrevPage()\r\n    }\r\n  }\r\n\r\n  const handleFormChanged = (formName, formData) => {\r\n    onChange(formName || 'general', formData)\r\n  }\r\n\r\n  const handleFormComplete = (isCompleted) => {\r\n    setCurrentPageIsComplete(isCompleted)\r\n    onPageComplete()\r\n  }\r\n\r\n  const renderBackButton = () => {\r\n    if (page.settings?.allowMoveBack !== true) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <button className={clsx({\r\n        \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n      })} type=\"button\" onClick={triggerPrevPage}>\r\n        Zurück\r\n      </button>\r\n    )\r\n  }\r\n\r\n  const renderNextButton = () => {\r\n    if (page.nextId === null) {\r\n      page.labelNextPage = 'Umfrage beenden'\r\n    }\r\n\r\n    return (<button disabled={currentPageIsComplete === false && 'disabled'} className={clsx({\r\n      \"m-5 bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": currentPageIsComplete === false,\r\n      \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n    })} type=\"button\" onClick={triggerNextPage}>\r\n      {page.labelNextPage || 'Weiter'}\r\n    </button>)\r\n  }\r\n\r\n  const backButton = renderBackButton()\r\n  const nextButton = renderNextButton()\r\n\r\n  const {\r\n    show,\r\n    title,\r\n    text,\r\n    buttons,\r\n    onAccept,\r\n    onReject\r\n  } = modalContent\r\n\r\n  const modalWindow = show ?\r\n    <SimpleModal\r\n      title={title}\r\n      text={text}\r\n      buttons={buttons}\r\n      onAccept={onAccept}\r\n      onReject={onReject}\r\n    />\r\n    : null\r\n\r\n  return (\r\n    <div key={page.thisId}>\r\n      {(page.sections?.length > 0) ?\r\n        <FormBuilder\r\n          key={`form_${page.thisId}`}\r\n          formSections={page.sections}\r\n          formName={`page:${page.thisId.toString().padStart(2, '0')}`}\r\n          onFormChanged={handleFormChanged}\r\n          onFormComplete={handleFormComplete}\r\n        /> :\r\n        null}\r\n\r\n      <div className=\"flex items-center justify-between\">\r\n        {backButton}\r\n        {nextButton}\r\n      </div>\r\n\r\n      {modalWindow}\r\n    </div>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { SurveyPage } from './SurveyPage'\r\n\r\n\r\nconst getPage = (pageSet, pageId) => {\r\n  const pages = pageSet.filter(val => val.thisId === pageId)\r\n  if (pages.length > 1) { console.error(`Found more than 1 page with id (${pageId})`) }\r\n  return pages[0]\r\n}\r\n\r\nconst getFirstPage = (pageSet) => {\r\n  const rootPages = pageSet.filter(val => val.prevId === null)\r\n  if (rootPages.length > 1) { console.error('Found more than 1 root page') }\r\n  return rootPages[0]\r\n}\r\n\r\n\r\nexport const SurveyQuestionaire = ({ pages, onChange, onComplete, sessionId }) => {\r\n  const [currentPage, setCurrentPage] = useState(null)\r\n\r\n  if (!pages || pages.length < 1) {\r\n    console.error('No pages defined in survey')\r\n    return null\r\n  }\r\n\r\n  if (!currentPage) {\r\n    const firstPage = getFirstPage(pages)\r\n    if (firstPage && firstPage.thisId >= 0) {\r\n      setCurrentPage(firstPage)\r\n    }\r\n    return null\r\n  }\r\n\r\n  const triggerNextPage = () => {\r\n    if (currentPage.nextId) {\r\n      setCurrentPage(getPage(pages, currentPage.nextId))\r\n    } else {\r\n      onComplete()\r\n    }\r\n  }\r\n\r\n  const triggerPrevPage = () => {\r\n    if (currentPage.prevId) {\r\n      setCurrentPage(getPage(pages, currentPage.prevId))\r\n    }\r\n  }\r\n\r\n  const handleFormPageCompleted = (pageData) => {\r\n    console.log('Daten empfangen:', pageData)\r\n  }\r\n\r\n  const handleDataChanged = (formName, formData) => {\r\n    onChange(formName, formData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-end\">\r\n        <div className=\"text-white bg-gray-400 px-2 py-0\">\r\n          Seite: {currentPage.thisId}\r\n        </div>\r\n      </div>\r\n      <SurveyPage\r\n        page={currentPage}\r\n        onChange={handleDataChanged}\r\n        onPageComplete={handleFormPageCompleted}\r\n        onNextPage={triggerNextPage}\r\n        onPrevPage={triggerPrevPage}\r\n      />\r\n    </>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { SurveyQuestionaire } from './SurveyQuestionaire'\r\n\r\n\r\nexport const SurveyManager = ({ ruleSet, onSaveData, sessionId }) => {\r\n  const [surveyIsComplete, setSurveyIsComplete] = useState(false)\r\n\r\n  let surveyData = { sessionId: sessionId }\r\n\r\n  const completeSurvey = () => {\r\n    surveyData.surveyId = ruleSet.meta.surveyId\r\n    onSaveData(surveyData)\r\n    setSurveyIsComplete(true)\r\n  }\r\n\r\n  const updateSurveyData = (pageId, data) => {\r\n    surveyData[pageId] = data\r\n    console.log('UPDATED:', surveyData)\r\n  }\r\n\r\n  return surveyIsComplete ? (\r\n    <div className='flex h-screen'>\r\n      <div className='text-black font-bold text-3xl m-auto text-4xl'>\r\n        Umfrage beendet. Sie dürfen das Fenster jetzt schließen.\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <SurveyQuestionaire\r\n        sessionId={sessionId}\r\n        pages={ruleSet?.pages}\r\n        onChange={updateSurveyData}\r\n        onComplete={completeSurvey}\r\n      />\r\n    </>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport { SurveyManager } from './components/survey/SurveyManager'\r\nimport axios from 'axios'\r\nimport CryptoJS from 'crypto-js'\r\nimport sha256 from 'crypto-js/sha256'\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getDatabase, ref, set } from \"firebase/database\"\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCFasaqUqOltO4gxPbNmR4gYQqusN2Zthg\",\r\n  authDomain: \"escp-survey-2022.firebaseapp.com\",\r\n  databaseURL: \"https://escp-survey-2022-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"escp-survey-2022\",\r\n  storageBucket: \"escp-survey-2022.appspot.com\",\r\n  messagingSenderId: \"105376003688\",\r\n  appId: \"1:105376003688:web:8a1b08d2a162565648eddd\"\r\n}\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig)\r\nconst dbDatabase = getDatabase()\r\n\r\nconst getRandomHash = () => {\r\n  const hash = sha256(Math.random().toString() + new Date().getUTCMilliseconds.toString())\r\n  return hash.toString(CryptoJS.enc.Hex)\r\n}\r\n\r\nconst getDatePrefix = () => {\r\n  const now = new Date()\r\n  return now.getFullYear().toString() +\r\n    (now.getMonth() + 1).toString().padStart(2, '0') +\r\n    now.getDate().toString().padStart(2, '0') + '_' +\r\n    now.getHours().toString().padStart(2, '0') +\r\n    now.getMinutes().toString().padStart(2, '0') +\r\n    now.getSeconds().toString().padStart(2, '0') +\r\n    now.getMilliseconds().toString().padStart(2, '0')\r\n}\r\n\r\nconst surveySessionId = getRandomHash()\r\n\r\nconst writeToDatabase = (data) => {\r\n  console.log('Store data in database:', data)\r\n  set(ref(dbDatabase, `surveys/${data.surveyId}/${getDatePrefix()}_${data.sessionId.toString().substr(0, 10)}`), {\r\n    data: data\r\n  })\r\n    .then(() => {\r\n      console.log('Saved successfully!', data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Not Saved successfully!')\r\n    })\r\n}\r\n\r\n\r\nconst validateRuleSet = (unvalidatedRules) => {\r\n  // @TODO verify the structure of the survey.json (using ajv?) in order to avoid unnescessary problems with broken json\r\n\r\n  return unvalidatedRules\r\n}\r\n\r\nfunction App() {\r\n  const [surveyControlData, setSurveyControlData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/survey.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setSurveyControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return surveyControlData ? (\r\n    <div className=\"container max-w-screen-md ml-auto mr-auto\">\r\n      <SurveyManager ruleSet={surveyControlData} onSaveData={writeToDatabase} sessionId={surveySessionId} />\r\n    </div>\r\n  ) : (\r\n    <div className='flex h-screen'>\r\n      <div className='m-auto text-6xl'>Daten werden geladen...</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}