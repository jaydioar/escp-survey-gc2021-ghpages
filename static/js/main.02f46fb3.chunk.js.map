{"version":3,"sources":["components/survey/formbuilder/dropdown/DropDown.jsx","components/survey/formbuilder/researchsimulation/ResearchSimulation.jsx","helpers/bbcode.js","components/survey/formbuilder/selectfromrange/SelectFromRange.jsx","components/survey/formbuilder/slider/Slider.jsx","components/survey/formbuilder/textarea/TextArea.jsx","components/survey/formbuilder/textinput/TextInput.jsx","components/survey/formbuilder/selfassessment/SelfAssessment.jsx","components/survey/formbuilder/FormBuilder.jsx","components/survey/simplemodal/SimpleModal.jsx","components/survey/SurveyPage.jsx","components/survey/SurveyQuestionaire.jsx","components/survey/SurveyManager.jsx","App.js","reportWebVitals.js","index.js"],"names":["DropDown","name","label","options","onValueSelect","className","onChange","map","opt","idx","value","viewerStart","ResearchSimulation","onSearchHistoryChanged","placeholder","notFoundMessage","labelOpenDocument","useState","searchKeywords","setSearchKeywords","init","searchResults","setSearchResults","loggedActions","logAction","title","url","viewerIsOpen","docToView","setDocToView","controlData","setControlData","useEffect","axios","get","then","response","validRuleSet","ruleSet","researchSimulation","Error","config","cues","length","forEach","element","id","keywords","JSON","stringify","err","console","error","message","validateRuleSet","data","log","action","info","actions","push","time_","Date","getTime","time","toISOString","target","triggerSearch","e","res","toLowerCase","split","reduce","acc","kw","filter","item","indexOf","cue","Object","keys","autoFocus","onKeyPress","key","type","disabled","clsx","onClick","k","now","durationOfView","durationInSec","src","frameBorder","scrolling","height","width","replaceBBCode","raw","last","replace","SelectFromRange","handleChange","dangerouslySetInnerHTML","__html","htmlFor","Slider","min","max","unit","otherAttrs","Math","ceil","currentSliderValue","setCurrentSliderValue","handleFinishedSlide","defaultValue","onMouseUp","onKeyUp","TextArea","onComplete","otherProps","isRequired","onBlur","TextInput","SelfAssessment","onAllChosen","attributes","randomOrder","inputArray","ia","sort","random","shuffleArray","inputData","fieldsOrdered","answers","handleOptChange","score","posMatches","negMatches","attr","v","trend","calcGoughScore","score1","score2","attrData","renderedElementId","propsAreEqual","prevProps","nextProps","formSections","FormBuilder","memo","formName","onFormChanged","onFormComplete","defaultValues","completedInputFields","assign","requiredInputFields","registerRequiredInputField","includes","renderText","paragraphs","p","stashInput","xname","xvalue","ci","saveCurrentInputValue","isCompleted","reqFieldName","undefined","formIsCompleted","cif","renderTextInput","rows","isOptional","curVal","renderTextArea","registerOpen","renderPickVersion","versions","numVersions","choosenVersion","round","elements","el","module","renderIncludedElement","renderAside","sideElements","content","renderSelfAssessment","href","renderLinkThumbnail","labe","renderResearchSimulation","renderDropDown","renderSelectFromRange","renderSlider","text","renderHeadline","renderBoxedText","bPoints","renderBulletList","formContent","renderSections","secs","depth","sec","secIdx","sections","SimpleModal","buttons","onAccept","onReject","t","accept","reject","SurveyPage","page","onNextPage","onPrevPage","allowProceed","useMemo","settings","thisId","currentPageIsComplete","setCurrentPageIsComplete","show","modalContent","setModalContent","formData","setFormData","lockNextButton","triggerNextPage","nextId","confirmMoveForward","triggerPrevPage","prevId","backButton","allowMoveBack","renderBackButton","nextButton","labelNextPage","modalWindow","toString","padStart","_timeComplete","timeComplete","getPage","pageSet","pageId","pages","val","SurveyQuestionaire","currentPage","setCurrentPage","firstPage","rootPages","getFirstPage","window","scrollTo","SurveyManager","onSaveData","sessionId","surveyIsComplete","setSurveyIsComplete","surveyId","meta","surveyData","setSurveyData","sd","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dbDatabase","getDatabase","startDate","surveySessionId","sha256","getUTCMilliseconds","CryptoJS","enc","Hex","writeToDatabase","endDate","_startDate","_endDate","set","ref","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","substr","catch","App","surveyControlData","setSurveyControlData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f46fb3.chunk.js","sourcesContent":["\r\nexport const DropDown = ({ name, label, options, onValueSelect, ...otherAttrs }) => {\r\n  return (\r\n    <div key={name}>\r\n      <div className=\"font-bold pb-5\">{label}</div>\r\n      <select name={name} onChange={onValueSelect} className=\"py-1 px-3 border border-solid border-black bg-gray-50\">\r\n        {options.map((opt, idx) => {\r\n          return <option value={opt.value} key={idx}>{opt.label}</option>\r\n        })}\r\n      </select>\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport clsx from 'clsx'\r\n\r\nconst MIN_CHARS_FOR_SEARCH = 4\r\nlet viewerStart = null\r\n\r\nexport const ResearchSimulation = ({ name, onSearchHistoryChanged, placeholder, notFoundMessage, labelOpenDocument, ...otherAttrs }) => {\r\n  const [searchKeywords, setSearchKeywords] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState({ init: true })\r\n  const [loggedActions, logAction] = useState([])\r\n  const [docToView, setDocToView] = useState({ title: null, url: null, viewerIsOpen: false })\r\n  const [controlData, setControlData] = useState(null)\r\n\r\n  const validateRuleSet = (ruleSet) => {\r\n    if (!ruleSet?.researchSimulation) {\r\n      throw Error('Die Daten in research-simulation.json sind ungültig!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.config) {\r\n      throw Error('Abschnitt \"config: { ... }\" in research-simulation.json fehlt!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.cues?.length > 0) {\r\n      throw Error('Abschnitt \"cues\": [ ... ] in research-simulation.json fehlt oder ist leer!')\r\n    }\r\n\r\n    try {\r\n      ruleSet.researchSimulation.cues.forEach(element => {\r\n        const { id, title, keywords, url } = element\r\n\r\n        if (!id || typeof id !== \"number\") { throw Error(`Fehlendes oder ungültiges Attribute \"id\" (keine Zahl?) in ${JSON.stringify(element)}`) }\r\n        if (!title || typeof title !== \"string\" || title?.length < 1) { throw Error(`Fehlendes oder ungültiges Attribute \"title\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!keywords || !keywords?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"keywords\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!url || !url?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"url\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n      })\r\n    } catch (err) {\r\n      console.error(err)\r\n      throw JSON.stringify(err.message)\r\n    }\r\n\r\n    return ruleSet\r\n  }\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/research-simulation.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const getSearchResults = (keywords) => {\r\n    const kws = keywords.toLowerCase().split(';')\r\n\r\n    return kws.reduce((acc, kw) => {\r\n      if (kw.length === 0) return acc\r\n\r\n      const cues4Kw = controlData.researchSimulation?.cues.filter((item) => {\r\n        return item.keywords.toLowerCase().indexOf(kw) > -1\r\n      })\r\n\r\n      cues4Kw.forEach(cue => {\r\n        acc[cue.id] = cue\r\n      })\r\n\r\n      return acc\r\n    }, {})\r\n  }\r\n\r\n  const updateKeywords = (e) => {\r\n    setSearchKeywords(e.target.value)\r\n  }\r\n\r\n  // try {\r\n  //   ruleSetIsValid()\r\n  // }\r\n  // catch (err) {\r\n  //   return (<div className=\"bg-red-100 text-red-700 p-20\">\r\n  //     Die Daten in der JSON-Datei für das Modul \"Research Simulation\" sind ungültig.<br />\r\n  //     {JSON.parse(err)}\r\n  //   </div>)\r\n  // }\r\n\r\n  const log = (action, info) => {\r\n    const actions = loggedActions\r\n    actions.push({\r\n      time_: new Date().getTime(),\r\n      time: new Date().toISOString(),\r\n      action,\r\n      info\r\n    })\r\n    logAction(actions)\r\n    onSearchHistoryChanged({ target: { name: name, value: actions } })\r\n  }\r\n\r\n  const triggerSearch = (e) => {\r\n    const res = getSearchResults(searchKeywords)\r\n    if (Object.keys(res).length === 0) {\r\n      log('SEARCH-FAILED', searchKeywords)\r\n    } else {\r\n      log('SEARCH-SUCCESS', searchKeywords)\r\n    }\r\n\r\n    setSearchResults(res)\r\n  }\r\n\r\n  const getViewer = (cue) => () => {\r\n    log('OPEN', cue.url)\r\n    const now = new Date()\r\n    viewerStart = now.getTime()\r\n    setDocToView({ title: cue.title, url: cue.url, viewerIsOpen: true })\r\n  }\r\n\r\n  const closeViewer = (e) => {\r\n    const url = docToView.url\r\n    const now = new Date()\r\n    const durationOfView = now.getTime() - viewerStart\r\n    viewerStart = null\r\n    log('CLOSE', { url, durationInSec: durationOfView / 1000 })\r\n    setDocToView({ title: null, url: null, viewerIsOpen: false })\r\n  }\r\n\r\n  const handleEnterKey = (e) => {\r\n    if (e.key === 'Enter' && searchKeywords.length >= MIN_CHARS_FOR_SEARCH) {\r\n      triggerSearch()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <h1 className=\"text-3xl pb-4\">Recherche</h1>\r\n\r\n      <div className=\"bg-blue-50 shadow-md px-8 pt-6 pb-8 mb-4\">\r\n        <div className=\"mb-4\">\r\n          <input autoFocus onKeyPress={handleEnterKey} onChange={updateKeywords} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"keywords\" type=\"text\" placeholder={placeholder} />\r\n        </div>\r\n        <div className=\"flex items-center justify-between\">\r\n          <button disabled={searchKeywords.length < MIN_CHARS_FOR_SEARCH && 'disabled'} className={clsx({\r\n            \"bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": searchKeywords.length < MIN_CHARS_FOR_SEARCH,\r\n            \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": searchKeywords.length >= MIN_CHARS_FOR_SEARCH\r\n          })} type=\"button\" onClick={triggerSearch}>\r\n            Suchen\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).length === 0 && (\r\n        <div className=\"bg-gray-50 p-10 my-10\">\r\n          <div>{notFoundMessage}</div>\r\n        </div>)\r\n      }\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).map(k => (\r\n        <div className=\"bg-gray-50 p-5 my-1 border-gray-500\" key={k}>\r\n          <div className=\"font-bold\">{searchResults[k].title}</div>\r\n          <div className=\"text-blue-400\"><div className=\"cursor-pointer text-blue-700\" onClick={getViewer(searchResults[k])}>{labelOpenDocument}</div></div>\r\n        </div>)\r\n      )}\r\n\r\n      {docToView.viewerIsOpen && <div className=\"fixed inset-0 bg-gray-600 bg-opacity-99 overflow-y-auto h-full w-full\">\r\n        <div className=\"flex w-full bg-gray-800 text-white text-xl p-2\">\r\n          <button className=\"flex-none p-2 cursor-pointer m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded focus:outline-none focus:shadow-outline\" onClick={closeViewer}>Zurück zur Suchmaske</button>\r\n          <div className=\"flex-grow text-center pt-4 pl-52 text-2xl font-bold\">{docToView.title}</div>\r\n        </div>\r\n        <div className=\"w-full h-full\">\r\n          <embed\r\n            src={docToView.url}\r\n            type=\"application/pdf\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"auto\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></embed>\r\n        </div>\r\n      </div>}\r\n\r\n    </div>\r\n  )\r\n\r\n}","/**\r\n * Finds and replaces some very basic BBCode tags\r\n */\r\nexport const replaceBBCode = raw => {\r\n  if (!raw || raw.length < 1) return\r\n\r\n  let last = null\r\n  let res = raw\r\n\r\n  do {\r\n    last = res\r\n    // match simple format tags\r\n    res = res.replace(/\\[(b|i|u|s|center)\\](.*?)\\[\\/\\1\\]/gs, \"<$1>$2</$1>\")\r\n    res = res.replace(/\\[url=(\\/.+?)\\](.*?)\\[\\/url\\]/g, \"<a href='$1' target='_blank' class='external'>$2</a>\")\r\n  } while (res !== last)\r\n\r\n  // match line breaks\r\n  res = res.replace(/\\[br\\]*/gs, \"<br />\")\r\n\r\n  return res\r\n}\r\n\r\n","import { replaceBBCode } from \"../../../../helpers/bbcode\"\r\n\r\nexport const SelectFromRange = ({ name, label, options, onChange, ...otherAttrs }) => {\r\n\r\n  const handleChange = (e) => {\r\n    return onChange(e)\r\n  }\r\n\r\n  return (<div key={name} className=\"p-0 w-full\">\r\n    <div className=\"max-w-full pb-5 font-bold\" dangerouslySetInnerHTML={{\r\n      __html: replaceBBCode(label) || ' '\r\n    }}></div>\r\n\r\n    <div className=\"w-full flex\">\r\n      {options.map((opt, idx) => (\r\n        <label className=\"w-full border border-solid\" key={idx} htmlFor={`${name}${opt.value}`}>\r\n          <div className=\"h-16 font-bold text-center whitespace-pre\" dangerouslySetInnerHTML={{\r\n            __html: replaceBBCode(opt.label) || ' '\r\n          }}>\r\n          </div>\r\n          <div className=\"text-center\"><input type=\"radio\" name={name} id={`${name}${opt.value}`} value={opt.value} onChange={handleChange} /></div>\r\n          <div className=\"text-center\">{opt.value}</div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  </div>)\r\n}","import { useState } from \"react\"\r\n\r\nexport const Slider = ({ name, min, max, label, unit, onChange, ...otherAttrs }) => {\r\n  const middleMinMax = Math.ceil(min + ((max - min) / 2))\r\n  const [currentSliderValue, setCurrentSliderValue] = useState(null)\r\n\r\n  const handleSlideChange = (e) => {\r\n    setCurrentSliderValue(e.target.value)\r\n  }\r\n\r\n  const handleFinishedSlide = (e) => {\r\n    return onChange({\r\n      target: {\r\n        name: name,\r\n        value: currentSliderValue\r\n      }\r\n    })\r\n  }\r\n\r\n  return (<div key={name} className=\"p-0\">\r\n    <div className=\"max-w-sm font-bold pb-5\">{label}</div>\r\n    <input\r\n      className=\"bg-gray-400\"\r\n      type=\"range\"\r\n      name={name}\r\n      min={min}\r\n      max={max}\r\n      defaultValue={-1}\r\n      onChange={handleSlideChange}\r\n      onMouseUp={handleFinishedSlide}\r\n      onKeyUp={handleFinishedSlide}\r\n      {...otherAttrs}\r\n    />&nbsp;\r\n    <span>{currentSliderValue} {unit}</span>\r\n  </div>)\r\n}","export const TextArea = ({ name, onChange, onComplete, label, isRequired, ...otherProps }) => {\r\n  const onChangeHandler = e => {\r\n    if (e.target.value.length > 0) {\r\n      onChange(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && <div className=\"font-bold pb-5\">{label}</div>}\r\n      <textarea\r\n        name={name}\r\n        onChange={onChangeHandler}\r\n        onBlur={onComplete}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...otherProps} />\r\n    </>\r\n  )\r\n}","export const TextInput = ({ onChange, onComplete, label, ...otherProps }) => {\r\n  const handleOnChangeEvent = e => {\r\n    if (e.target.value.length > 0) {\r\n      onChange(e)\r\n      onComplete(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && <div className=\"font-bold pb-5\">{label}</div>}\r\n      <input type=\"text\"\r\n        onChange={handleOnChangeEvent}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...otherProps} />\r\n    </>\r\n  )\r\n}","export const SelfAssessment = ({ data, onAllChosen, ...otherAttrs }) => {\r\n  if (!data?.attributes || data.attributes.length === 0) {\r\n    return <div>No attributes given</div>\r\n  }\r\n\r\n  const shuffleArray = (inputArray) => {\r\n    const ia = inputArray\r\n    ia.sort(() => Math.random() - 0.5)\r\n    return ia\r\n  }\r\n\r\n  const calcGoughScore = (answers, attributes) => {\r\n    let score = 0\r\n    let posMatches = 0\r\n    let negMatches = 0\r\n\r\n    Object.keys(answers).forEach(element => {\r\n      const attr = attributes.filter(v => { return (v.name === element) })[0]\r\n\r\n      if (attr.trend === 'pos' && answers[element] === 'y') {\r\n        score++\r\n        posMatches++\r\n      }\r\n\r\n      if (attr.trend === 'neg' && answers[element] === 'y') {\r\n        score--\r\n        negMatches++\r\n      }\r\n    })\r\n\r\n    return ({\r\n      score,\r\n      posMatches,\r\n      negMatches\r\n    })\r\n  }\r\n\r\n  const randomOrder = shuffleArray(Object.keys(data.attributes))\r\n\r\n  const fieldsOrdered = randomOrder.map(key => {\r\n    return data.attributes[key].name\r\n  })\r\n\r\n  let inputData = {\r\n    fieldsOrdered: fieldsOrdered,\r\n    answers: {}\r\n  }\r\n\r\n  const handleOptChange = e => {\r\n    inputData.answers[e.target.name] = e.target.value\r\n\r\n    if (Object.keys(inputData.answers).length > 0 &&\r\n      Object.keys(inputData.answers).length === inputData.fieldsOrdered.length) {\r\n      const { score, posMatches, negMatches } = calcGoughScore(inputData.answers, data.attributes)\r\n\r\n      inputData.score1 = score\r\n      inputData.score2 = posMatches / (posMatches + negMatches)\r\n      onAllChosen({\r\n        target: {\r\n          name: data.name,\r\n          value: inputData,\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap\">\r\n      {randomOrder.map((key, idx) => {\r\n        const attrData = data.attributes[key]\r\n\r\n        return (\r\n          <div className=\"flex w-full md:w-1/2\" key={idx}>\r\n            <div className=\"border border-solid border-gray-200 bg-gray-50 flex p-2 w-full\">\r\n              <div className=\"flex-grow\">{attrData.label}</div>\r\n              <label htmlFor={attrData.name} className=\"flex-0 w-1/4\">\r\n                <input type=\"radio\" name={attrData.name} id={attrData.name} value=\"y\" onChange={handleOptChange} />&nbsp; Ja\r\n              </label>\r\n              <label htmlFor={attrData.name + '2'} className=\"flex-0\">\r\n                <input type=\"radio\" name={attrData.name} id={attrData.name + '2'} value=\"n\" onChange={handleOptChange} />&nbsp; Nein\r\n              </label>\r\n            </div>\r\n          </div>)\r\n      })}\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n}","import { DropDown } from \"./dropdown/DropDown\"\r\nimport { ResearchSimulation } from \"./researchsimulation/ResearchSimulation\"\r\nimport { SelectFromRange } from \"./selectfromrange/SelectFromRange\"\r\nimport { Slider } from \"./slider/Slider\"\r\nimport { TextArea } from \"./textarea/TextArea\"\r\nimport { TextInput } from \"./textinput/TextInput\"\r\nimport { replaceBBCode } from \"./../../../helpers/bbcode\"\r\nimport { SelfAssessment } from \"./selfassessment/SelfAssessment\"\r\nimport { memo } from \"react\"\r\n\r\n// @TODO find better solution for generating unique element ids\r\nlet renderedElementId = 0\r\n\r\n\r\nconst propsAreEqual = (prevProps, nextProps) => {\r\n  return prevProps.formSections === nextProps.formSections\r\n}\r\n\r\nexport const FormBuilder = memo(({ formSections, formName, onFormChanged, onFormComplete, defaultValues }) => {\r\n\r\n  let completedInputFields = Object.assign({}, defaultValues)\r\n  let requiredInputFields = []\r\n\r\n  const registerRequiredInputField = (name, isRequired) => {\r\n    if (isRequired && !requiredInputFields.includes(name)) {\r\n      requiredInputFields.push(name)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders a section headline\r\n   */\r\n  const renderHeadline = data => {\r\n    return (\r\n      <div className=\"text-xl pt-3 pb-4\" key={data.text}>\r\n        <strong>{data.text}</strong>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders a bunch of text paragraphs\r\n   */\r\n  const renderText = data => {\r\n    return data.paragraphs.map((p, idx) => (\r\n      <p className=\"pb-3\" key={idx} dangerouslySetInnerHTML={{\r\n        __html: replaceBBCode(p)\r\n      }}></p>\r\n    ))\r\n  }\r\n\r\n  const renderBoxedText = data => {\r\n    const text = renderText(data)\r\n    return <div className=\"border border-gray-400 bg-gray-200 p-5 border-solid\">\r\n      {text}\r\n    </div>\r\n  }\r\n\r\n  const renderBulletList = data => {\r\n    const bPoints = data.paragraphs.map((p, idx) => {\r\n      return <li className=\"pb-3 list-item\" key={idx}>{p}</li>\r\n    })\r\n\r\n    return <ul className=\"pl-10 list-outside list-disc\">\r\n      {bPoints}\r\n    </ul>\r\n  }\r\n\r\n  const formIsCompleted = () => {\r\n    if (!completedInputFields) {\r\n      return false\r\n    }\r\n\r\n    if (completedInputFields && Object.keys(completedInputFields).length < 1) {\r\n      return true\r\n    }\r\n\r\n    let isCompleted = true\r\n\r\n    requiredInputFields.forEach(reqFieldName => {\r\n      if (completedInputFields[reqFieldName] === undefined || completedInputFields[reqFieldName] === null) {\r\n        isCompleted = false\r\n      }\r\n    })\r\n    return isCompleted\r\n  }\r\n\r\n  const stashInput = (xname, xvalue) => {\r\n    const ci = completedInputFields\r\n    ci[xname] = xvalue\r\n    completedInputFields = ci\r\n  }\r\n\r\n  const saveCurrentInputValue = e => {\r\n    stashInput(e.target.name, e.target.value)\r\n    onFormChanged(formName, completedInputFields)\r\n\r\n    if (formIsCompleted()) {\r\n      let cif = Object.assign({}, completedInputFields)\r\n      cif.isCompleted = true\r\n      onFormComplete(formName, cif)\r\n    }\r\n  }\r\n\r\n\r\n  const renderSlider = ({ label, name, unit, min, max, isOptional, ...otherAttributes }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    return (\r\n      <div key={name} className=\"bg-gray-200 p-5 w-full\">\r\n        <Slider\r\n          name={name}\r\n          className=\"min-w-full\"\r\n          label={label}\r\n          unit={unit}\r\n          onChange={saveCurrentInputValue}\r\n          min={min}\r\n          max={max}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderSelectFromRange = ({ name, isOptional, label, options }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n\r\n    return (\r\n      <div key={name} className=\"bg-gray-200 p-5\">\r\n        <SelectFromRange\r\n          name={name}\r\n          label={label}\r\n          options={options}\r\n          onChange={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * Renders a multiline text input field (<textarea...)\r\n   */\r\n  const renderTextArea = ({ name, label, rows, placeholder, isOptional }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    const curVal = completedInputFields?.[name] || null\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <TextArea\r\n          className=\"w-full p-5\"\r\n          onChange={saveCurrentInputValue}\r\n          onComplete={() => { }}\r\n          isRequired={!isOptional}\r\n          label={label}\r\n          name={name}\r\n          rows={rows}\r\n          placeholder={placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders a single line (<input ..) or a multiline (<textarea.. ) input field\r\n   */\r\n  const renderTextInput = ({ name, label, rows, placeholder, isOptional }) => {\r\n    if (rows > 1) {\r\n      return renderTextArea({ name, label, rows, placeholder })\r\n    }\r\n\r\n    registerRequiredInputField(name, !isOptional)\r\n    const curVal = completedInputFields?.[name] || null\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <TextInput\r\n          className=\"w-full p-5\"\r\n          onBlur={saveCurrentInputValue}\r\n          onChange={() => null}\r\n          onComplete={saveCurrentInputValue}\r\n          label={label}\r\n          name={name}\r\n          rows={rows}\r\n          placeholder={placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderDropDown = ({ name, label, options, isOptional }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <DropDown\r\n          name={name}\r\n          label={label}\r\n          options={options}\r\n          onValueSelect={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderResearchSimulation = ({ name, label, placeholder, notFoundMessage, labelOpenDocument }) => {\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <ResearchSimulation\r\n          name={name}\r\n          labe={label}\r\n          placeholder={placeholder}\r\n          notFoundMessage={notFoundMessage}\r\n          labelOpenDocument={labelOpenDocument}\r\n          onSearchHistoryChanged={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const registerOpen = (url, name) => {\r\n    return (e) => {\r\n      saveCurrentInputValue(\r\n        {\r\n          target: {\r\n            name: name,\r\n            value: { url: url, time_: new Date().getTime(), time: new Date().toISOString() }\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderLinkThumbnail = ({ url, target, name, title }) => {\r\n    return (\r\n      <a href={url} target={target} onClick={registerOpen(url, name)}>\r\n        <div key={name} className=\"border-1 border-solid bg-gray-100 p-5 w-auto hover:bg-gray-200\">\r\n          {title}\r\n        </div>\r\n      </a>\r\n    )\r\n  }\r\n\r\n  const renderPickVersion = ({ name, isOptional, versions }) => {\r\n    const numVersions = versions?.length\r\n    if (numVersions < 1) return null\r\n    const choosenVersion = completedInputFields[name] || Math.round(Math.random() * (numVersions - 1))\r\n\r\n    stashInput(name, choosenVersion)\r\n    const res = versions[choosenVersion].elements?.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\" key={idx}>{renderIncludedElement(el)}</div>\r\n      }\r\n\r\n      return null\r\n    })\r\n\r\n    return <div key={name}>{res}</div>\r\n  }\r\n\r\n  const renderAside = (elements) => {\r\n    const sideElements = elements.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\" key={el.id}>{renderIncludedElement(el)}</div>\r\n      }\r\n\r\n      return null\r\n    })\r\n\r\n    return (<div className=\"absolute right-0 top-0 h-screen\">\r\n      <div className=\"__element p-2 sticky right-0 top-0\">\r\n        {sideElements}\r\n      </div>\r\n    </div>)\r\n  }\r\n\r\n\r\n\r\n  const renderSelfAssessment = (data) => {\r\n    return (\r\n      <div key={data.name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <SelfAssessment\r\n          data={data}\r\n          onAllChosen={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders an element inside a cell or section\r\n   */\r\n  const renderIncludedElement = ({ data, elements, module }) => {\r\n    let content = null\r\n    data.id = renderedElementId++\r\n\r\n    switch (module.toLowerCase()) {\r\n      case 'aside':\r\n        content = renderAside(elements)\r\n        break\r\n      case 'selfassessment':\r\n        content = renderSelfAssessment(data)\r\n        break\r\n      case 'linkthumbnail':\r\n        content = renderLinkThumbnail(data)\r\n        break\r\n      case 'researchsimulation':\r\n        content = renderResearchSimulation(data)\r\n        break\r\n      case 'dropdown':\r\n        content = renderDropDown(data)\r\n        break\r\n      case 'selectfromrange':\r\n        content = renderSelectFromRange(data)\r\n        break\r\n      case 'slider':\r\n        content = renderSlider(data)\r\n        break\r\n      case 'headline':\r\n        content = renderHeadline(data)\r\n        break\r\n      case 'boxedtext':\r\n        content = renderBoxedText(data)\r\n        break\r\n      case 'bulletlist':\r\n        content = renderBulletList(data)\r\n        break\r\n      case 'pickversion':\r\n        content = renderPickVersion(data)\r\n        break\r\n      case 'text':\r\n        content = renderText(data)\r\n        break\r\n      case 'textarea':\r\n      case 'textinput':\r\n        content = renderTextInput(data)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return content\r\n  }\r\n\r\n  /**\r\n   * Renders a collection of sections (including all nested subsections)\r\n   */\r\n  const renderSections = (secs, depth) => {\r\n    let content = null\r\n\r\n    return secs.map((sec, secIdx) => {\r\n      const elements = sec.elements.map((el, idx) => {\r\n        if (!el.module) return null\r\n\r\n        if (el.module !== 'subsections') {\r\n          content = renderIncludedElement(el)\r\n\r\n          return <div className=\"__element p-2\" key={`${el.id}`}>{content}</div>\r\n        } else {\r\n          content = renderSections(el.sections, depth + 1)\r\n\r\n          return content\r\n        }\r\n      })\r\n\r\n      if (depth === 1) {\r\n        return (\r\n          <div className=\"p-6 border my-1 border-solid\" key={`sect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"__subsection\" key={`subsect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const formContent = renderSections(formSections, 1)\r\n  return <>\r\n    {formContent}\r\n  </>\r\n}, propsAreEqual)","export const SimpleModal = ({ title, text, buttons, onAccept, onReject }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-70 overflow-y-auto h-full w-full\">\r\n      <div className=\"md:w-1/2 md:h-1/2 bg-white m-auto my-10 overflow-hidden\">\r\n        <div className=\"flex w-full bg-gray-400 p-3 text-white text-2xl\">\r\n          <div className=\"flex-grow text-center\">{title}</div>\r\n        </div>\r\n        <div className=\"p-6 lg:text-lg md:text-md\">\r\n          {text.map((t, idx) => {\r\n            return <p className=\"p-5 py-2\" key={idx}>{t}</p>\r\n          })}\r\n        </div>\r\n        <div className=\"flex pl-6\">\r\n          <button className=\"flex-grow flex-1 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onAccept}>{buttons.accept}</button>\r\n          <button className=\"flex-grow flex-1 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onReject}>{buttons.reject}</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}","import { useEffect, useMemo, useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { FormBuilder } from './formbuilder/FormBuilder'\r\nimport { SimpleModal } from './simplemodal/SimpleModal'\r\n\r\n\r\nexport const SurveyPage = ({ page, onComplete, onChange, onNextPage, onPrevPage, defaultValues }) => {\r\n  const allowProceed = useMemo(() => page.settings?.allowProceed, [page, page.thisId])\r\n  const [currentPageIsComplete, setCurrentPageIsComplete] = useState(false)\r\n  const [modalContent, setModalContent] = useState({ show: false })\r\n  const [formData, setFormData] = useState(defaultValues)\r\n\r\n  const lockNextButton = () => {\r\n    if (allowProceed === true) {\r\n      setCurrentPageIsComplete(true)\r\n    } else {\r\n      setCurrentPageIsComplete(false)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPageIsComplete(allowProceed)\r\n  }, [allowProceed, setCurrentPageIsComplete])\r\n\r\n  const triggerNextPage = (e) => {\r\n    if (page.nextId) {\r\n      if (page.settings?.confirmMoveForward) {\r\n        const { title, text, buttons } = page.settings?.confirmMoveForward\r\n\r\n        setModalContent({\r\n          show: true,\r\n          title,\r\n          text,\r\n          buttons,\r\n          onAccept: () => {\r\n            setModalContent({ show: false })\r\n            lockNextButton()\r\n            onNextPage()\r\n          },\r\n          onReject: () => { setModalContent({ show: false }) }\r\n        })\r\n      } else {\r\n        setModalContent({ show: false })\r\n        lockNextButton()\r\n        onNextPage()\r\n      }\r\n    } else {\r\n      lockNextButton()\r\n      onNextPage()\r\n    }\r\n  }\r\n\r\n  const triggerPrevPage = (e) => {\r\n    if (page.prevId) {\r\n      onPrevPage()\r\n    }\r\n  }\r\n\r\n  const handleFormChanged = (formName, formData) => {\r\n    formData._timeComplete = new Date().getTime()\r\n    formData.timeComplete = new Date().toISOString()\r\n    setFormData(formData)\r\n    onChange(formName, formData)\r\n  }\r\n\r\n  const handleFormComplete = (formName, formData) => {\r\n    setFormData(formData)\r\n    setCurrentPageIsComplete(true)\r\n  }\r\n\r\n  const renderBackButton = () => {\r\n    if (page.settings?.allowMoveBack !== true) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <button className={clsx({\r\n        \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n      })} type=\"button\" onClick={triggerPrevPage}>\r\n        Zurück\r\n      </button>\r\n    )\r\n  }\r\n\r\n  const renderNextButton = () => {\r\n    if (page.nextId === null) {\r\n      page.labelNextPage = 'Umfrage beenden'\r\n    }\r\n\r\n    return (<button disabled={currentPageIsComplete === false && 'disabled'} className={clsx({\r\n      \"m-5 bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": currentPageIsComplete === false,\r\n      \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n    })} type=\"button\" onClick={triggerNextPage}>\r\n      {page.labelNextPage || 'Weiter'}\r\n    </button>)\r\n  }\r\n\r\n  const backButton = renderBackButton()\r\n  const nextButton = renderNextButton()\r\n\r\n  const {\r\n    show,\r\n    title,\r\n    text,\r\n    buttons,\r\n    onAccept,\r\n    onReject\r\n  } = modalContent\r\n\r\n  const modalWindow = show ?\r\n    <SimpleModal\r\n      title={title}\r\n      text={text}\r\n      buttons={buttons}\r\n      onAccept={onAccept}\r\n      onReject={onReject}\r\n    />\r\n    : null\r\n\r\n  return (\r\n    <div key={page.thisId}>\r\n      {(page.sections?.length > 0) ?\r\n        <FormBuilder\r\n          formSections={page.sections}\r\n          formName={`page:${page.thisId.toString().padStart(2, '0')}`}\r\n          onFormChanged={handleFormChanged}\r\n          onFormComplete={handleFormComplete}\r\n          defaultValues={formData[page.thisId]}\r\n        /> :\r\n        null}\r\n\r\n      <div className=\"flex items-center justify-between\">\r\n        {backButton}\r\n        {nextButton}\r\n      </div>\r\n\r\n      {modalWindow}\r\n    </div>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { SurveyPage } from './SurveyPage'\r\n\r\n\r\nconst getPage = (pageSet, pageId) => {\r\n  const pages = pageSet.filter(val => val.thisId === pageId)\r\n  if (pages.length > 1) { console.error(`Found more than 1 page with id (${pageId})`) }\r\n  return pages[0]\r\n}\r\n\r\nconst getFirstPage = (pageSet) => {\r\n  const rootPages = pageSet.filter(val => val.prevId === null)\r\n  if (rootPages.length > 1) { console.error('Found more than 1 root page') }\r\n  return rootPages[0]\r\n}\r\n\r\nexport const SurveyQuestionaire = ({ pages, onChange, onComplete, defaultValues }) => {\r\n  const [currentPage, setCurrentPage] = useState(null)\r\n\r\n  if (!pages || pages.length < 1) {\r\n    console.error('No pages defined in survey')\r\n    return null\r\n  }\r\n\r\n  if (!currentPage) {\r\n    const firstPage = getFirstPage(pages)\r\n    if (firstPage && firstPage.thisId >= 0) {\r\n      setCurrentPage(firstPage)\r\n    }\r\n    return null\r\n  }\r\n\r\n  const triggerNextPage = () => {\r\n    if (currentPage.nextId) {\r\n      setCurrentPage(getPage(pages, currentPage.nextId))\r\n      window.scrollTo(0, 0)\r\n    } else {\r\n      onComplete()\r\n    }\r\n  }\r\n\r\n  const triggerPrevPage = () => {\r\n    if (currentPage.prevId) {\r\n      setCurrentPage(getPage(pages, currentPage.prevId))\r\n    }\r\n  }\r\n\r\n  const handleFormPageCompleted = (formName, formData) => {\r\n    //onComplete(formName, formData)\r\n  }\r\n\r\n  const handleFormPageChanged = (formName, formData) => {\r\n    onChange(formName, formData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-end\">\r\n        <div className=\"text-white bg-gray-400 px-2 py-0\">\r\n          Seite: {currentPage.thisId}\r\n        </div>\r\n      </div>\r\n      <SurveyPage\r\n        page={currentPage}\r\n        onChange={handleFormPageChanged}\r\n        onComplete={handleFormPageCompleted}\r\n        onNextPage={triggerNextPage}\r\n        onPrevPage={triggerPrevPage}\r\n        defaultValues={defaultValues[currentPage.thisId] || {}}\r\n      />\r\n    </>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { SurveyQuestionaire } from './SurveyQuestionaire'\r\n\r\n\r\nexport const SurveyManager = ({ ruleSet, onSaveData, sessionId }) => {\r\n  const [surveyIsComplete, setSurveyIsComplete] = useState(false)\r\n  const [surveyData, setSurveyData] = useState({\r\n    sessionId: sessionId,\r\n    surveyId: ruleSet.meta.surveyId\r\n  })\r\n\r\n  const handleQuestionaireComplete = (pageId, data) => {\r\n    let sd = Object.assign({}, surveyData)\r\n    sd[pageId] = data\r\n    delete sd.undefined\r\n    onSaveData(sd)\r\n    setSurveyIsComplete(true)\r\n  }\r\n\r\n  const handleQuestionaireChange = (pageId, data) => {\r\n    let sd = Object.assign({}, surveyData)\r\n    sd[pageId] = data\r\n    setSurveyData(sd)\r\n  }\r\n\r\n  return surveyIsComplete ? (\r\n    <div className='flex h-screen'>\r\n      <div className='text-black font-bold text-3xl m-auto text-4xl'>\r\n        Umfrage beendet. Sie dürfen das Fenster jetzt schließen.\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <SurveyQuestionaire\r\n        sessionId={sessionId}\r\n        pages={ruleSet?.pages}\r\n        onChange={handleQuestionaireChange}\r\n        onComplete={handleQuestionaireComplete}\r\n        defaultValues={surveyData}\r\n      />\r\n    </>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport { SurveyManager } from './components/survey/SurveyManager'\r\nimport axios from 'axios'\r\nimport CryptoJS from 'crypto-js'\r\nimport sha256 from 'crypto-js/sha256'\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getDatabase, ref, set } from \"firebase/database\"\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCFasaqUqOltO4gxPbNmR4gYQqusN2Zthg\",\r\n  authDomain: \"escp-survey-2022.firebaseapp.com\",\r\n  databaseURL: \"https://escp-survey-2022-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"escp-survey-2022\",\r\n  storageBucket: \"escp-survey-2022.appspot.com\",\r\n  messagingSenderId: \"105376003688\",\r\n  appId: \"1:105376003688:web:8a1b08d2a162565648eddd\"\r\n}\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig)\r\nconst dbDatabase = getDatabase()\r\nconst startDate = new Date()\r\n\r\nconst getRandomHash = () => {\r\n  const hash = sha256(Math.random().toString() + new Date().getUTCMilliseconds.toString())\r\n  return hash.toString(CryptoJS.enc.Hex)\r\n}\r\n\r\nconst getDatePrefix = (now) => {\r\n  return now.getFullYear().toString() +\r\n    (now.getMonth() + 1).toString().padStart(2, '0') +\r\n    now.getDate().toString().padStart(2, '0') + '_' +\r\n    now.getHours().toString().padStart(2, '0') +\r\n    now.getMinutes().toString().padStart(2, '0') +\r\n    now.getSeconds().toString().padStart(2, '0') +\r\n    now.getMilliseconds().toString().padStart(2, '0')\r\n}\r\n\r\nconst surveySessionId = getRandomHash()\r\n\r\nconst writeToDatabase = (data) => {\r\n  const endDate = new Date()\r\n  data._startDate = startDate.getTime()\r\n  data.startDate = new Date(startDate).toISOString()\r\n  data._endDate = endDate.getTime()\r\n  data.endDate = new Date(endDate).toISOString()\r\n\r\n  set(ref(dbDatabase, `surveys/${data.surveyId}/${getDatePrefix(endDate)}_${data.sessionId.toString().substr(0, 10)}`), {\r\n    data: data\r\n  })\r\n    .then(() => {\r\n      console.log('Saved successfully!', data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Not Saved successfully!')\r\n    })\r\n}\r\n\r\n\r\nconst validateRuleSet = (unvalidatedRules) => {\r\n  // @TODO verify the structure of the survey.json (using ajv?) in order to avoid unnescessary problems with broken json\r\n\r\n  return unvalidatedRules\r\n}\r\n\r\nfunction App() {\r\n  const [surveyControlData, setSurveyControlData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/survey.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setSurveyControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return surveyControlData ? (\r\n    <div className=\"container max-w-screen-md ml-auto mr-auto\">\r\n      <SurveyManager ruleSet={surveyControlData} onSaveData={writeToDatabase} sessionId={surveySessionId} />\r\n    </div>\r\n  ) : (\r\n    <div className='flex h-screen'>\r\n      <div className='m-auto text-6xl'>Daten werden geladen...</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}