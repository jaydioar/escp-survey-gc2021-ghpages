{"version":3,"sources":["components/survey/formbuilder/dropdown/DropDown.jsx","components/survey/formbuilder/numericalinput/NumericalInput.jsx","components/survey/formbuilder/researchsimulation/ResearchSimulation.jsx","helpers/bbcode.js","components/survey/formbuilder/selectfromrange/SelectFromRange.jsx","components/survey/formbuilder/slider/Slider.jsx","components/survey/formbuilder/textarea/TextArea.jsx","components/survey/formbuilder/textinput/TextInput.jsx","components/survey/formbuilder/selfassessment/SelfAssessment.jsx","components/survey/formbuilder/FormBuilder.jsx","components/survey/simplemodal/SimpleModal.jsx","components/survey/SurveyPage.jsx","components/survey/SurveyQuestionaire.jsx","components/survey/SurveyManager.jsx","ExportApp.js","App.js","reportWebVitals.js","index.js"],"names":["DropDown","name","label","options","onValueSelect","className","onChange","map","opt","idx","value","NumericalInput","onComplete","otherProps","type","e","target","length","viewerStart","ResearchSimulation","onSearchHistoryChanged","placeholder","notFoundMessage","labelOpenDocument","useState","searchKeywords","setSearchKeywords","init","searchResults","setSearchResults","loggedActions","logAction","title","url","viewerIsOpen","docToView","setDocToView","controlData","setControlData","useEffect","axios","get","then","response","validRuleSet","ruleSet","researchSimulation","Error","config","cues","forEach","element","id","keywords","JSON","stringify","err","console","error","message","validateRuleSet","data","log","action","info","actions","push","time_","Date","getTime","time","toISOString","triggerSearch","res","toLowerCase","split","reduce","acc","kw","filter","item","indexOf","cue","Object","keys","autoFocus","onKeyPress","key","disabled","clsx","onClick","k","now","durationOfView","durationInSec","src","frameBorder","scrolling","height","width","replaceBBCode","raw","last","replace","SelectFromRange","alignment","randomizeOrder","handleChange","selOptions","array","randomIndex","currentIndex","Math","floor","random","shuffle","dangerouslySetInnerHTML","__html","htmlFor","Slider","min","max","unit","otherAttrs","ceil","currentSliderValue","setCurrentSliderValue","handleFinishedSlide","defaultValue","onMouseUp","onKeyUp","TextArea","isRequired","onBlur","TextInput","SelfAssessment","onAllChosen","attributes","randomOrder","inputArray","ia","sort","shuffleArray","inputData","fieldsOrdered","answers","handleOptChange","score","posMatches","negMatches","attr","v","trend","calcGoughScore","score1","score2","attrData","renderedElementId","propsAreEqual","prevProps","nextProps","formSections","FormBuilder","memo","formName","onFormChanged","onFormComplete","defaultValues","completedInputFields","assign","requiredInputFields","registerRequiredInputField","includes","renderText","paragraphs","p","stashInput","xname","xvalue","ci","saveCurrentInputValue","isCompleted","reqFieldName","undefined","formIsCompleted","cif","renderTextArea","rows","isOptional","curVal","registerOpen","renderPickVersion","versions","numVersions","a","Uint32Array","choosenVersion","crypto","getRandomValues","toString","elements","el","module","renderIncludedElement","renderAside","sideElements","content","renderSelfAssessment","href","renderLinkThumbnail","labe","renderResearchSimulation","renderDropDown","renderSelectFromRange","renderSlider","text","renderHeadline","renderBoxedText","bPoints","renderBulletList","renderTextInput","renderNumericalInput","formContent","renderSections","secs","depth","sec","secIdx","sections","SimpleModal","buttons","onAccept","onReject","t","accept","reject","SurveyPage","page","onNextPage","onPrevPage","allowProceed","useMemo","settings","thisId","currentPageIsComplete","setCurrentPageIsComplete","show","modalContent","setModalContent","formData","setFormData","lockNextButton","triggerNextPage","nextId","confirmMoveForward","triggerPrevPage","prevId","backButton","allowMoveBack","renderBackButton","nextButton","labelNextPage","modalWindow","padStart","_timeComplete","timeComplete","getPage","pageSet","pageId","pages","val","SurveyQuestionaire","currentPage","setCurrentPage","firstPage","rootPages","getFirstPage","window","scrollTo","SurveyManager","onSaveData","sessionId","surveyIsComplete","setSurveyIsComplete","surveyId","meta","surveyData","setSurveyData","sd","ExportApp","jsonIsValid","setJsonIsValid","jsonParsed","setJsonParsed","resultCsv","setResultCsv","convertToCsv","headings","join","line","escVal","resolveSearchHistory","searchTrials","memTimeOpen","cueReadingTimes","i","trial","diff","parseInt","match","foundCues","resCues","totalTrials","tmp","resSearches","uniqueSearchTerms","flat","checkIfJsonIsValid","jsonTxt","jsonObj","parse","heigth","cols","csvRes","surveys","substring","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","dbDatabase","getDatabase","startDate","surveySessionId","sha256","getUTCMilliseconds","CryptoJS","enc","Hex","writeToDatabase","endDate","_startDate","_endDate","completionTimeInMinutes","round","completionTimeInSeconds","emailAddress","set","ref","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","substr","catch","newMailKey","child","updates","email","update","SurveyApp","surveyControlData","setSurveyControlData","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPACaA,EAAW,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,cAAmC,iBAClF,OACE,gCACE,qBAAKC,UAAU,iBAAf,SAAiCH,IACjC,wBAAQD,KAAMA,EAAMK,SAAUF,EAAeC,UAAU,wDAAvD,SACGF,EAAQI,KAAI,SAACC,EAAKC,GACjB,OAAO,wBAAQC,MAAOF,EAAIE,MAAnB,SAAqCF,EAAIN,OAAVO,UAJlCR,I,4CCHDU,EAAiB,SAAC,GAAoD,IAAlDL,EAAiD,EAAjDA,SAAUM,EAAuC,EAAvCA,WAAYV,EAA2B,EAA3BA,MAAUW,EAAiB,iBAQhF,OACE,qCACGX,GAAS,qBAAKG,UAAU,iBAAf,SAAiCH,IAC3C,mCAAOY,KAAK,SACVR,SAXsB,SAAAS,GACtBA,EAAEC,OAAON,MAAMO,OAAS,IAC1BX,EAASS,GACTH,EAAWG,KASTV,UAAU,8HACNQ,Q,yGCTRK,EAAc,KAELC,EAAqB,SAAC,GAAsG,IAApGlB,EAAmG,EAAnGA,KAAMmB,EAA6F,EAA7FA,uBAAwBC,EAAqE,EAArEA,YAAaC,EAAwD,EAAxDA,gBAAiBC,EAAuC,EAAvCA,kBAC/F,GADsI,iBAC1FC,mBAAS,KAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0CF,mBAAS,CAAEG,MAAM,IAA3D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAmCL,mBAAS,IAA5C,mBAAOM,EAAP,KAAsBC,EAAtB,KACA,EAAkCP,mBAAS,CAAEQ,MAAO,KAAMC,IAAK,KAAMC,cAAc,IAAnF,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCZ,mBAAS,MAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KAgCAC,qBAAU,WAERC,IAAMC,IAAI,sCAAsCC,MAAK,SAAAC,GACnD,IAAMC,EAjCc,SAACC,GAAa,IAAD,MACnC,GAAI,OAACA,QAAD,IAACA,MAASC,mBACZ,MAAMC,MAAM,2DAGd,GAAI,UAACF,EAAQC,0BAAT,QAAC,EAA4BE,OAC/B,MAAMD,MAAM,kEAGd,KAAI,UAACF,EAAQC,0BAAT,iBAAC,EAA4BG,YAA7B,OAAC,EAAkChC,QAAS,EAC9C,MAAM8B,MAAM,8EAGd,IACEF,EAAQC,mBAAmBG,KAAKC,SAAQ,SAAAC,GACtC,IAAQC,EAA6BD,EAA7BC,GAAIpB,EAAyBmB,EAAzBnB,MAAOqB,EAAkBF,EAAlBE,SAAUpB,EAAQkB,EAARlB,IAE7B,IAAKmB,GAAoB,kBAAPA,EAAmB,MAAML,MAAM,gEAAD,OAA8DO,KAAKC,UAAUJ,KAC7H,IAAKnB,GAA0B,kBAAVA,IAA2B,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOf,QAAS,EAAK,MAAM8B,MAAM,2EAAD,OAAyEO,KAAKC,UAAUJ,KACnK,IAAKE,KAAY,OAACA,QAAD,IAACA,KAAUpC,QAAS,EAAK,MAAM8B,MAAM,8EAAD,OAA4EO,KAAKC,UAAUJ,KAChJ,IAAKlB,KAAO,OAACA,QAAD,IAACA,KAAKhB,QAAS,EAAK,MAAM8B,MAAM,yEAAD,OAAuEO,KAAKC,UAAUJ,QAEnI,MAAOK,GAEP,MADAC,QAAQC,MAAMF,GACRF,KAAKC,UAAUC,EAAIG,SAG3B,OAAOd,EAMgBe,CAAgBjB,EAASkB,MAE1CjB,EACFN,EAAeM,GAEfa,QAAQK,IAAI,8BAGf,IAEH,IAgCMA,EAAM,SAACC,EAAQC,GACnB,IAAMC,EAAUnC,EAChBmC,EAAQC,KAAK,CACXC,OAAO,IAAIC,MAAOC,UAClBC,MAAM,IAAIF,MAAOG,cACjBR,SACAC,SAEFjC,EAAUkC,GACV7C,EAAuB,CAAEJ,OAAQ,CAAEf,KAAMA,EAAMS,MAAOuD,MAGlDO,EAAgB,SAACzD,GACrB,IAAM0D,EAAuBhD,EA5CRiD,cAAcC,MAAM,KAE9BC,QAAO,SAACC,EAAKC,GAAQ,IAAD,EAC7B,OAAkB,IAAdA,EAAG7D,SAEM,UAAGoB,EAAYS,0BAAf,aAAG,EAAgCG,KAAK8B,QAAO,SAACC,GAC3D,OAAOA,EAAK3B,SAASqB,cAAcO,QAAQH,IAAO,MAG5C5B,SAAQ,SAAAgC,GACdL,EAAIK,EAAI9B,IAAM8B,KAPYL,IAW3B,IA+B6B,IAA5BM,OAAOC,KAAKX,GAAKxD,OACnB6C,EAAI,gBAAiBrC,GAErBqC,EAAI,iBAAkBrC,GAGxBI,EAAiB4C,IAyBnB,OACE,sBAAKpE,UAAU,oBAAf,UACE,oBAAIA,UAAU,gBAAd,uBAEA,sBAAKA,UAAU,2CAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBAAOgF,WAAS,EAACC,WAZF,SAACvE,GACR,UAAVA,EAAEwE,KAAmB9D,EAAeR,QA7Hf,GA8HvBuD,KAUiDlE,SAjE9B,SAACS,GACtBW,EAAkBX,EAAEC,OAAON,QAgEkDL,UAAU,6HAA6H+C,GAAG,WAAWtC,KAAK,OAAOO,YAAaA,MAEvP,qBAAKhB,UAAU,oCAAf,SACE,wBAAQmF,SAAU/D,EAAeR,OA3Id,GA2I+C,WAAYZ,UAAWoF,YAAK,CAC5F,mFAAoFhE,EAAeR,OA5IlF,EA6IjB,+GAAgHQ,EAAeR,QA7I9G,IA8IfH,KAAK,SAAS4E,QAASlB,EAH3B,0BASoB,IAAvB5C,EAAcD,MAAuD,IAAtCwD,OAAOC,KAAKxD,GAAeX,QACzD,qBAAKZ,UAAU,wBAAf,SACE,8BAAMiB,OAIc,IAAvBM,EAAcD,MAAiBwD,OAAOC,KAAKxD,GAAerB,KAAI,SAAAoF,GAAC,OAC9D,sBAAKtF,UAAU,sCAAf,UACE,qBAAKA,UAAU,YAAf,SAA4BuB,EAAc+D,GAAG3D,QAC7C,qBAAK3B,UAAU,gBAAf,SAA+B,qBAAKA,UAAU,+BAA+BqF,SAjDlER,EAiDqFtD,EAAc+D,GAjD3F,WACzB7B,EAAI,OAAQoB,EAAIjD,KAChB,IAAM2D,EAAM,IAAIxB,KAChBlD,EAAc0E,EAAIvB,UAClBjC,EAAa,CAAEJ,MAAOkD,EAAIlD,MAAOC,IAAKiD,EAAIjD,IAAKC,cAAc,MA6CxB,SAAqFX,QAF5DoE,GA/C9C,IAACT,KAqDd/C,EAAUD,cAAgB,sBAAK7B,UAAU,wEAAf,UACzB,sBAAKA,UAAU,iDAAf,UACE,wBAAQA,UAAU,gJAAgJqF,QAhDtJ,SAAC3E,GACnB,IAAMkB,EAAME,EAAUF,IAEhB4D,GADM,IAAIzB,MACWC,UAAYnD,EACvCA,EAAc,KACd4C,EAAI,QAAS,CAAE7B,MAAK6D,cAAeD,EAAiB,MACpDzD,EAAa,CAAEJ,MAAO,KAAMC,IAAK,KAAMC,cAAc,KA0C/C,qCACA,qBAAK7B,UAAU,sDAAf,SAAsE8B,EAAUH,WAElF,qBAAK3B,UAAU,gBAAf,SACE,uBACE0F,IAAK5D,EAAUF,IACfnB,KAAK,kBACLkF,YAAY,IACZC,UAAU,OACVC,OAAO,OACPC,MAAM,kBC9KLC,EAAgB,SAAAC,GAC3B,GAAKA,KAAOA,EAAIpF,OAAS,GAAzB,CAEA,IAAIqF,EAAO,KACP7B,EAAM4B,EAEV,GACEC,EAAO7B,EAGPA,GADAA,EAAMA,EAAI8B,QAAQ,0CAAuC,gBAC/CA,QAAQ,iCAAkC,8DAC7C9B,IAAQ6B,GAKjB,OAFA7B,EAAMA,EAAI8B,QAAQ,WAAa,Y,qECI1B,IAAMC,EAAkB,SAAC,GAAkF,IAAhFvG,EAA+E,EAA/EA,KAAMC,EAAyE,EAAzEA,MAAOC,EAAkE,EAAlEA,QAASG,EAAyD,EAAzDA,SAAUmG,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,eAErEC,GAFyG,iBAE1F,SAAC5F,GACpB,OAAOT,EAASS,KAGd6F,EAAazG,EAKjB,OAJIuG,GA1BN,SAAiBG,GAIf,IAHA,IAAiCC,EAA7BC,EAAeF,EAAM5F,OAGF,GAAhB8F,GAAmB,CAGxBD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,GACzCA,IAJwB,MAOoB,CAC1CF,EAAMC,GAAcD,EAAME,IAD3BF,EAAME,GAPiB,KAOFF,EAAMC,GAPJ,MAuBxBK,CAAQP,GAGQ,aAAdH,EAEA,sBAAgBpG,UAAU,aAA1B,UACE,qBAAKA,UAAU,4BAA4B+G,wBAAyB,CAClEC,OAAQjB,EAAclG,IAAU,OAGlC,qBAAKG,UAAU,SAAf,SACGuG,EAAWrG,KAAI,SAACC,EAAKC,GAAN,OACd,sBAAKJ,UAAU,OAAf,UACE,sBAAMA,UAAU,QAAhB,SAAwB,uBAAOS,KAAK,QAAQb,KAAMA,EAAMmD,GAAE,UAAKnD,GAAL,OAAYO,EAAIE,OAASA,MAAOF,EAAIE,MAAOJ,SAAUqG,MADjH,QAEE,uBAAOtG,UAAU,6BAAuCiH,QAAO,UAAKrH,GAAL,OAAYO,EAAIE,OAA/E,SACE,sBAAML,UAAU,4CAA4C+G,wBAAyB,CACnFC,OAAQjB,EAAc5F,EAAIN,QAAU,QAFWO,aATjDR,GAqBJ,sBAAgBI,UAAU,aAA1B,UACN,qBAAKA,UAAU,4BAA4B+G,wBAAyB,CAClEC,OAAQjB,EAAclG,IAAU,OAGlC,qBAAKG,UAAU,cAAf,SACGF,EAAQI,KAAI,SAACC,EAAKC,GAAN,OACX,wBAAOJ,UAAU,6BAAuCiH,QAAO,UAAKrH,GAAL,OAAYO,EAAIE,OAA/E,UACE,qBAAKL,UAAU,4CAA4C+G,wBAAyB,CAClFC,OAAQjB,EAAc5F,EAAIN,QAAU,OAGtC,qBAAKG,UAAU,cAAf,SAA6B,uBAAOS,KAAK,QAAQb,KAAMA,EAAMmD,GAAE,UAAKnD,GAAL,OAAYO,EAAIE,OAASA,MAAOF,EAAIE,MAAOJ,SAAUqG,MACpH,qBAAKtG,UAAU,cAAf,SAA8BG,EAAIE,UANeD,UAPvCR,I,iDCrDTsH,EAAS,SAAC,GAA8D,IAA5DtH,EAA2D,EAA3DA,KAAMuH,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,IAAKvH,EAA2C,EAA3CA,MAAOwH,EAAoC,EAApCA,KAAMpH,EAA8B,EAA9BA,SAAaqH,EAAiB,iBAElF,GADqBX,KAAKY,KAAKJ,GAAQC,EAAMD,GAAO,GACAhG,mBAAS,OAA7D,mBAAOqG,EAAP,KAA2BC,EAA3B,KAMMC,EAAsB,SAAChH,GAC3B,OAAOT,EAAS,CACdU,OAAQ,CACNf,KAAMA,EACNS,MAAOmH,MAKb,OAAQ,sBAAgBxH,UAAU,MAA1B,UACN,qBAAKA,UAAU,0BAAf,SAA0CH,IAC1C,mCACEG,UAAU,cACVS,KAAK,QACLb,KAAMA,EACNuH,IAAKA,EACLC,IAAKA,EACLO,cAAe,EACf1H,SAtBsB,SAACS,GACzB+G,EAAsB/G,EAAEC,OAAON,QAsB7BuH,UAAWF,EACXG,QAASH,GACLJ,IAZA,OAcN,iCAAOE,EAAP,IAA4BH,OAdZzH,I,wDCnBPkI,EAAW,SAAC,GAAsE,IAApElI,EAAmE,EAAnEA,KAAMK,EAA6D,EAA7DA,SAAUM,EAAmD,EAAnDA,WAAYV,EAAuC,EAAvCA,MAAsBW,GAAiB,EAAhCuH,WAAgC,kBAO5F,OACE,qCACGlI,GAAS,qBAAKG,UAAU,iBAAf,SAAiCH,IAC3C,sCACED,KAAMA,EACNK,SAXkB,SAAAS,GAClBA,EAAEC,OAAON,MAAMO,OAAS,GAC1BX,EAASS,IAUPsH,OAAQzH,EACRP,UAAU,8HACNQ,Q,oCCfCyH,EAAY,SAAC,GAAoD,IAAlDhI,EAAiD,EAAjDA,SAAUM,EAAuC,EAAvCA,WAAYV,EAA2B,EAA3BA,MAAUW,EAAiB,iBAQ3E,OACE,qCACGX,GAAS,qBAAKG,UAAU,iBAAf,SAAiCH,IAC3C,mCAAOY,KAAK,OACVR,SAXsB,SAAAS,GACtBA,EAAEC,OAAON,MAAMO,OAAS,IAC1BX,EAASS,GACTH,EAAWG,KASTV,UAAU,8HACNQ,Q,yBCdC0H,EAAiB,SAAC,GAA0C,IAAxC1E,EAAuC,EAAvCA,KAAM2E,EAAiC,EAAjCA,YAAiC,iBACtE,GAAI,OAAC3E,QAAD,IAACA,MAAM4E,YAAyC,IAA3B5E,EAAK4E,WAAWxH,OACvC,OAAO,sDAGT,IAgCMyH,EAhCe,SAACC,GACpB,IAAMC,EAAKD,EAEX,OADAC,EAAGC,MAAK,kBAAM7B,KAAKE,SAAW,MACvB0B,EA6BWE,CAAa3D,OAAOC,KAAKvB,EAAK4E,aAM9CM,EAAY,CACdC,cALoBN,EAAYnI,KAAI,SAAAgF,GACpC,OAAO1B,EAAK4E,WAAWlD,GAAKtF,QAK5BgJ,QAAS,IAGLC,EAAkB,SAAAnI,GAGtB,GAFAgI,EAAUE,QAAQlI,EAAEC,OAAOf,MAAQc,EAAEC,OAAON,MAExCyE,OAAOC,KAAK2D,EAAUE,SAAShI,OAAS,GAC1CkE,OAAOC,KAAK2D,EAAUE,SAAShI,SAAW8H,EAAUC,cAAc/H,OAAQ,CAC1E,MA1CmB,SAACgI,EAASR,GAC/B,IAAIU,EAAQ,EACRC,EAAa,EACbC,EAAa,EAgBjB,OAdAlE,OAAOC,KAAK6D,GAAS/F,SAAQ,SAAAC,GAC3B,IAAMmG,EAAOb,EAAW1D,QAAO,SAAAwE,GAAO,OAAQA,EAAEtJ,OAASkD,KAAY,GAElD,QAAfmG,EAAKE,OAAwC,MAArBP,EAAQ9F,KAClCgG,IACAC,KAGiB,QAAfE,EAAKE,OAAwC,MAArBP,EAAQ9F,KAClCgG,IACAE,QAII,CACNF,QACAC,aACAC,cAoB0CI,CAAeV,EAAUE,QAASpF,EAAK4E,YAAzEU,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,WAE3BN,EAAUW,OAASP,EACnBJ,EAAUY,OAASP,GAAcA,EAAaC,GAC9Cb,EAAY,CACVxH,OAAQ,CACNf,KAAM4D,EAAK5D,KACXS,MAAOqI,OAMf,OACE,qBAAK1I,UAAU,iBAAf,SACGqI,EAAYnI,KAAI,SAACgF,EAAK9E,GACrB,IAAMmJ,EAAW/F,EAAK4E,WAAWlD,GAEjC,OACE,qBAAKlF,UAAU,uBAAf,SACE,sBAAKA,UAAU,iEAAf,UACE,qBAAKA,UAAU,YAAf,SAA4BuJ,EAAS1J,QACrC,wBAAOoH,QAASsC,EAAS3J,KAAMI,UAAU,eAAzC,UACE,uBAAOS,KAAK,QAAQb,KAAM2J,EAAS3J,KAAMmD,GAAIwG,EAAS3J,KAAMS,MAAM,IAAIJ,SAAU4I,IADlF,aAGA,wBAAO5B,QAASsC,EAAS3J,KAAO,IAAKI,UAAU,SAA/C,UACE,uBAAOS,KAAK,QAAQb,KAAM2J,EAAS3J,KAAMmD,GAAIwG,EAAS3J,KAAO,IAAKS,MAAM,IAAIJ,SAAU4I,IADxF,mBANuCzI,S,mDC5DjDoJ,EAAoB,EAGlBC,EAAgB,SAACC,EAAWC,GAChC,OAAOD,EAAUE,eAAiBD,EAAUC,cAGjCC,EAAcC,gBAAK,YAA+E,IAA5EF,EAA2E,EAA3EA,aAAcG,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,cAEpFC,EAAuBrF,OAAOsF,OAAO,GAAIF,GACzCG,EAAsB,GAEpBC,EAA6B,SAAC1K,EAAMmI,GACpCA,IAAesC,EAAoBE,SAAS3K,IAC9CyK,EAAoBxG,KAAKjE,IAkBvB4K,EAAa,SAAAhH,GACjB,OAAOA,EAAKiH,WAAWvK,KAAI,SAACwK,EAAGtK,GAAJ,OACzB,mBAAGJ,UAAU,OAAiB+G,wBAAyB,CACrDC,OAAQjB,EAAc2E,KADCtK,OA0CvBuK,EAAa,SAACC,EAAOC,GACzB,IAAMC,EAAKX,EACXW,EAAGF,GAASC,EACZV,EAAuBW,GAGnBC,EAAwB,SAAArK,GAI5B,GAHAiK,EAAWjK,EAAEC,OAAOf,KAAMc,EAAEC,OAAON,OACnC2J,EAAcD,EAAUI,GA3BF,WACtB,IAAKA,EACH,OAAO,EAGT,GAAIA,GAAwBrF,OAAOC,KAAKoF,GAAsBvJ,OAAS,EACrE,OAAO,EAGT,IAAIoK,GAAc,EAOlB,OALAX,EAAoBxH,SAAQ,SAAAoI,QACiBC,IAAvCf,EAAqBc,IAAsE,OAAvCd,EAAqBc,KAC3ED,GAAc,MAGXA,EAaHG,GAAmB,CACrB,IAAIC,EAAMtG,OAAOsF,OAAO,GAAID,GAC5BiB,EAAIJ,aAAc,EAClBf,EAAeF,EAAUqB,KA4CvBC,EAAiB,SAAC,GAAoD,IAAD,EAAjDzL,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAOyL,EAAoC,EAApCA,KAAMtK,EAA8B,EAA9BA,YAAauK,EAAiB,EAAjBA,WACxDjB,EAA2B1K,GAAO2L,GAClC,IAAMC,GAA6B,QAApB,EAAArB,SAAA,eAAuBvK,KAAS,KAC/C,OACE,qBAAgBI,UAAU,wCAA1B,SACE,cAAC,EAAD,CACEA,UAAU,aACVC,SAAU8K,EACVxK,WAAY,aACZwH,YAAawD,EACb1L,MAAOA,EACPD,KAAMA,EACN0L,KAAMA,EACNtK,YAAaA,EACb2G,aAAc6D,KAVR5L,IAgGR6L,EAAe,SAAC7J,EAAKhC,GACzB,OAAO,SAACc,GACNqK,EACE,CACEpK,OAAQ,CACNf,KAAMA,EACNS,MAAO,CAAEuB,IAAKA,EAAKkC,OAAO,IAAIC,MAAOC,UAAWC,MAAM,IAAIF,MAAOG,oBAmBrEwH,EAAoB,SAAC,GAAoC,IAAD,EAAjC9L,EAAiC,EAAjCA,KAAkB+L,GAAe,EAA3BJ,WAA2B,EAAfI,UACvCC,EAAW,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAU/K,OAC9B,GAAIgL,EAAc,EAAG,OAAO,KAE5B,IAAMC,EAAI,IAAIC,YAAY,GACpBC,EAAiB5B,EAAqBvK,IAAUoM,OAAOC,gBAAgBJ,GAAG,GAAGK,WAAW,GAAMN,EAEpGjB,EAAW/K,EAAMmM,GACjB,IAAM3H,EAAG,UAAGuH,EAASI,GAAgBI,gBAA5B,aAAG,EAAmCjM,KAAI,SAACkM,EAAIhM,GACtD,OAAKgM,EAAGC,QAEU,gBAAdD,EAAGC,OACE,qBAAKrM,UAAU,gBAAf,SAA0CsM,EAAsBF,IAA5BhM,GAHtB,QASzB,OAAO,8BAAiBgE,GAAPxE,IAGb2M,EAAc,SAACJ,GACnB,IAAMK,EAAeL,EAASjM,KAAI,SAACkM,EAAIhM,GACrC,OAAKgM,EAAGC,QAEU,gBAAdD,EAAGC,OACE,qBAAKrM,UAAU,gBAAf,SAA4CsM,EAAsBF,IAA9BA,EAAGrJ,IAHzB,QASzB,OAAQ,qBAAK/C,UAAU,kCAAf,SACN,qBAAKA,UAAU,qCAAf,SACGwM,OAqBDF,EAAwB,SAAC,GAAgC,IAA9B9I,EAA6B,EAA7BA,KAAM2I,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,OAC3CI,EAAU,KAGd,OAFAjJ,EAAKT,GAAKyG,IAEF6C,EAAOhI,eACb,IAAK,QACHoI,EAAUF,EAAYJ,GACtB,MACF,IAAK,iBACHM,EAvBuB,SAACjJ,GAC5B,OACE,qBAAqBxD,UAAU,wCAA/B,SACE,cAAC,EAAD,CACEwD,KAAMA,EACN2E,YAAa4C,KAHPvH,EAAK5D,MAqBH8M,CAAqBlJ,GAC/B,MACF,IAAK,gBACHiJ,EA/EsB,SAAC,GAA8C,IAA5C7K,EAA2C,EAA3CA,IAAKjB,EAAsC,EAAtCA,OAAQf,EAA8B,EAA9BA,KAAM+B,EAAwB,EAAxBA,MAAO4J,EAAiB,EAAjBA,WAGvD,OAFAjB,EAA2B1K,GAAO2L,GAGhC,mBAAGoB,KAAM/K,EAAKjB,OAAQA,EAAQ0E,QAASoG,EAAa7J,EAAKhC,GAAzD,SACE,qBAAgBI,UAAU,iEAA1B,SACG2B,GADO/B,KA0EAgN,CAAoBpJ,GAC9B,MACF,IAAK,qBACHiJ,EA9G2B,SAAC,GAAsE,IAApE7M,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,MAAOmB,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,kBAC7E,OACE,qBAAgBlB,UAAU,wCAA1B,SACE,cAAC,EAAD,CACEJ,KAAMA,EACNiN,KAAMhN,EACNmB,YAAaA,EACbC,gBAAiBA,EACjBC,kBAAmBA,EACnBH,uBAAwBgK,KAPlBnL,GA4GEkN,CAAyBtJ,GACnC,MACF,IAAK,WACHiJ,EA/HiB,SAAC,GAA0C,IAAxC7M,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASyL,EAAiB,EAAjBA,WAE9C,OADAjB,EAA2B1K,GAAO2L,GAEhC,qBAAgBvL,UAAU,wCAA1B,SACE,cAAC,EAAD,CACEJ,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTC,cAAegL,KALTnL,GA4HEmN,CAAevJ,GACzB,MACF,IAAK,kBACHiJ,EA9NwB,SAAC,GAAqE,IAAnE7M,EAAkE,EAAlEA,KAAM2L,EAA4D,EAA5DA,WAAY1L,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,QAASsG,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAG5E,OAFAiE,EAA2B1K,GAAO2L,GAGhC,qBAAgBvL,UAAU,kBAA1B,SACE,cAAC,EAAD,CACEJ,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTG,SAAU8K,EACV3E,UAAWA,EACXC,eAAgBA,KAPVzG,GA0NEoN,CAAsBxJ,GAChC,MACF,IAAK,SACHiJ,EAnPe,SAAC,GAAqE,IAAnE5M,EAAkE,EAAlEA,MAAOD,EAA2D,EAA3DA,KAAMyH,EAAqD,EAArDA,KAAMF,EAA+C,EAA/CA,IAAKC,EAA0C,EAA1CA,IAAKmE,EAAqC,EAArCA,WAEnD,OAFwF,iBACxFjB,EAA2B1K,GAAO2L,GAEhC,qBAAgBvL,UAAU,yBAA1B,SACE,cAAC,EAAD,CACEJ,KAAMA,EACNI,UAAU,aACVH,MAAOA,EACPwH,KAAMA,EACNpH,SAAU8K,EACV5D,IAAKA,EACLC,IAAKA,KARCxH,GAgPEqN,CAAazJ,GACvB,MACF,IAAK,WACHiJ,EA/TiB,SAAAjJ,GACrB,OACE,qBAAKxD,UAAU,oBAAf,SACE,iCAASwD,EAAK0J,QADwB1J,EAAK0J,MA6TjCC,CAAe3J,GACzB,MACF,IAAK,YACHiJ,EA/SkB,SAAAjJ,GACtB,IAAM0J,EAAO1C,EAAWhH,GACxB,OAAO,qBAAKxD,UAAU,sDAAf,SACJkN,IA4SWE,CAAgB5J,GAC1B,MACF,IAAK,aACHiJ,EA3SmB,SAAAjJ,GACvB,IAAM6J,EAAU7J,EAAKiH,WAAWvK,KAAI,SAACwK,EAAGtK,GACtC,OAAO,oBAAIJ,UAAU,iBAAd,SAA0C0K,GAANtK,MAG7C,OAAO,oBAAIJ,UAAU,+BAAd,SACJqN,IAqSWC,CAAiB9J,GAC3B,MACF,IAAK,cACHiJ,EAAUf,EAAkBlI,GAC5B,MACF,IAAK,OACHiJ,EAAUjC,EAAWhH,GACrB,MACF,IAAK,WACL,IAAK,YACHiJ,EAxMkB,SAAC,GAAoD,IAAD,EAAjD7M,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAOyL,EAAoC,EAApCA,KAAMtK,EAA8B,EAA9BA,YAAauK,EAAiB,EAAjBA,WACzD,GAAID,EAAO,EACT,OAAOD,EAAe,CAAEzL,OAAMC,QAAOyL,OAAMtK,gBAG7CsJ,EAA2B1K,GAAO2L,GAClC,IAAMC,GAA6B,QAApB,EAAArB,SAAA,eAAuBvK,KAAS,KAC/C,OACE,qBAAgBI,UAAU,wCAA1B,SACE,cAAC,EAAD,CACEA,UAAU,aACVgI,OAAQ+C,EACR9K,SAAU,kBAAM,MAChBM,WAAYwK,EACZlL,MAAOA,EACPD,KAAMA,EACN0L,KAAMA,EACNtK,YAAaA,EACb2G,aAAc6D,KAVR5L,GAgME2N,CAAgB/J,GAC1B,MACF,IAAK,iBACHiJ,EAnLuB,SAAC,GAAoD,IAAD,EAAjD7M,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAAOyL,EAAoC,EAApCA,KAAMtK,EAA8B,EAA9BA,YAAauK,EAAiB,EAAjBA,WAC9D,GAAID,EAAO,EACT,OAAOD,EAAe,CAAEzL,OAAMC,QAAOyL,OAAMtK,gBAG7CsJ,EAA2B1K,GAAO2L,GAClC,IAAMC,GAA6B,QAApB,EAAArB,SAAA,eAAuBvK,KAAS,EAC/C,OACE,qBAAgBI,UAAU,wCAA1B,SACE,cAAC,EAAD,CACEA,UAAU,aACVgI,OAAQ+C,EACR9K,SAAU,kBAAM,MAChBM,WAAYwK,EACZlL,MAAOA,EACPD,KAAMA,EACN0L,KAAMA,EACNtK,YAAaA,EACb2G,aAAc6D,KAVR5L,GA2KE4N,CAAqBhK,GAMnC,OAAOiJ,GAwCHgB,EAlCiB,SAAjBC,EAAkBC,EAAMC,GAC5B,IAAInB,EAAU,KAEd,OAAOkB,EAAKzN,KAAI,SAAC2N,EAAKC,GACpB,IAAM3B,EAAW0B,EAAI1B,SAASjM,KAAI,SAACkM,EAAIhM,GACrC,OAAKgM,EAAGC,OAEU,gBAAdD,EAAGC,QACLI,EAAUH,EAAsBF,GAEzB,qBAAKpM,UAAU,gBAAf,SAAiDyM,GAAjD,UAAuCL,EAAGrJ,MAEjD0J,EAAUiB,EAAetB,EAAG2B,SAAUH,EAAQ,GAPzB,QAazB,OAAc,IAAVA,EAEA,qBAAK5N,UAAU,+BAAf,SACGmM,GADH,eAA2DyB,EAA3D,YAAoEE,IAMpE,qBAAK9N,UAAU,eAAf,SACGmM,GADH,kBAA8CyB,EAA9C,YAAuDE,OAQ3CJ,CAAe9D,EAAc,GACjD,OAAO,mCACJ6D,MAEFhE,GCraUuE,EAAc,SAAC,GAAkD,IAAhDrM,EAA+C,EAA/CA,MAAOuL,EAAwC,EAAxCA,KAAMe,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5D,OACE,qBAAKnO,UAAU,wDAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,kDAAf,SACE,qBAAKA,UAAU,wBAAf,SAAwC2B,MAE1C,qBAAK3B,UAAU,4BAAf,SACGkN,EAAKhN,KAAI,SAACkO,EAAGhO,GACZ,OAAO,mBAAGJ,UAAU,WAAb,SAAmCoO,GAANhO,QAGxC,sBAAKJ,UAAU,YAAf,UACE,wBAAQA,UAAU,oIAAoIqF,QAAS6I,EAA/J,SAA0KD,EAAQI,SAClL,wBAAQrO,UAAU,oIAAoIqF,QAAS8I,EAA/J,SAA0KF,EAAQK,kBCR/KC,EAAa,SAAC,GAA2E,IAAD,EAAxEC,EAAwE,EAAxEA,KAAkBvO,GAAsD,EAAlEM,WAAkE,EAAtDN,UAAUwO,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,WAAYxE,EAAoB,EAApBA,cACzEyE,EAAeC,mBAAQ,kCAAMJ,EAAKK,gBAAX,aAAM,EAAeF,eAAc,CAACH,EAAMA,EAAKM,SAC5E,EAA0D3N,oBAAS,GAAnE,mBAAO4N,EAAP,KAA8BC,EAA9B,KACA,EAAwC7N,mBAAS,CAAE8N,MAAM,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgChO,mBAAS+I,GAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KAEMC,EAAiB,WAEnBN,GADmB,IAAjBL,IAQNzM,qBAAU,WACR8M,EAAyBL,KACxB,CAACA,EAAcK,IAElB,IAAMO,EAAkB,SAAC7O,GACL,IAAD,EAAjB,GAAI8N,EAAKgB,OACP,aAAIhB,EAAKK,gBAAT,OAAI,EAAeY,mBAAoB,CAAC,IAAD,EACrC,YAAiCjB,EAAKK,gBAAtC,aAAiC,EAAeY,mBAAxC9N,EAAR,EAAQA,MAAOuL,EAAf,EAAeA,KAAMe,EAArB,EAAqBA,QAErBkB,EAAgB,CACdF,MAAM,EACNtN,QACAuL,OACAe,UACAC,SAAU,WACRiB,EAAgB,CAAEF,MAAM,IACxBK,IACAb,KAEFN,SAAU,WAAQgB,EAAgB,CAAEF,MAAM,YAG5CE,EAAgB,CAAEF,MAAM,IACxBK,IACAb,SAGFa,IACAb,KAIEiB,EAAkB,SAAChP,GACnB8N,EAAKmB,QACPjB,KA2CEkB,EA3BmB,WAAO,IAAD,EAC7B,OAAqC,KAAjC,UAAApB,EAAKK,gBAAL,eAAegB,eACV,KAIP,wBAAQ7P,UAAWoF,YAAK,CACtB,oHAA8I,IAA1B2J,IAClHtO,KAAK,SAAS4E,QAASqK,EAF3B,uBAqBeI,GACbC,GAbgB,OAAhBvB,EAAKgB,SACPhB,EAAKwB,cAAgB,mBAGf,wBAAQ7K,UAAoC,IAA1B4J,GAAmC,WAAY/O,UAAWoF,YAAK,CACvF,wFAAkH,IAA1B2J,EACxF,oHAA8I,IAA1BA,IAClHtO,KAAK,SAAS4E,QAASkK,EAHnB,SAILf,EAAKwB,eAAiB,YAQzBf,EAMEC,EANFD,KACAtN,EAKEuN,EALFvN,MACAuL,EAIEgC,EAJFhC,KACAe,EAGEiB,EAHFjB,QACAC,EAEEgB,EAFFhB,SACAC,EACEe,EADFf,SAGI8B,EAAchB,EAClB,cAAC,EAAD,CACEtN,MAAOA,EACPuL,KAAMA,EACNe,QAASA,EACTC,SAAUA,EACVC,SAAUA,IAEV,KAEJ,OACE,iCACI,UAAAK,EAAKT,gBAAL,eAAenN,QAAS,EACxB,cAACiJ,EAAD,CACED,aAAc4E,EAAKT,SACnBhE,SAAQ,eAAUyE,EAAKM,OAAO5C,WAAWgE,SAAS,EAAG,MACrDlG,cAnEkB,SAACD,EAAUqF,GACnCA,EAASe,eAAgB,IAAIpM,MAAOC,UACpCoL,EAASgB,cAAe,IAAIrM,MAAOG,cACnCmL,EAAYD,GACZnP,EAAS8J,EAAUqF,IAgEbnF,eA7DmB,SAACF,EAAUqF,GACpCC,EAAYD,GACZJ,GAAyB,IA4DnB9E,cAAekF,EAASZ,EAAKM,UAE/B,KAEF,sBAAK9O,UAAU,oCAAf,UACG4P,EACAG,KAGFE,IAhBOzB,EAAKM,SCrHbuB,EAAU,SAACC,EAASC,GACxB,IAAMC,EAAQF,EAAQ5L,QAAO,SAAA+L,GAAG,OAAIA,EAAI3B,SAAWyB,KAEnD,OADIC,EAAM5P,OAAS,GAAKwC,QAAQC,MAAR,0CAAiDkN,EAAjD,MACjBC,EAAM,IASFE,EAAqB,SAAC,GAAoD,IAAlDF,EAAiD,EAAjDA,MAAOvQ,EAA0C,EAA1CA,SAAUM,EAAgC,EAAhCA,WAAY2J,EAAoB,EAApBA,cAChE,EAAsC/I,mBAAS,MAA/C,mBAAOwP,EAAP,KAAoBC,EAApB,KAEA,IAAKJ,GAASA,EAAM5P,OAAS,EAE3B,OADAwC,QAAQC,MAAM,8BACP,KAGT,IAAKsN,EAAa,CAChB,IAAME,EAfW,SAACP,GACpB,IAAMQ,EAAYR,EAAQ5L,QAAO,SAAA+L,GAAG,OAAmB,OAAfA,EAAId,UAE5C,OADImB,EAAUlQ,OAAS,GAAKwC,QAAQC,MAAM,+BACnCyN,EAAU,GAYGC,CAAaP,GAI/B,OAHIK,GAAaA,EAAU/B,QAAU,GACnC8B,EAAeC,GAEV,KA0BT,OACE,qCACE,qBAAK7Q,UAAU,mBAAf,SACE,sBAAKA,UAAU,mCAAf,oBACU2Q,EAAY7B,YAGxB,cAAC,EAAD,CACEN,KAAMmC,EACN1Q,SAbwB,SAAC8J,EAAUqF,GACvCnP,EAAS8J,EAAUqF,IAaf7O,WAlB0B,SAACwJ,EAAUqF,KAmBrCX,WAlCkB,WAClBkC,EAAYnB,QACdoB,EAAeP,EAAQG,EAAOG,EAAYnB,SAC1CwB,OAAOC,SAAS,EAAG,IAEnB1Q,KA8BEmO,WA1BkB,WAClBiC,EAAYhB,QACdiB,EAAeP,EAAQG,EAAOG,EAAYhB,UAyBxCzF,cAAeA,EAAcyG,EAAY7B,SAAW,SChE/CoC,EAAgB,SAAC,GAAwC,IAAtC1O,EAAqC,EAArCA,QAAS2O,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UACnD,EAAgDjQ,oBAAS,GAAzD,mBAAOkQ,EAAP,KAAyBC,EAAzB,KACA,EAAoCnQ,mBAAS,CAC3CiQ,UAAWA,EACXG,SAAU/O,EAAQgP,KAAKD,WAFzB,mBAAOE,EAAP,KAAmBC,EAAnB,KAmBA,OAAOL,EACL,qBAAKrR,UAAU,gBAAf,SACE,qBAAKA,UAAU,gDAAf,8EAKF,mCACE,cAAC,EAAD,CACEoR,UAAWA,EACXZ,MAAK,OAAEhO,QAAF,IAAEA,OAAF,EAAEA,EAASgO,MAChBvQ,SAjB2B,SAACsQ,EAAQ/M,GACxC,IAAImO,EAAK7M,OAAOsF,OAAO,GAAIqH,GAC3BE,EAAGpB,GAAU/M,EACbkO,EAAcC,IAeVpR,WA1B6B,SAACgQ,EAAQ/M,GAC1C,IAAImO,EAAK7M,OAAOsF,OAAO,GAAIqH,GAC3BE,EAAGpB,GAAU/M,SACNmO,EAAGzG,UACViG,EAAWQ,GACXL,GAAoB,IAsBhBpH,cAAeuH,O,yDCwLRG,MAvNf,WACE,MAAsCzQ,oBAAS,GAA/C,mBAAO0Q,EAAP,KAAoBC,EAApB,KACA,EAAoC3Q,oBAAS,GAA7C,mBAAO4Q,EAAP,KAAmBC,EAAnB,KACA,EAAkC7Q,mBAAS,IAA3C,mBAAO8Q,EAAP,KAAkBC,EAAlB,KAEA,SAASC,EAAaC,EAAU5O,GAC9B,IAAIY,EAAM,GAGV,OAFAA,GAAOgO,EAASlS,KAAI,SAACuQ,GAAD,iBAAcA,EAAd,QAAuB4B,KAAK,KAAO,KACvD7O,EAAKX,SAAQ,SAACyP,GAAD,OAAUlO,GAAOkO,EAAKpS,KAAI,SAACuQ,GAAD,gBAZ3C,SAAgBA,GACd,OAAOxN,KAAKC,UAAUuN,GAWgC8B,CAAO9B,GAAO,QAAQ4B,KAAK,KAAO,QAC/EjO,EAGT,SAASoO,EAAqBC,GAK5B,IAJA,IAAIC,EAAc,KAEdC,EAAkB,GAEbC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAgBC,GAAK,EAGvBH,EAAa5P,SAAQ,SAAAgQ,GAMnB,GAJqB,SAAjBA,EAAMnP,SACRgP,EAAcG,EAAM/O,OAGD,UAAjB+O,EAAMnP,OAAoB,CAAC,IAAD,EAIP,EAHfoP,EAAOD,EAAM/O,MAAQ4O,EAG3B,GAFAA,EAAc,KAEd,UAAIG,EAAMlP,YAAV,OAAI,EAAY/B,IACd+Q,EAAgBI,SAAQ,UAACF,EAAMlP,YAAP,aAAC,EAAY/B,IAAIoR,MAAM,YAAa,MAAQF,MAK1E,IAAIG,EAAY,EAEVC,EAAUpO,OAAOC,KAAK4N,GAAiBzS,KAAI,SAACoF,GAChD,IAAM4D,EAAIyJ,EAAgBrN,GAC1B,OAAU,IAAN4D,EAAgB,CAAC,IAAK,KACtBA,GAAK,GACP+J,IACO,CAAC,IAAK/J,EAAI,WAFnB,KAMEiK,EAAc,EACdC,EAAM,GAEJC,EAAcZ,EAAalO,QAAO,SAACC,EAAKqO,GAS5C,MARqB,kBAAjBA,EAAMnP,QAA+C,mBAAjBmP,EAAMnP,UACZ,GAA5B0P,EAAIxO,QAAQiO,EAAMlP,OACpByP,EAAIvP,KAAKgP,EAAMlP,MAEjBwP,IACA3O,EAAIX,KAAKgP,EAAMlP,MACfa,EAAIX,KAAsB,mBAAjBgP,EAAMnP,OAA8B,IAAM,MAE9Cc,IACN,IAEG8O,EAAoBF,EAAIxS,OAE9B,MAAO,CACLuS,EACAG,EACAL,EACAC,EAAQK,OACRF,GACAE,OAoGJ,SAASC,EAAmB9S,GAC1B,IAAM+S,EAAU/S,EAAEC,OAAON,MACzB,GAAIoT,EAAQ7S,OAAS,EACnB,IACE,IAAM8S,EAAUzQ,KAAK0Q,MAAMF,GAC3B3B,GAAe,GACfE,EAAc0B,GACd,MAAOrQ,GACPyO,GAAe,GACfE,EAAc,OAKpB,OACE,sBAAKhS,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,gCACA,mBAAGA,UAAU,OAAb,wHAEA,4BAAG,2CACH,0BAAU4T,OAAO,KAAKC,KAAK,KACzB7T,UAAU,kCACVC,SAAUuT,IAEZ,wBAAQxT,UAAWoF,YAAK,CACtB,wFAAwG,IAAhByM,EACxF,oHAAoI,IAAhBA,IAClHpR,KAAK,SAAS4E,QA5HtB,SAAuB3E,GA2CrB,IA1CA,IACI0R,EAAW,CACb,YACA,YACA,gBACA,SACA,SACA,SACA,kBACA,gBACA,YACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,gBACA,mBACA,iBACA,0BACA,mBACA,mBACA,0BACA,cACA,iBACA,iBACA,cACA,cACA,yBACA,4BACA,MACA,SACA,6BACA,cACA,aACA,OACA,mBACA,oBACA,aAGOQ,EAAI,EAAGA,GAAK,GAAIA,IACvBR,EAASvO,KAAT,aAAoB+O,EAApB,WACAR,EAASvO,KAAT,aAAoB+O,EAApB,UAGF,IA6CMkB,EAAS3B,EAAaC,EA7ChBtN,OAAOC,KAAKgN,EAAWgC,QAAQ,uBAAuB7T,KAAI,SAACgF,GAAS,IAAD,wEACvEuL,EAAMsB,EAAWgC,QAAQ,sBAAsB7O,GAAzC,KAyCZ,MAvCU,CACPuL,EAAG,UAAcvE,WAAW8H,UAAU,EAAG,IAAM,GAC/CvD,EAAG,UACHA,EAAG,wBACH9J,KAAKY,OAAM,UAAAkJ,EAAI,kBAAJ,8BAAoCA,EAAG,YAAkB,KACpE9J,KAAKY,OAAM,UAAAkJ,EAAI,kBAAJ,yCAAoCA,EAAI,kBAAxC,aAAoC,kBAAqC,KACpF9J,KAAKY,MAAMkJ,EAAG,UAAH,UAAkBA,EAAI,kBAAtB,aAAkB,kBAAqC,MAClE,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,GAC5B,UAAAA,EAAI,kBAAJ,oBAAiC,IAAM,KACvC,UAAAA,EAAI,kBAAJ,eAAiB,aAAc,IAC/B,UAAAA,EAAI,kBAAJ,eAAiB,aAAc,IAC/B,UAAAA,EAAI,kBAAJ,eAAiB,aAAc,IAC/B,UAAAA,EAAI,kBAAJ,eAAiB,aAAc,IAC/B,UAAAA,EAAI,kBAAJ,eAAiB,aAAc,IAC/B,UAAAA,EAAI,kBAAJ,eAAiB,aAAc,IAC/B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,mBAAiB,eAAjB,wBAAwC,KACxC,UAAAA,EAAI,kBAAJ,mBAAiB,eAAjB,wBAAwC,KACxC,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,UAAW,IAC5B,UAAAA,EAAI,kBAAJ,eAAiB,WAAY,IAC7B,UAAAA,EAAI,kBAAJ,eAAiB,WAAY,IAC7B,UAAAA,EAAI,kBAAJ,eAAiB,WAAY,IAC7B,UAAAA,EAAI,kBAAJ,eAAiB,WAAY,GAC9B+B,EAAoB,UAAC/B,EAAI,kBAAL,aAAC,EAAiB,wBAAwB8C,QAC9DA,WAMJrB,EAAa4B,IA2BX,oBAOA,4BAAG,0CACH,0BAAUF,OAAO,KAAKC,KAAK,KACzB7T,UAAU,kCACVC,SAAUuT,EACV7L,aAAcsK,IAEhB,mBAAGjS,UAAU,OAAb,+ECjMNiU,YAXuB,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0EACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAaC,cACbC,EAAY,IAAI5Q,KAiBhB6Q,EAdSC,IAAOlO,KAAKE,SAASqF,YAAa,IAAInI,MAAO+Q,mBAAmB5I,YACjEA,SAAS6I,IAASC,IAAIC,KAe9BC,EAAkB,SAAC1R,GAAU,IAAD,IAC1B2R,EAAU,IAAIpR,KACpBP,EAAK4R,WAAaT,EAAU3Q,UAC5BR,EAAKmR,UAAY,IAAI5Q,KAAK4Q,GAAWzQ,cACrCV,EAAK6R,SAAWF,EAAQnR,UACxBR,EAAK2R,QAAU,IAAIpR,KAAKoR,GAASjR,cACjCV,EAAK8R,wBAA0B3O,KAAK4O,OAAO/R,EAAK6R,SAAW7R,EAAK4R,YAAc,KAC9E5R,EAAKgS,wBAA0B7O,KAAK4O,OAAO/R,EAAK6R,SAAW7R,EAAK4R,YAAc,KAE9E,IArBqB7P,EAqBfkQ,EAAY,UAAGjS,EAAK,kBAAR,iBAAG,EAAkB,gBAArB,aAAG,EAA4B0I,WAajD,GAZIuJ,IAAgBjS,EAAK,WAAW,SAAW,wBAE/CkS,YAAIC,YAAIlB,EAAD,kBAAwBjR,EAAK+N,SAA7B,aAxBchM,EAwByC4P,EAvBvD5P,EAAIqQ,cAAc1J,YACtB3G,EAAIsQ,WAAa,GAAG3J,WAAWgE,SAAS,EAAG,KAC5C3K,EAAIuQ,UAAU5J,WAAWgE,SAAS,EAAG,KAAO,IAC5C3K,EAAIwQ,WAAW7J,WAAWgE,SAAS,EAAG,KACtC3K,EAAIyQ,aAAa9J,WAAWgE,SAAS,EAAG,KACxC3K,EAAI0Q,aAAa/J,WAAWgE,SAAS,EAAG,KACxC3K,EAAI2Q,kBAAkBhK,WAAWgE,SAAS,EAAG,MAiBxC,YAAmE1M,EAAK4N,UAAUlF,WAAWiK,OAAO,EAAG,MAAQ,CACpH3S,KAAMA,IAELnB,MAAK,WACJe,QAAQK,IAAI,kCAAmCD,MAEhD4S,OAAM,SAAC/S,GACND,QAAQC,MAAM,8BAGdoS,GAA6C,MAA7BjS,EAAK,WAAW,SAAkB,CAEpD,IAAM6S,EAAaxS,YAAKyS,YAAMX,YAAIlB,GAAL,8BAAyCjR,EAAK+N,YAAarM,IAClFqR,EAAU,GAChBA,EAAQ,8BAAuB/S,EAAK+N,SAA5B,KAA0C8E,GAAc,CAAEG,MAAOf,GAEzEgB,YAAOd,YAAIlB,GAAa8B,GAASlU,MAAK,WACpCe,QAAQK,IAAI,iCAEX2S,OAAM,SAAC/S,GACND,QAAQC,MAAM,uCAWtB,SAASqT,IACP,MAAkDvV,mBAAS,MAA3D,mBAAOwV,EAAP,KAA0BC,EAA1B,KAeA,OAbA1U,qBAAU,WAERC,IAAMC,IAAI,yBAAyBC,MAAK,SAAAC,GACtC,IAAMC,EAA+BD,EAASkB,KAE1CjB,EACFqU,EAAqBrU,GAErBa,QAAQK,IAAI,8BAGf,IAEIkT,EACL,qBAAK3W,UAAU,4CAAf,SACE,cAAC,EAAD,CAAewC,QAASmU,EAAmBxF,WAAY+D,EAAiB9D,UAAWwD,MAGrF,qBAAK5U,UAAU,gBAAf,SACE,qBAAKA,UAAU,kBAAf,uCAgBS6W,OAXf,WACE,OACE,qBAAK7W,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8W,KAAK,UAAUhU,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOgU,KAAK,IAAIhU,QAAS,cAAC4T,EAAD,YC1GlBK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5U,MAAK,YAAkD,IAA/C6U,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9fbc173.chunk.js","sourcesContent":["\r\nexport const DropDown = ({ name, label, options, onValueSelect, ...otherAttrs }) => {\r\n  return (\r\n    <div key={name}>\r\n      <div className=\"font-bold pb-5\">{label}</div>\r\n      <select name={name} onChange={onValueSelect} className=\"py-1 px-3 border border-solid border-black bg-gray-50\">\r\n        {options.map((opt, idx) => {\r\n          return <option value={opt.value} key={idx}>{opt.label}</option>\r\n        })}\r\n      </select>\r\n    </div>\r\n  )\r\n}","export const NumericalInput = ({ onChange, onComplete, label, ...otherProps }) => {\r\n  const handleOnChangeEvent = e => {\r\n    if (e.target.value.length > 0) {\r\n      onChange(e)\r\n      onComplete(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && <div className=\"font-bold pb-5\">{label}</div>}\r\n      <input type=\"number\"\r\n        onChange={handleOnChangeEvent}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...otherProps} />\r\n    </>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport clsx from 'clsx'\r\n\r\nconst MIN_CHARS_FOR_SEARCH = 4\r\nlet viewerStart = null\r\n\r\nexport const ResearchSimulation = ({ name, onSearchHistoryChanged, placeholder, notFoundMessage, labelOpenDocument, ...otherAttrs }) => {\r\n  const [searchKeywords, setSearchKeywords] = useState(\"\")\r\n  const [searchResults, setSearchResults] = useState({ init: true })\r\n  const [loggedActions, logAction] = useState([])\r\n  const [docToView, setDocToView] = useState({ title: null, url: null, viewerIsOpen: false })\r\n  const [controlData, setControlData] = useState(null)\r\n\r\n  const validateRuleSet = (ruleSet) => {\r\n    if (!ruleSet?.researchSimulation) {\r\n      throw Error('Die Daten in research-simulation.json sind ungültig!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.config) {\r\n      throw Error('Abschnitt \"config: { ... }\" in research-simulation.json fehlt!')\r\n    }\r\n\r\n    if (!ruleSet.researchSimulation?.cues?.length > 0) {\r\n      throw Error('Abschnitt \"cues\": [ ... ] in research-simulation.json fehlt oder ist leer!')\r\n    }\r\n\r\n    try {\r\n      ruleSet.researchSimulation.cues.forEach(element => {\r\n        const { id, title, keywords, url } = element\r\n\r\n        if (!id || typeof id !== \"number\") { throw Error(`Fehlendes oder ungültiges Attribute \"id\" (keine Zahl?) in ${JSON.stringify(element)}`) }\r\n        if (!title || typeof title !== \"string\" || title?.length < 1) { throw Error(`Fehlendes oder ungültiges Attribute \"title\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!keywords || !keywords?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"keywords\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n        if (!url || !url?.length > 1) { throw Error(`Fehlendes oder ungültiges Attribute \"url\" (keine Zeichenkette?) in ${JSON.stringify(element)}`) }\r\n      })\r\n    } catch (err) {\r\n      console.error(err)\r\n      throw JSON.stringify(err.message)\r\n    }\r\n\r\n    return ruleSet\r\n  }\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/research-simulation.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const getSearchResults = (keywords) => {\r\n    const kws = keywords.toLowerCase().split(';')\r\n\r\n    return kws.reduce((acc, kw) => {\r\n      if (kw.length === 0) return acc\r\n\r\n      const cues4Kw = controlData.researchSimulation?.cues.filter((item) => {\r\n        return item.keywords.toLowerCase().indexOf(kw) > -1\r\n      })\r\n\r\n      cues4Kw.forEach(cue => {\r\n        acc[cue.id] = cue\r\n      })\r\n\r\n      return acc\r\n    }, {})\r\n  }\r\n\r\n  const updateKeywords = (e) => {\r\n    setSearchKeywords(e.target.value)\r\n  }\r\n\r\n  // try {\r\n  //   ruleSetIsValid()\r\n  // }\r\n  // catch (err) {\r\n  //   return (<div className=\"bg-red-100 text-red-700 p-20\">\r\n  //     Die Daten in der JSON-Datei für das Modul \"Research Simulation\" sind ungültig.<br />\r\n  //     {JSON.parse(err)}\r\n  //   </div>)\r\n  // }\r\n\r\n  const log = (action, info) => {\r\n    const actions = loggedActions\r\n    actions.push({\r\n      time_: new Date().getTime(),\r\n      time: new Date().toISOString(),\r\n      action,\r\n      info\r\n    })\r\n    logAction(actions)\r\n    onSearchHistoryChanged({ target: { name: name, value: actions } })\r\n  }\r\n\r\n  const triggerSearch = (e) => {\r\n    const res = getSearchResults(searchKeywords)\r\n    if (Object.keys(res).length === 0) {\r\n      log('SEARCH-FAILED', searchKeywords)\r\n    } else {\r\n      log('SEARCH-SUCCESS', searchKeywords)\r\n    }\r\n\r\n    setSearchResults(res)\r\n  }\r\n\r\n  const getViewer = (cue) => () => {\r\n    log('OPEN', cue.url)\r\n    const now = new Date()\r\n    viewerStart = now.getTime()\r\n    setDocToView({ title: cue.title, url: cue.url, viewerIsOpen: true })\r\n  }\r\n\r\n  const closeViewer = (e) => {\r\n    const url = docToView.url\r\n    const now = new Date()\r\n    const durationOfView = now.getTime() - viewerStart\r\n    viewerStart = null\r\n    log('CLOSE', { url, durationInSec: durationOfView / 1000 })\r\n    setDocToView({ title: null, url: null, viewerIsOpen: false })\r\n  }\r\n\r\n  const handleEnterKey = (e) => {\r\n    if (e.key === 'Enter' && searchKeywords.length >= MIN_CHARS_FOR_SEARCH) {\r\n      triggerSearch()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <h1 className=\"text-3xl pb-4\">Recherche</h1>\r\n\r\n      <div className=\"bg-blue-50 shadow-md px-8 pt-6 pb-8 mb-4\">\r\n        <div className=\"mb-4\">\r\n          <input autoFocus onKeyPress={handleEnterKey} onChange={updateKeywords} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"keywords\" type=\"text\" placeholder={placeholder} />\r\n        </div>\r\n        <div className=\"flex items-center justify-between\">\r\n          <button disabled={searchKeywords.length < MIN_CHARS_FOR_SEARCH && 'disabled'} className={clsx({\r\n            \"bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": searchKeywords.length < MIN_CHARS_FOR_SEARCH,\r\n            \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": searchKeywords.length >= MIN_CHARS_FOR_SEARCH\r\n          })} type=\"button\" onClick={triggerSearch}>\r\n            Suchen\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).length === 0 && (\r\n        <div className=\"bg-gray-50 p-10 my-10\">\r\n          <div>{notFoundMessage}</div>\r\n        </div>)\r\n      }\r\n\r\n      {searchResults.init !== true && Object.keys(searchResults).map(k => (\r\n        <div className=\"bg-gray-50 p-5 my-1 border-gray-500\" key={k}>\r\n          <div className=\"font-bold\">{searchResults[k].title}</div>\r\n          <div className=\"text-blue-400\"><div className=\"cursor-pointer text-blue-700\" onClick={getViewer(searchResults[k])}>{labelOpenDocument}</div></div>\r\n        </div>)\r\n      )}\r\n\r\n      {docToView.viewerIsOpen && <div className=\"fixed inset-0 bg-gray-600 bg-opacity-99 overflow-y-auto h-full w-full\">\r\n        <div className=\"flex w-full bg-gray-800 text-white text-xl p-2\">\r\n          <button className=\"flex-none p-2 cursor-pointer m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded focus:outline-none focus:shadow-outline\" onClick={closeViewer}>Zurück zur Suchmaske</button>\r\n          <div className=\"flex-grow text-center pt-4 pl-52 text-2xl font-bold\">{docToView.title}</div>\r\n        </div>\r\n        <div className=\"w-full h-full\">\r\n          <embed\r\n            src={docToView.url}\r\n            type=\"application/pdf\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"auto\"\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n          ></embed>\r\n        </div>\r\n      </div>}\r\n\r\n    </div>\r\n  )\r\n\r\n}","/**\r\n * Finds and replaces some very basic BBCode tags\r\n */\r\nexport const replaceBBCode = raw => {\r\n  if (!raw || raw.length < 1) return\r\n\r\n  let last = null\r\n  let res = raw\r\n\r\n  do {\r\n    last = res\r\n    // match simple format tags\r\n    res = res.replace(/\\[(b|i|u|s|center)\\](.*?)\\[\\/\\1\\]/gs, \"<$1>$2</$1>\")\r\n    res = res.replace(/\\[url=(\\/.+?)\\](.*?)\\[\\/url\\]/g, \"<a href='$1' target='_blank' class='external'>$2</a>\")\r\n  } while (res !== last)\r\n\r\n  // match line breaks\r\n  res = res.replace(/\\[br\\]*/gs, \"<br />\")\r\n\r\n  return res\r\n}\r\n\r\n","import { replaceBBCode } from \"../../../../helpers/bbcode\"\r\n\r\nfunction shuffle(array) {\r\n  let currentIndex = array.length, randomIndex\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex != 0) {\r\n\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex)\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]]\r\n  }\r\n\r\n  return array\r\n}\r\n\r\n\r\nexport const SelectFromRange = ({ name, label, options, onChange, alignment, randomizeOrder, ...otherAttrs }) => {\r\n\r\n  const handleChange = (e) => {\r\n    return onChange(e)\r\n  }\r\n\r\n  let selOptions = options\r\n  if (randomizeOrder) {\r\n    shuffle(selOptions)\r\n  }\r\n\r\n  if (alignment === 'vertical') {\r\n    return (\r\n      <div key={name} className=\"p-0 w-full\">\r\n        <div className=\"max-w-full pb-5 font-bold\" dangerouslySetInnerHTML={{\r\n          __html: replaceBBCode(label) || ' '\r\n        }}></div>\r\n\r\n        <div className=\"w-full\">\r\n          {selOptions.map((opt, idx) => (\r\n            <div className=\"h-12\">\r\n              <span className=\"w-min\"><input type=\"radio\" name={name} id={`${name}${opt.value}`} value={opt.value} onChange={handleChange} /></span> &nbsp;\r\n              <label className=\"w-full border border-solid\" key={idx} htmlFor={`${name}${opt.value}`}>\r\n                <span className=\"h-16 font-bold text-center whitespace-pre\" dangerouslySetInnerHTML={{\r\n                  __html: replaceBBCode(opt.label) || ' '\r\n                }}>\r\n                </span>\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (<div key={name} className=\"p-0 w-full\">\r\n      <div className=\"max-w-full pb-5 font-bold\" dangerouslySetInnerHTML={{\r\n        __html: replaceBBCode(label) || ' '\r\n      }}></div>\r\n\r\n      <div className=\"w-full flex\">\r\n        {options.map((opt, idx) => (\r\n          <label className=\"w-full border border-solid\" key={idx} htmlFor={`${name}${opt.value}`}>\r\n            <div className=\"h-16 font-bold text-center whitespace-pre\" dangerouslySetInnerHTML={{\r\n              __html: replaceBBCode(opt.label) || ' '\r\n            }}>\r\n            </div>\r\n            <div className=\"text-center\"><input type=\"radio\" name={name} id={`${name}${opt.value}`} value={opt.value} onChange={handleChange} /></div>\r\n            <div className=\"text-center\">{opt.value}</div>\r\n          </label>\r\n        ))}\r\n      </div>\r\n    </div>)\r\n  }\r\n}","import { useState } from \"react\"\r\n\r\nexport const Slider = ({ name, min, max, label, unit, onChange, ...otherAttrs }) => {\r\n  const middleMinMax = Math.ceil(min + ((max - min) / 2))\r\n  const [currentSliderValue, setCurrentSliderValue] = useState(null)\r\n\r\n  const handleSlideChange = (e) => {\r\n    setCurrentSliderValue(e.target.value)\r\n  }\r\n\r\n  const handleFinishedSlide = (e) => {\r\n    return onChange({\r\n      target: {\r\n        name: name,\r\n        value: currentSliderValue\r\n      }\r\n    })\r\n  }\r\n\r\n  return (<div key={name} className=\"p-0\">\r\n    <div className=\"max-w-sm font-bold pb-5\">{label}</div>\r\n    <input\r\n      className=\"bg-gray-400\"\r\n      type=\"range\"\r\n      name={name}\r\n      min={min}\r\n      max={max}\r\n      defaultValue={-1}\r\n      onChange={handleSlideChange}\r\n      onMouseUp={handleFinishedSlide}\r\n      onKeyUp={handleFinishedSlide}\r\n      {...otherAttrs}\r\n    />&nbsp;\r\n    <span>{currentSliderValue} {unit}</span>\r\n  </div>)\r\n}","export const TextArea = ({ name, onChange, onComplete, label, isRequired, ...otherProps }) => {\r\n  const onChangeHandler = e => {\r\n    if (e.target.value.length > 0) {\r\n      onChange(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && <div className=\"font-bold pb-5\">{label}</div>}\r\n      <textarea\r\n        name={name}\r\n        onChange={onChangeHandler}\r\n        onBlur={onComplete}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...otherProps} />\r\n    </>\r\n  )\r\n}","export const TextInput = ({ onChange, onComplete, label, ...otherProps }) => {\r\n  const handleOnChangeEvent = e => {\r\n    if (e.target.value.length > 0) {\r\n      onChange(e)\r\n      onComplete(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {label && <div className=\"font-bold pb-5\">{label}</div>}\r\n      <input type=\"text\"\r\n        onChange={handleOnChangeEvent}\r\n        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        {...otherProps} />\r\n    </>\r\n  )\r\n}","export const SelfAssessment = ({ data, onAllChosen, ...otherAttrs }) => {\r\n  if (!data?.attributes || data.attributes.length === 0) {\r\n    return <div>No attributes given</div>\r\n  }\r\n\r\n  const shuffleArray = (inputArray) => {\r\n    const ia = inputArray\r\n    ia.sort(() => Math.random() - 0.5)\r\n    return ia\r\n  }\r\n\r\n  const calcGoughScore = (answers, attributes) => {\r\n    let score = 0\r\n    let posMatches = 0\r\n    let negMatches = 0\r\n\r\n    Object.keys(answers).forEach(element => {\r\n      const attr = attributes.filter(v => { return (v.name === element) })[0]\r\n\r\n      if (attr.trend === 'pos' && answers[element] === 'y') {\r\n        score++\r\n        posMatches++\r\n      }\r\n\r\n      if (attr.trend === 'neg' && answers[element] === 'y') {\r\n        score--\r\n        negMatches++\r\n      }\r\n    })\r\n\r\n    return ({\r\n      score,\r\n      posMatches,\r\n      negMatches\r\n    })\r\n  }\r\n\r\n  const randomOrder = shuffleArray(Object.keys(data.attributes))\r\n\r\n  const fieldsOrdered = randomOrder.map(key => {\r\n    return data.attributes[key].name\r\n  })\r\n\r\n  let inputData = {\r\n    fieldsOrdered: fieldsOrdered,\r\n    answers: {}\r\n  }\r\n\r\n  const handleOptChange = e => {\r\n    inputData.answers[e.target.name] = e.target.value\r\n\r\n    if (Object.keys(inputData.answers).length > 0 &&\r\n      Object.keys(inputData.answers).length === inputData.fieldsOrdered.length) {\r\n      const { score, posMatches, negMatches } = calcGoughScore(inputData.answers, data.attributes)\r\n\r\n      inputData.score1 = score\r\n      inputData.score2 = posMatches / (posMatches + negMatches)\r\n      onAllChosen({\r\n        target: {\r\n          name: data.name,\r\n          value: inputData,\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap\">\r\n      {randomOrder.map((key, idx) => {\r\n        const attrData = data.attributes[key]\r\n\r\n        return (\r\n          <div className=\"flex w-full md:w-1/2\" key={idx}>\r\n            <div className=\"border border-solid border-gray-200 bg-gray-50 flex p-2 w-full\">\r\n              <div className=\"flex-grow\">{attrData.label}</div>\r\n              <label htmlFor={attrData.name} className=\"flex-0 w-1/4\">\r\n                <input type=\"radio\" name={attrData.name} id={attrData.name} value=\"y\" onChange={handleOptChange} />&nbsp; Ja\r\n              </label>\r\n              <label htmlFor={attrData.name + '2'} className=\"flex-0\">\r\n                <input type=\"radio\" name={attrData.name} id={attrData.name + '2'} value=\"n\" onChange={handleOptChange} />&nbsp; Nein\r\n              </label>\r\n            </div>\r\n          </div>)\r\n      })}\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n}","import { DropDown } from \"./dropdown/DropDown\"\r\nimport { NumericalInput } from \"./numericalinput/NumericalInput\"\r\nimport { ResearchSimulation } from \"./researchsimulation/ResearchSimulation\"\r\nimport { SelectFromRange } from \"./selectfromrange/SelectFromRange\"\r\nimport { Slider } from \"./slider/Slider\"\r\nimport { TextArea } from \"./textarea/TextArea\"\r\nimport { TextInput } from \"./textinput/TextInput\"\r\nimport { replaceBBCode } from \"./../../../helpers/bbcode\"\r\nimport { SelfAssessment } from \"./selfassessment/SelfAssessment\"\r\nimport { memo } from \"react\"\r\n\r\n// @TODO find better solution for generating unique element ids\r\nlet renderedElementId = 0\r\n\r\n\r\nconst propsAreEqual = (prevProps, nextProps) => {\r\n  return prevProps.formSections === nextProps.formSections\r\n}\r\n\r\nexport const FormBuilder = memo(({ formSections, formName, onFormChanged, onFormComplete, defaultValues }) => {\r\n\r\n  let completedInputFields = Object.assign({}, defaultValues)\r\n  let requiredInputFields = []\r\n\r\n  const registerRequiredInputField = (name, isRequired) => {\r\n    if (isRequired && !requiredInputFields.includes(name)) {\r\n      requiredInputFields.push(name)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders a section headline\r\n   */\r\n  const renderHeadline = data => {\r\n    return (\r\n      <div className=\"text-xl pt-3 pb-4\" key={data.text}>\r\n        <strong>{data.text}</strong>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders a bunch of text paragraphs\r\n   */\r\n  const renderText = data => {\r\n    return data.paragraphs.map((p, idx) => (\r\n      <p className=\"pb-3\" key={idx} dangerouslySetInnerHTML={{\r\n        __html: replaceBBCode(p)\r\n      }}></p>\r\n    ))\r\n  }\r\n\r\n  const renderBoxedText = data => {\r\n    const text = renderText(data)\r\n    return <div className=\"border border-gray-400 bg-gray-200 p-5 border-solid\">\r\n      {text}\r\n    </div>\r\n  }\r\n\r\n  const renderBulletList = data => {\r\n    const bPoints = data.paragraphs.map((p, idx) => {\r\n      return <li className=\"pb-3 list-item\" key={idx}>{p}</li>\r\n    })\r\n\r\n    return <ul className=\"pl-10 list-outside list-disc\">\r\n      {bPoints}\r\n    </ul>\r\n  }\r\n\r\n  const formIsCompleted = () => {\r\n    if (!completedInputFields) {\r\n      return false\r\n    }\r\n\r\n    if (completedInputFields && Object.keys(completedInputFields).length < 1) {\r\n      return true\r\n    }\r\n\r\n    let isCompleted = true\r\n\r\n    requiredInputFields.forEach(reqFieldName => {\r\n      if (completedInputFields[reqFieldName] === undefined || completedInputFields[reqFieldName] === null) {\r\n        isCompleted = false\r\n      }\r\n    })\r\n    return isCompleted\r\n  }\r\n\r\n  const stashInput = (xname, xvalue) => {\r\n    const ci = completedInputFields\r\n    ci[xname] = xvalue\r\n    completedInputFields = ci\r\n  }\r\n\r\n  const saveCurrentInputValue = e => {\r\n    stashInput(e.target.name, e.target.value)\r\n    onFormChanged(formName, completedInputFields)\r\n\r\n    if (formIsCompleted()) {\r\n      let cif = Object.assign({}, completedInputFields)\r\n      cif.isCompleted = true\r\n      onFormComplete(formName, cif)\r\n    }\r\n  }\r\n\r\n\r\n  const renderSlider = ({ label, name, unit, min, max, isOptional, ...otherAttributes }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    return (\r\n      <div key={name} className=\"bg-gray-200 p-5 w-full\">\r\n        <Slider\r\n          name={name}\r\n          className=\"min-w-full\"\r\n          label={label}\r\n          unit={unit}\r\n          onChange={saveCurrentInputValue}\r\n          min={min}\r\n          max={max}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderSelectFromRange = ({ name, isOptional, label, options, alignment, randomizeOrder }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n\r\n    return (\r\n      <div key={name} className=\"bg-gray-200 p-5\">\r\n        <SelectFromRange\r\n          name={name}\r\n          label={label}\r\n          options={options}\r\n          onChange={saveCurrentInputValue}\r\n          alignment={alignment}\r\n          randomizeOrder={randomizeOrder}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * Renders a multiline text input field (<textarea...)\r\n   */\r\n  const renderTextArea = ({ name, label, rows, placeholder, isOptional }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    const curVal = completedInputFields?.[name] || null\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <TextArea\r\n          className=\"w-full p-5\"\r\n          onChange={saveCurrentInputValue}\r\n          onComplete={() => { }}\r\n          isRequired={!isOptional}\r\n          label={label}\r\n          name={name}\r\n          rows={rows}\r\n          placeholder={placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders a single line (<input ..) or a multiline (<textarea.. ) input field\r\n   */\r\n  const renderTextInput = ({ name, label, rows, placeholder, isOptional }) => {\r\n    if (rows > 1) {\r\n      return renderTextArea({ name, label, rows, placeholder })\r\n    }\r\n\r\n    registerRequiredInputField(name, !isOptional)\r\n    const curVal = completedInputFields?.[name] || null\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <TextInput\r\n          className=\"w-full p-5\"\r\n          onBlur={saveCurrentInputValue}\r\n          onChange={() => null}\r\n          onComplete={saveCurrentInputValue}\r\n          label={label}\r\n          name={name}\r\n          rows={rows}\r\n          placeholder={placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderNumericalInput = ({ name, label, rows, placeholder, isOptional }) => {\r\n    if (rows > 1) {\r\n      return renderTextArea({ name, label, rows, placeholder })\r\n    }\r\n\r\n    registerRequiredInputField(name, !isOptional)\r\n    const curVal = completedInputFields?.[name] || 0\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <NumericalInput\r\n          className=\"w-full p-5\"\r\n          onBlur={saveCurrentInputValue}\r\n          onChange={() => null}\r\n          onComplete={saveCurrentInputValue}\r\n          label={label}\r\n          name={name}\r\n          rows={rows}\r\n          placeholder={placeholder}\r\n          defaultValue={curVal}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderDropDown = ({ name, label, options, isOptional }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <DropDown\r\n          name={name}\r\n          label={label}\r\n          options={options}\r\n          onValueSelect={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderResearchSimulation = ({ name, label, placeholder, notFoundMessage, labelOpenDocument }) => {\r\n    return (\r\n      <div key={name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <ResearchSimulation\r\n          name={name}\r\n          labe={label}\r\n          placeholder={placeholder}\r\n          notFoundMessage={notFoundMessage}\r\n          labelOpenDocument={labelOpenDocument}\r\n          onSearchHistoryChanged={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const registerOpen = (url, name) => {\r\n    return (e) => {\r\n      saveCurrentInputValue(\r\n        {\r\n          target: {\r\n            name: name,\r\n            value: { url: url, time_: new Date().getTime(), time: new Date().toISOString() }\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderLinkThumbnail = ({ url, target, name, title, isOptional }) => {\r\n    registerRequiredInputField(name, !isOptional)\r\n\r\n    return (\r\n      <a href={url} target={target} onClick={registerOpen(url, name)}>\r\n        <div key={name} className=\"border-1 border-solid bg-gray-100 p-5 w-auto hover:bg-gray-200\">\r\n          {title}\r\n        </div>\r\n      </a>\r\n    )\r\n  }\r\n\r\n  const renderPickVersion = ({ name, isOptional, versions }) => {\r\n    const numVersions = versions?.length\r\n    if (numVersions < 1) return null\r\n\r\n    const a = new Uint32Array(1) //@TODO this is a hack just considering 2 versions - needs to be fixed if you wand pick more than 2 versions\r\n    const choosenVersion = completedInputFields[name] || (crypto.getRandomValues(a)[0].toString()[1]) % numVersions\r\n\r\n    stashInput(name, choosenVersion)\r\n    const res = versions[choosenVersion].elements?.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\" key={idx}>{renderIncludedElement(el)}</div>\r\n      }\r\n\r\n      return null\r\n    })\r\n\r\n    return <div key={name}>{res}</div>\r\n  }\r\n\r\n  const renderAside = (elements) => {\r\n    const sideElements = elements.map((el, idx) => {\r\n      if (!el.module) return null\r\n\r\n      if (el.module !== 'subsections') {\r\n        return <div className=\"__element p-2\" key={el.id}>{renderIncludedElement(el)}</div>\r\n      }\r\n\r\n      return null\r\n    })\r\n\r\n    return (<div className=\"absolute right-0 top-0 h-screen\">\r\n      <div className=\"__element p-2 sticky right-0 top-0\">\r\n        {sideElements}\r\n      </div>\r\n    </div>)\r\n  }\r\n\r\n\r\n\r\n  const renderSelfAssessment = (data) => {\r\n    return (\r\n      <div key={data.name} className=\"border-1 border-solid bg-gray-200 p-5\">\r\n        <SelfAssessment\r\n          data={data}\r\n          onAllChosen={saveCurrentInputValue}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Renders an element inside a cell or section\r\n   */\r\n  const renderIncludedElement = ({ data, elements, module }) => {\r\n    let content = null\r\n    data.id = renderedElementId++\r\n\r\n    switch (module.toLowerCase()) {\r\n      case 'aside':\r\n        content = renderAside(elements)\r\n        break\r\n      case 'selfassessment':\r\n        content = renderSelfAssessment(data)\r\n        break\r\n      case 'linkthumbnail':\r\n        content = renderLinkThumbnail(data)\r\n        break\r\n      case 'researchsimulation':\r\n        content = renderResearchSimulation(data)\r\n        break\r\n      case 'dropdown':\r\n        content = renderDropDown(data)\r\n        break\r\n      case 'selectfromrange':\r\n        content = renderSelectFromRange(data)\r\n        break\r\n      case 'slider':\r\n        content = renderSlider(data)\r\n        break\r\n      case 'headline':\r\n        content = renderHeadline(data)\r\n        break\r\n      case 'boxedtext':\r\n        content = renderBoxedText(data)\r\n        break\r\n      case 'bulletlist':\r\n        content = renderBulletList(data)\r\n        break\r\n      case 'pickversion':\r\n        content = renderPickVersion(data)\r\n        break\r\n      case 'text':\r\n        content = renderText(data)\r\n        break\r\n      case 'textarea':\r\n      case 'textinput':\r\n        content = renderTextInput(data)\r\n        break\r\n      case 'numericalinput':\r\n        content = renderNumericalInput(data)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n\r\n    return content\r\n  }\r\n\r\n  /**\r\n   * Renders a collection of sections (including all nested subsections)\r\n   */\r\n  const renderSections = (secs, depth) => {\r\n    let content = null\r\n\r\n    return secs.map((sec, secIdx) => {\r\n      const elements = sec.elements.map((el, idx) => {\r\n        if (!el.module) return null\r\n\r\n        if (el.module !== 'subsections') {\r\n          content = renderIncludedElement(el)\r\n\r\n          return <div className=\"__element p-2\" key={`${el.id}`}>{content}</div>\r\n        } else {\r\n          content = renderSections(el.sections, depth + 1)\r\n\r\n          return content\r\n        }\r\n      })\r\n\r\n      if (depth === 1) {\r\n        return (\r\n          <div className=\"p-6 border my-1 border-solid\" key={`sect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"__subsection\" key={`subsect-${depth}:${secIdx}`}>\r\n            {elements}\r\n          </div>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  const formContent = renderSections(formSections, 1)\r\n  return <>\r\n    {formContent}\r\n  </>\r\n}, propsAreEqual)","export const SimpleModal = ({ title, text, buttons, onAccept, onReject }) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-70 h-full w-full\">\r\n      <div className=\"md:w-1/2 bg-white m-auto my-10\">\r\n        <div className=\"flex w-full bg-gray-400 p-3 text-white text-2xl\">\r\n          <div className=\"flex-grow text-center\">{title}</div>\r\n        </div>\r\n        <div className=\"p-6 lg:text-lg md:text-md\">\r\n          {text.map((t, idx) => {\r\n            return <p className=\"p-5 py-2\" key={idx}>{t}</p>\r\n          })}\r\n        </div>\r\n        <div className=\"flex pl-6\">\r\n          <button className=\"flex-grow flex-1 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onAccept}>{buttons.accept}</button>\r\n          <button className=\"flex-grow flex-1 bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline m-5\" onClick={onReject}>{buttons.reject}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect, useMemo, useState } from 'react'\r\nimport clsx from 'clsx'\r\nimport { FormBuilder } from './formbuilder/FormBuilder'\r\nimport { SimpleModal } from './simplemodal/SimpleModal'\r\n\r\n\r\nexport const SurveyPage = ({ page, onComplete, onChange, onNextPage, onPrevPage, defaultValues }) => {\r\n  const allowProceed = useMemo(() => page.settings?.allowProceed, [page, page.thisId])\r\n  const [currentPageIsComplete, setCurrentPageIsComplete] = useState(false)\r\n  const [modalContent, setModalContent] = useState({ show: false })\r\n  const [formData, setFormData] = useState(defaultValues)\r\n\r\n  const lockNextButton = () => {\r\n    if (allowProceed === true) {\r\n      setCurrentPageIsComplete(true)\r\n    } else {\r\n      setCurrentPageIsComplete(false)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPageIsComplete(allowProceed)\r\n  }, [allowProceed, setCurrentPageIsComplete])\r\n\r\n  const triggerNextPage = (e) => {\r\n    if (page.nextId) {\r\n      if (page.settings?.confirmMoveForward) {\r\n        const { title, text, buttons } = page.settings?.confirmMoveForward\r\n\r\n        setModalContent({\r\n          show: true,\r\n          title,\r\n          text,\r\n          buttons,\r\n          onAccept: () => {\r\n            setModalContent({ show: false })\r\n            lockNextButton()\r\n            onNextPage()\r\n          },\r\n          onReject: () => { setModalContent({ show: false }) }\r\n        })\r\n      } else {\r\n        setModalContent({ show: false })\r\n        lockNextButton()\r\n        onNextPage()\r\n      }\r\n    } else {\r\n      lockNextButton()\r\n      onNextPage()\r\n    }\r\n  }\r\n\r\n  const triggerPrevPage = (e) => {\r\n    if (page.prevId) {\r\n      onPrevPage()\r\n    }\r\n  }\r\n\r\n  const handleFormChanged = (formName, formData) => {\r\n    formData._timeComplete = new Date().getTime()\r\n    formData.timeComplete = new Date().toISOString()\r\n    setFormData(formData)\r\n    onChange(formName, formData)\r\n  }\r\n\r\n  const handleFormComplete = (formName, formData) => {\r\n    setFormData(formData)\r\n    setCurrentPageIsComplete(true)\r\n  }\r\n\r\n  const renderBackButton = () => {\r\n    if (page.settings?.allowMoveBack !== true) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <button className={clsx({\r\n        \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n      })} type=\"button\" onClick={triggerPrevPage}>\r\n        Zurück\r\n      </button>\r\n    )\r\n  }\r\n\r\n  const renderNextButton = () => {\r\n    if (page.nextId === null) {\r\n      page.labelNextPage = 'Umfrage beenden'\r\n    }\r\n\r\n    return (<button disabled={currentPageIsComplete === false && 'disabled'} className={clsx({\r\n      \"m-5 bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": currentPageIsComplete === false,\r\n      \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": currentPageIsComplete === true\r\n    })} type=\"button\" onClick={triggerNextPage}>\r\n      {page.labelNextPage || 'Weiter'}\r\n    </button>)\r\n  }\r\n\r\n  const backButton = renderBackButton()\r\n  const nextButton = renderNextButton()\r\n\r\n  const {\r\n    show,\r\n    title,\r\n    text,\r\n    buttons,\r\n    onAccept,\r\n    onReject\r\n  } = modalContent\r\n\r\n  const modalWindow = show ?\r\n    <SimpleModal\r\n      title={title}\r\n      text={text}\r\n      buttons={buttons}\r\n      onAccept={onAccept}\r\n      onReject={onReject}\r\n    />\r\n    : null\r\n\r\n  return (\r\n    <div key={page.thisId}>\r\n      {(page.sections?.length > 0) ?\r\n        <FormBuilder\r\n          formSections={page.sections}\r\n          formName={`page:${page.thisId.toString().padStart(2, '0')}`}\r\n          onFormChanged={handleFormChanged}\r\n          onFormComplete={handleFormComplete}\r\n          defaultValues={formData[page.thisId]}\r\n        /> :\r\n        null}\r\n\r\n      <div className=\"flex items-center justify-between\">\r\n        {backButton}\r\n        {nextButton}\r\n      </div>\r\n\r\n      {modalWindow}\r\n    </div>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { SurveyPage } from './SurveyPage'\r\n\r\n\r\nconst getPage = (pageSet, pageId) => {\r\n  const pages = pageSet.filter(val => val.thisId === pageId)\r\n  if (pages.length > 1) { console.error(`Found more than 1 page with id (${pageId})`) }\r\n  return pages[0]\r\n}\r\n\r\nconst getFirstPage = (pageSet) => {\r\n  const rootPages = pageSet.filter(val => val.prevId === null)\r\n  if (rootPages.length > 1) { console.error('Found more than 1 root page') }\r\n  return rootPages[0]\r\n}\r\n\r\nexport const SurveyQuestionaire = ({ pages, onChange, onComplete, defaultValues }) => {\r\n  const [currentPage, setCurrentPage] = useState(null)\r\n\r\n  if (!pages || pages.length < 1) {\r\n    console.error('No pages defined in survey')\r\n    return null\r\n  }\r\n\r\n  if (!currentPage) {\r\n    const firstPage = getFirstPage(pages)\r\n    if (firstPage && firstPage.thisId >= 0) {\r\n      setCurrentPage(firstPage)\r\n    }\r\n    return null\r\n  }\r\n\r\n  const triggerNextPage = () => {\r\n    if (currentPage.nextId) {\r\n      setCurrentPage(getPage(pages, currentPage.nextId))\r\n      window.scrollTo(0, 0)\r\n    } else {\r\n      onComplete()\r\n    }\r\n  }\r\n\r\n  const triggerPrevPage = () => {\r\n    if (currentPage.prevId) {\r\n      setCurrentPage(getPage(pages, currentPage.prevId))\r\n    }\r\n  }\r\n\r\n  const handleFormPageCompleted = (formName, formData) => {\r\n    //onComplete(formName, formData)\r\n  }\r\n\r\n  const handleFormPageChanged = (formName, formData) => {\r\n    onChange(formName, formData)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-end\">\r\n        <div className=\"text-white bg-gray-400 px-2 py-0\">\r\n          Seite: {currentPage.thisId}\r\n        </div>\r\n      </div>\r\n      <SurveyPage\r\n        page={currentPage}\r\n        onChange={handleFormPageChanged}\r\n        onComplete={handleFormPageCompleted}\r\n        onNextPage={triggerNextPage}\r\n        onPrevPage={triggerPrevPage}\r\n        defaultValues={defaultValues[currentPage.thisId] || {}}\r\n      />\r\n    </>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { SurveyQuestionaire } from './SurveyQuestionaire'\r\n\r\n\r\nexport const SurveyManager = ({ ruleSet, onSaveData, sessionId }) => {\r\n  const [surveyIsComplete, setSurveyIsComplete] = useState(false)\r\n  const [surveyData, setSurveyData] = useState({\r\n    sessionId: sessionId,\r\n    surveyId: ruleSet.meta.surveyId\r\n  })\r\n\r\n  const handleQuestionaireComplete = (pageId, data) => {\r\n    let sd = Object.assign({}, surveyData)\r\n    sd[pageId] = data\r\n    delete sd.undefined\r\n    onSaveData(sd)\r\n    setSurveyIsComplete(true)\r\n  }\r\n\r\n  const handleQuestionaireChange = (pageId, data) => {\r\n    let sd = Object.assign({}, surveyData)\r\n    sd[pageId] = data\r\n    setSurveyData(sd)\r\n  }\r\n\r\n  return surveyIsComplete ? (\r\n    <div className='flex h-screen'>\r\n      <div className='text-black font-bold text-3xl m-auto text-4xl'>\r\n        Umfrage beendet. Sie dürfen das Fenster jetzt schließen.\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <SurveyQuestionaire\r\n        sessionId={sessionId}\r\n        pages={ruleSet?.pages}\r\n        onChange={handleQuestionaireChange}\r\n        onComplete={handleQuestionaireComplete}\r\n        defaultValues={surveyData}\r\n      />\r\n    </>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nfunction escVal(val) {\r\n  return JSON.stringify(val)\r\n}\r\n\r\nfunction ExportApp() {\r\n  const [jsonIsValid, setJsonIsValid] = useState(false)\r\n  const [jsonParsed, setJsonParsed] = useState(false)\r\n  const [resultCsv, setResultCsv] = useState('')\r\n\r\n  function convertToCsv(headings, data) {\r\n    let res = ''\r\n    res += headings.map((val) => (`\"${val}\"`)).join(';') + '\\n'\r\n    data.forEach((line) => res += line.map((val) => (`${escVal(val || '')}`)).join(';') + '\\n')\r\n    return res\r\n  }\r\n\r\n  function resolveSearchHistory(searchTrials) {\r\n    let memTimeOpen = null\r\n\r\n    let cueReadingTimes = []\r\n    // initialize for every cue with 0\r\n    for (let i = 1; i <= 23; i++) {\r\n      cueReadingTimes[i] = 0\r\n    }\r\n\r\n    searchTrials.forEach(trial => {\r\n\r\n      if (trial.action === 'OPEN') {\r\n        memTimeOpen = trial.time_\r\n      }\r\n\r\n      if (trial.action === 'CLOSE') {\r\n        const diff = trial.time_ - memTimeOpen\r\n        memTimeOpen = null\r\n\r\n        if (trial.info?.url) {\r\n          cueReadingTimes[parseInt(trial.info?.url.match(/[0-9]+/gi), 10)] += diff\r\n        }\r\n      }\r\n    })\r\n\r\n    let foundCues = 0\r\n\r\n    const resCues = Object.keys(cueReadingTimes).map((k) => {\r\n      const v = cueReadingTimes[k]\r\n      if (v === 0) return [\"0\", \"0\"]\r\n      if (v >= 1) {\r\n        foundCues++\r\n        return [\"1\", v / 1000]\r\n      }\r\n    })\r\n\r\n    let totalTrials = 0\r\n    let tmp = []\r\n\r\n    const resSearches = searchTrials.reduce((acc, trial) => {\r\n      if (trial.action === 'SEARCH-FAILED' || trial.action === 'SEARCH-SUCCESS') {\r\n        if (tmp.indexOf(trial.info) == -1) {\r\n          tmp.push(trial.info)\r\n        }\r\n        totalTrials++\r\n        acc.push(trial.info)\r\n        acc.push(trial.action === 'SEARCH-SUCCESS' ? '1' : '0')\r\n      }\r\n      return acc\r\n    }, [])\r\n\r\n    const uniqueSearchTerms = tmp.length\r\n\r\n    return [\r\n      totalTrials,\r\n      uniqueSearchTerms,\r\n      foundCues,\r\n      resCues.flat(),\r\n      resSearches\r\n    ].flat()\r\n  }\r\n\r\n  function triggerExport(e) {\r\n    let csvDataLines = []\r\n    let headings = [\r\n      \"sessionId\",\r\n      \"startDate\",\r\n      \"totalTimeSecs\",\r\n      \"total1\",\r\n      \"total2\",\r\n      \"total3\",\r\n      'GClikelihoodpre', // q3:1\r\n      'ConfidencePre', // q3:2\r\n      'Condition', // p4_version\r\n      \"Paradoxicalstatement1\", // q4:1_v1\r\n      \"Paradoxicalstatement2\", // q4:2_v1\r\n      \"Paradoxicalstatement3\", // q4:3_v1\r\n      \"Interestingstatement1\", // q4:1_v2\r\n      \"Interestingstatement2\", // q4:2_v2\r\n      \"Interestingstatement3\", // q4:3_v2\r\n      \"BewertungCues\", // q6:1\r\n      \"GClikelihoodpost\", // q6:2\r\n      \"ConfidencePost\", // q6:3\r\n      \"WichtigsteInformationen\", // q6:4\r\n      \"Creativityscore1\", // q7:score1\r\n      \"Creativityscore2\", // q7:score2\r\n      \"MCParadoxicalstatements\", // q8:1\r\n      \"RealismCase\", // q8:2\r\n      \"DifficultyCase\", // q8:3\r\n      \"PositioninFirm\", // q9:1\r\n      \"Yearsinfirm\", // q9:2\r\n      \"MonthsAudit\", // q9:3\r\n      \"GoingconcernExperience\", // q9:4\r\n      \"FamiliarityAuditstandards\", // q9:5\r\n      \"Age\", // q9:6\r\n      \"Gender\", // q9:7\r\n      \"GewünschteInformationen\", // q10:1\r\n      \"Anmerkungen\", // q10:2\r\n      \"InfobyMail\", // q10:3\r\n      \"Mail\",  // q10:4\r\n      \"totalSearchTerms\",\r\n      \"uniqueSearchTerms\",\r\n      \"foundCues\",\r\n    ]\r\n\r\n    for (let i = 1; i <= 23; i++) {\r\n      headings.push(`cue${i}-open?`)\r\n      headings.push(`cue${i}-time`)\r\n    }\r\n\r\n    const res = Object.keys(jsonParsed.surveys['2022-going-concern']).map((key) => {\r\n      const val = jsonParsed.surveys['2022-going-concern'][key]['data']\r\n\r\n      let tmp = [\r\n        (val['sessionId'].toString().substring(0, 9) || \"\"),\r\n        (val['startDate']),\r\n        (val['completionTimeInSeconds']),\r\n        (Math.ceil((val['page:04']?.['_timeComplete'] - val['_startDate']) / 1000)),\r\n        (Math.ceil((val['page:05']?.['_timeComplete'] - val['page:04']?.['_timeComplete']) / 1000)),\r\n        (Math.ceil((val['_endDate'] - val['page:05']?.['_timeComplete']) / 1000)),\r\n        (val['page:03']?.[\"q3:1\"] || \"\"),\r\n        (val['page:03']?.[\"q3:2\"] || \"\"),\r\n        (val['page:04']?.[\"p4_version\"] ? \"2\" : \"1\"),\r\n        (val['page:04']?.[\"q4:1_v1\"] || \"\"),\r\n        (val['page:04']?.[\"q4:2_v1\"] || \"\"),\r\n        (val['page:04']?.[\"q4:3_v1\"] || \"\"),\r\n        (val['page:04']?.[\"q4:1_v2\"] || \"\"),\r\n        (val['page:04']?.[\"q4:2_v2\"] || \"\"),\r\n        (val['page:04']?.[\"q4:3_v2\"] || \"\"),\r\n        (val['page:06']?.[\"q6:1\"] || \"\"),\r\n        (val['page:06']?.[\"q6:2\"] || \"\"),\r\n        (val['page:06']?.[\"q6:3\"] || \"\"),\r\n        (val['page:06']?.[\"q6:4\"] || \"\"),\r\n        (val['page:07']?.[\"q7:1\"]?.[\"score1\"] || \"0\"),\r\n        (val['page:07']?.[\"q7:1\"]?.[\"score2\"] || \"0\"),\r\n        (val['page:08']?.[\"q8:1\"] || \"\"),\r\n        (val['page:08']?.[\"q8:2\"] || \"\"),\r\n        (val['page:08']?.[\"q8:3\"] || \"\"),\r\n        (val['page:09']?.[\"q9:1\"] || \"\"),\r\n        (val['page:09']?.[\"q9:2\"] || \"\"),\r\n        (val['page:09']?.[\"q9:3\"] || \"\"),\r\n        (val['page:09']?.[\"q9:4\"] || \"\"),\r\n        (val['page:09']?.[\"q9:5\"] || \"\"),\r\n        (val['page:09']?.[\"q9:6\"] || \"\"),\r\n        (val['page:09']?.[\"q9:7\"] || \"\"),\r\n        (val['page:10']?.[\"q10:1\"] || \"\"),\r\n        (val['page:10']?.[\"q10:2\"] || \"\"),\r\n        (val['page:10']?.[\"q10:3\"] || \"\"),\r\n        (val['page:10']?.[\"q10:4\"] || \"\"),\r\n        resolveSearchHistory(val['page:05']?.[\"q5:1_search_history\"]).flat()\r\n      ].flat()\r\n\r\n      return tmp\r\n    })\r\n\r\n    const csvRes = convertToCsv(headings, res)\r\n    setResultCsv(csvRes)\r\n  }\r\n\r\n  function checkIfJsonIsValid(e) {\r\n    const jsonTxt = e.target.value\r\n    if (jsonTxt.length > 0) {\r\n      try {\r\n        const jsonObj = JSON.parse(jsonTxt)\r\n        setJsonIsValid(true)\r\n        setJsonParsed(jsonObj)\r\n      } catch (error) {\r\n        setJsonIsValid(false)\r\n        setJsonParsed(null)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='p-10'>\r\n      <h3 className='text-2xl font-bold'>Export JSON To CSV</h3>\r\n      <p className='my-6'>Bitte den JSON Text aus dem Firebase export in dieses Feld kopieren und dann den Export-Button drücken.</p>\r\n\r\n      <p><label>JSON</label></p>\r\n      <textarea heigth=\"20\" cols=\"10\"\r\n        className=\"border border-black w-full h-96\"\r\n        onChange={checkIfJsonIsValid}\r\n      ></textarea>\r\n      <button className={clsx({\r\n        \"m-5 bg-blue-300 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed\": jsonIsValid === false,\r\n        \"m-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\": jsonIsValid === true\r\n      })} type=\"button\" onClick={triggerExport}>\r\n        Export\r\n      </button>\r\n\r\n      <p><label>CSV</label></p>\r\n      <textarea heigth=\"20\" cols=\"10\"\r\n        className=\"border border-black w-full h-96\"\r\n        onChange={checkIfJsonIsValid}\r\n        defaultValue={resultCsv}\r\n      ></textarea>\r\n      <p className='my-6'>Bitte den CSV Text in eine Datei mit der Endung .csv kopieren</p>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExportApp\r\n","import { useEffect, useState } from 'react'\r\nimport { SurveyManager } from './components/survey/SurveyManager'\r\nimport axios from 'axios'\r\nimport CryptoJS from 'crypto-js'\r\nimport sha256 from 'crypto-js/sha256'\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getDatabase, ref, set, push, child, update } from \"firebase/database\"\r\nimport { Routes, Route } from \"react-router-dom\"\r\nimport ExportApp from './ExportApp'\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCFasaqUqOltO4gxPbNmR4gYQqusN2Zthg\",\r\n  authDomain: \"escp-survey-2022.firebaseapp.com\",\r\n  databaseURL: \"https://escp-survey-2022-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"escp-survey-2022\",\r\n  storageBucket: \"escp-survey-2022.appspot.com\",\r\n  messagingSenderId: \"105376003688\",\r\n  appId: \"1:105376003688:web:8a1b08d2a162565648eddd\"\r\n}\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig)\r\nconst dbDatabase = getDatabase()\r\nconst startDate = new Date()\r\n\r\nconst getRandomHash = () => {\r\n  const hash = sha256(Math.random().toString() + new Date().getUTCMilliseconds.toString())\r\n  return hash.toString(CryptoJS.enc.Hex)\r\n}\r\n\r\nconst getDatePrefix = (now) => {\r\n  return now.getFullYear().toString() +\r\n    (now.getMonth() + 1).toString().padStart(2, '0') +\r\n    now.getDate().toString().padStart(2, '0') + '_' +\r\n    now.getHours().toString().padStart(2, '0') +\r\n    now.getMinutes().toString().padStart(2, '0') +\r\n    now.getSeconds().toString().padStart(2, '0') +\r\n    now.getMilliseconds().toString().padStart(2, '0')\r\n}\r\n\r\nconst surveySessionId = getRandomHash()\r\n\r\nconst writeToDatabase = (data) => {\r\n  const endDate = new Date()\r\n  data._startDate = startDate.getTime()\r\n  data.startDate = new Date(startDate).toISOString()\r\n  data._endDate = endDate.getTime()\r\n  data.endDate = new Date(endDate).toISOString()\r\n  data.completionTimeInMinutes = Math.round((data._endDate - data._startDate) / 60000)\r\n  data.completionTimeInSeconds = Math.round((data._endDate - data._startDate) / 1000)\r\n\r\n  const emailAddress = data['page:10']?.['q10:4']?.toString()\r\n  if (emailAddress) { data['page:10']['q10:4'] = 'moved to mailinglist' }\r\n\r\n  set(ref(dbDatabase, `surveys/${data.surveyId}/${getDatePrefix(endDate)}_${data.sessionId.toString().substr(0, 10)}`), {\r\n    data: data\r\n  })\r\n    .then(() => {\r\n      console.log('Survey Data Saved successfully!', data)\r\n    })\r\n    .catch((error) => {\r\n      console.error('Not Saved successfully!')\r\n    })\r\n\r\n  if (emailAddress && data['page:10']['q10:3'] === 'y') {\r\n\r\n    const newMailKey = push(child(ref(dbDatabase), `mailinglists/survey-${data.surveyId}`)).key\r\n    const updates = {}\r\n    updates[`mailinglists/survey-${data.surveyId}/` + newMailKey] = { email: emailAddress }\r\n\r\n    update(ref(dbDatabase), updates).then(() => {\r\n      console.log('E-Mail Saved successfully!')\r\n    })\r\n      .catch((error) => {\r\n        console.error('E-Mail Not Saved successfully!')\r\n      })\r\n  }\r\n}\r\n\r\nconst validateRuleSet = (unvalidatedRules) => {\r\n  // @TODO verify the structure of the survey.json (using ajv?) in order to avoid unnescessary problems with broken json\r\n\r\n  return unvalidatedRules\r\n}\r\n\r\nfunction SurveyApp() {\r\n  const [surveyControlData, setSurveyControlData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // this json contains the variables and steering commands for customizing survey\r\n    axios.get('./content/survey.json').then(response => {\r\n      const validRuleSet = validateRuleSet(response.data)\r\n\r\n      if (validRuleSet) {\r\n        setSurveyControlData(validRuleSet)\r\n      } else {\r\n        console.log('Control data invalid.')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return surveyControlData ? (\r\n    <div className=\"container max-w-screen-md ml-auto mr-auto\">\r\n      <SurveyManager ruleSet={surveyControlData} onSaveData={writeToDatabase} sessionId={surveySessionId} />\r\n    </div>\r\n  ) : (\r\n    <div className='flex h-screen'>\r\n      <div className='m-auto text-6xl'>Daten werden geladen...</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/export\" element={<ExportApp />} />\r\n        <Route path=\"/\" element={<SurveyApp />} />\r\n      </Routes>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}